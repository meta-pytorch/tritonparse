{"event_type":"compilation","pid":397690,"stack":[{"line":122,"name":"<module>","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"test_tensor_add()"},{"line":103,"name":"test_tensor_add","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"c_triton = tensor_add(a, b)"},{"line":75,"name":"tensor_add","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"add_kernel[grid](a, b, c, n_elements, BLOCK_SIZE)"},{"line":393,"name":"<lambda>","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"return lambda *args, **kwargs: self.run(grid=grid, warmup=False, *args, **kwargs)"},{"line":593,"name":"run","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"kernel = self._do_compile(key, signature, device, constexprs, options, attrs, warmup)"},{"line":773,"name":"_do_compile","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"kernel = self.compile(src, target=target, options=options.__dict__)"},{"line":267,"name":"compile","filename":"/scratch/findhao/pta/triton/python/triton/compiler/compiler.py","loc":"compilation_listener("},{"line":749,"name":"maybe_trace_triton","filename":"/scratch/findhao/tritonparse/tritonparse/structured_logging.py","loc":"trace_structured_triton("},{"line":663,"name":"trace_structured_triton","filename":"/scratch/findhao/tritonparse/tritonparse/structured_logging.py","loc":"metadata_dict[\"stack\"] = get_stack_trace()"}],"timestamp":"2025-07-12T00:12:07.%fZ","payload":{"metadata":{"cache_hit":true,"allowed_dot_input_precisions":["tf32","tf32x3","ieee"],"arch":"sm75","backend_name":"cuda","cluster_dims":[1,1,1],"debug":false,"default_dot_input_precision":"tf32","deprecated_fp8_dot_operand_dtypes":[],"enable_fp_fusion":true,"extern_libs":[["libdevice","/scratch/findhao/pta/triton/python/triton/backends/nvidia/lib/libdevice.10.bc"]],"global_scratch_align":1,"global_scratch_size":0,"hash":"cf963e35dd87ea37474583ccc63fa3316efb2d0f8b41c451a79440e753f96f4b","ir_override":null,"launch_cooperative_grid":false,"launch_pdl":false,"max_num_imprecise_acc_default":0,"maxnreg":null,"name":"add_kernel","num_ctas":1,"num_stages":3,"num_warps":4,"ptx_options":null,"ptx_version":null,"sanitize_overflow":true,"shared":0,"supported_fp8_dtypes":["fp8e4b15","fp8e5"],"target":{"backend":"cuda","arch":75,"warp_size":32},"tensordesc_meta":[],"tmem_size":0,"triton_version":"3.4.0","warp_size":32,"env":{},"src_attrs":{"(0,)":[["tt.divisibility",16]],"(1,)":[["tt.divisibility",16]],"(2,)":[["tt.divisibility",16]],"(3,)":[["tt.divisibility",16]]},"src_cache_key":"26ab2ae21280d58bf2e8132646e73bf5314c60bfba15d85c74a1ebb985ebee23","src_constants":{"(4,)":1024}},"file_path":{"add_kernel.source":"/home/findhao/.triton/cache/Z6LD4NO5Q7VDOR2FQPGMMP5DGFXPWLIPRNA4IUNHSRAOOU7ZN5FQ/add_kernel.source","add_kernel.ttir":"/home/findhao/.triton/cache/Z6LD4NO5Q7VDOR2FQPGMMP5DGFXPWLIPRNA4IUNHSRAOOU7ZN5FQ/add_kernel.ttir","add_kernel.ttgir":"/home/findhao/.triton/cache/Z6LD4NO5Q7VDOR2FQPGMMP5DGFXPWLIPRNA4IUNHSRAOOU7ZN5FQ/add_kernel.ttgir","add_kernel.llir":"/home/findhao/.triton/cache/Z6LD4NO5Q7VDOR2FQPGMMP5DGFXPWLIPRNA4IUNHSRAOOU7ZN5FQ/add_kernel.llir","add_kernel.ptx":"/home/findhao/.triton/cache/Z6LD4NO5Q7VDOR2FQPGMMP5DGFXPWLIPRNA4IUNHSRAOOU7ZN5FQ/add_kernel.ptx","add_kernel.cubin":"/home/findhao/.triton/cache/Z6LD4NO5Q7VDOR2FQPGMMP5DGFXPWLIPRNA4IUNHSRAOOU7ZN5FQ/add_kernel.cubin","add_kernel.json":"/home/findhao/.triton/cache/Z6LD4NO5Q7VDOR2FQPGMMP5DGFXPWLIPRNA4IUNHSRAOOU7ZN5FQ/add_kernel.json"},"file_content":{"add_kernel.ttir":"#loc = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":22:0)\nmodule {\n  tt.func public @add_kernel(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":22:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":22:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":22:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":22:0)) attributes {noinline = false} {\n    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<1024xi32> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<1024xi32> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<1024xi32> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<1024xi32> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<1024x!tt.ptr<f32>> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<1024x!tt.ptr<f32>> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<1024xf32> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<1024x!tt.ptr<f32>> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":29:24)\n#loc3 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":30:24)\n#loc4 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":31:41)\n#loc5 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":31:28)\n#loc6 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":32:21)\n#loc7 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":34:24)\n#loc8 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":34:16)\n#loc9 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":35:24)\n#loc10 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":35:16)\n#loc11 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":36:12)\n#loc12 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":37:21)\n#loc13 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":37:30)\n#loc14 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":37:4)\n","add_kernel.ttgir":"#blocked = #ttg.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>\n#loc = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":22:0)\nmodule attributes {\"ttg.num-ctas\" = 1 : i32, \"ttg.num-warps\" = 4 : i32, ttg.target = \"cuda:75\", \"ttg.threads-per-warp\" = 32 : i32} {\n  tt.func public @add_kernel(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":22:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":22:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":22:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":22:0)) attributes {noinline = false} {\n    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<1024xi32, #blocked> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<1024xi32, #blocked> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<1024xi32, #blocked> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<1024xf32, #blocked> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":29:24)\n#loc3 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":30:24)\n#loc4 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":31:41)\n#loc5 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":31:28)\n#loc6 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":32:21)\n#loc7 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":34:24)\n#loc8 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":34:16)\n#loc9 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":35:24)\n#loc10 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":35:16)\n#loc11 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":36:12)\n#loc12 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":37:21)\n#loc13 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":37:30)\n#loc14 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":37:4)\n","add_kernel.llir":"; ModuleID = 'LLVMDialectModule'\nsource_filename = \"LLVMDialectModule\"\ntarget datalayout = \"e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64\"\n\ndefine ptx_kernel void @add_kernel(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr #0 !dbg !5 {\n  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8\n  %7 = shl i32 %6, 10, !dbg !9\n  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10\n  %9 = shl nuw nsw i32 %8, 2, !dbg !10\n  %10 = and i32 %9, 508, !dbg !10\n  %11 = or disjoint i32 %10, %7, !dbg !11\n  %12 = or disjoint i32 %11, 512, !dbg !11\n  %13 = icmp slt i32 %11, %3, !dbg !12\n  %14 = icmp slt i32 %12, %3, !dbg !12\n  %15 = sext i32 %11 to i64, !dbg !13\n  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !13\n  %17 = sext i32 %12 to i64, !dbg !13\n  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !13\n  %19 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %16, i1 %13) #2, !dbg !14\n  %20 = extractvalue { i32, i32, i32, i32 } %19, 0, !dbg !14\n  %21 = extractvalue { i32, i32, i32, i32 } %19, 1, !dbg !14\n  %22 = extractvalue { i32, i32, i32, i32 } %19, 2, !dbg !14\n  %23 = extractvalue { i32, i32, i32, i32 } %19, 3, !dbg !14\n  %24 = bitcast i32 %20 to float, !dbg !14\n  %25 = bitcast i32 %21 to float, !dbg !14\n  %26 = bitcast i32 %22 to float, !dbg !14\n  %27 = bitcast i32 %23 to float, !dbg !14\n  %28 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %18, i1 %14) #2, !dbg !14\n  %29 = extractvalue { i32, i32, i32, i32 } %28, 0, !dbg !14\n  %30 = extractvalue { i32, i32, i32, i32 } %28, 1, !dbg !14\n  %31 = extractvalue { i32, i32, i32, i32 } %28, 2, !dbg !14\n  %32 = extractvalue { i32, i32, i32, i32 } %28, 3, !dbg !14\n  %33 = bitcast i32 %29 to float, !dbg !14\n  %34 = bitcast i32 %30 to float, !dbg !14\n  %35 = bitcast i32 %31 to float, !dbg !14\n  %36 = bitcast i32 %32 to float, !dbg !14\n  %37 = getelementptr float, ptr addrspace(1) %1, i64 %15, !dbg !15\n  %38 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !15\n  %39 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %37, i1 %13) #2, !dbg !16\n  %40 = extractvalue { i32, i32, i32, i32 } %39, 0, !dbg !16\n  %41 = extractvalue { i32, i32, i32, i32 } %39, 1, !dbg !16\n  %42 = extractvalue { i32, i32, i32, i32 } %39, 2, !dbg !16\n  %43 = extractvalue { i32, i32, i32, i32 } %39, 3, !dbg !16\n  %44 = bitcast i32 %40 to float, !dbg !16\n  %45 = bitcast i32 %41 to float, !dbg !16\n  %46 = bitcast i32 %42 to float, !dbg !16\n  %47 = bitcast i32 %43 to float, !dbg !16\n  %48 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %38, i1 %14) #2, !dbg !16\n  %49 = extractvalue { i32, i32, i32, i32 } %48, 0, !dbg !16\n  %50 = extractvalue { i32, i32, i32, i32 } %48, 1, !dbg !16\n  %51 = extractvalue { i32, i32, i32, i32 } %48, 2, !dbg !16\n  %52 = extractvalue { i32, i32, i32, i32 } %48, 3, !dbg !16\n  %53 = bitcast i32 %49 to float, !dbg !16\n  %54 = bitcast i32 %50 to float, !dbg !16\n  %55 = bitcast i32 %51 to float, !dbg !16\n  %56 = bitcast i32 %52 to float, !dbg !16\n  %57 = fadd float %24, %44, !dbg !17\n  %58 = fadd float %25, %45, !dbg !17\n  %59 = fadd float %26, %46, !dbg !17\n  %60 = fadd float %27, %47, !dbg !17\n  %61 = fadd float %33, %53, !dbg !17\n  %62 = fadd float %34, %54, !dbg !17\n  %63 = fadd float %35, %55, !dbg !17\n  %64 = fadd float %36, %56, !dbg !17\n  %65 = getelementptr float, ptr addrspace(1) %2, i64 %15, !dbg !18\n  %66 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !18\n  %67 = bitcast float %57 to i32, !dbg !19\n  %68 = bitcast float %58 to i32, !dbg !19\n  %69 = bitcast float %59 to i32, !dbg !19\n  %70 = bitcast float %60 to i32, !dbg !19\n  tail call void asm sideeffect \"@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };\", \"r,r,r,r,l,b\"(i32 %67, i32 %68, i32 %69, i32 %70, ptr addrspace(1) %65, i1 %13) #2, !dbg !19\n  %71 = bitcast float %61 to i32, !dbg !19\n  %72 = bitcast float %62 to i32, !dbg !19\n  %73 = bitcast float %63 to i32, !dbg !19\n  %74 = bitcast float %64 to i32, !dbg !19\n  tail call void asm sideeffect \"@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };\", \"r,r,r,r,l,b\"(i32 %71, i32 %72, i32 %73, i32 %74, ptr addrspace(1) %66, i1 %14) #2, !dbg !19\n  ret void, !dbg !20\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1\n\nattributes #0 = { \"nvvm.reqntid\"=\"128\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }\nattributes #2 = { nounwind }\n\n!llvm.dbg.cu = !{!0}\n!llvm.module.flags = !{!2, !3}\n!llvm.ident = !{!4}\n\n!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: \"triton\", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)\n!1 = !DIFile(filename: \"test_add.py\", directory: \"/scratch/findhao/tritonparse/tests\")\n!2 = !{i32 2, !\"Debug Info Version\", i32 3}\n!3 = !{i32 4, !\"nvvm-reflect-ftz\", i32 1}\n!4 = !{!\"clang version 3.8.0 (tags/RELEASE_380/final)\"}\n!5 = distinct !DISubprogram(name: \"add_kernel\", linkageName: \"add_kernel\", scope: !1, file: !1, line: 22, type: !6, scopeLine: 22, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)\n!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)\n!7 = !{}\n!8 = !DILocation(line: 29, column: 24, scope: !5)\n!9 = !DILocation(line: 30, column: 24, scope: !5)\n!10 = !DILocation(line: 31, column: 41, scope: !5)\n!11 = !DILocation(line: 31, column: 28, scope: !5)\n!12 = !DILocation(line: 32, column: 21, scope: !5)\n!13 = !DILocation(line: 34, column: 24, scope: !5)\n!14 = !DILocation(line: 34, column: 16, scope: !5)\n!15 = !DILocation(line: 35, column: 24, scope: !5)\n!16 = !DILocation(line: 35, column: 16, scope: !5)\n!17 = !DILocation(line: 36, column: 12, scope: !5)\n!18 = !DILocation(line: 37, column: 21, scope: !5)\n!19 = !DILocation(line: 37, column: 30, scope: !5)\n!20 = !DILocation(line: 37, column: 4, scope: !5)\n","add_kernel.ptx":"//\n// Generated by LLVM NVPTX Back-End\n//\n\n.version 8.7\n.target sm_75\n.address_size 64\n\n\t// .globl\tadd_kernel              // -- Begin function add_kernel\n                                        // @add_kernel\n.visible .entry add_kernel(\n\t.param .u64 .ptr .global .align 1 add_kernel_param_0,\n\t.param .u64 .ptr .global .align 1 add_kernel_param_1,\n\t.param .u64 .ptr .global .align 1 add_kernel_param_2,\n\t.param .u32 add_kernel_param_3,\n\t.param .u64 .ptr .global .align 1 add_kernel_param_4\n)\n.reqntid 128\n{\n\t.reg .pred \t%p<7>;\n\t.reg .b32 \t%r<33>;\n\t.reg .b64 \t%rd<11>;\n\t.loc\t1 22 0                          // test_add.py:22:0\n$L__func_begin0:\n\t.loc\t1 22 0                          // test_add.py:22:0\n\n// %bb.0:\n\tld.param.b64 \t%rd7, [add_kernel_param_0];\n\tld.param.b64 \t%rd8, [add_kernel_param_1];\n$L__tmp0:\n\t.loc\t1 29 24                         // test_add.py:29:24\n\tmov.u32 \t%r25, %ctaid.x;\n\t.loc\t1 30 24                         // test_add.py:30:24\n\tshl.b32 \t%r26, %r25, 10;\n\tld.param.b64 \t%rd9, [add_kernel_param_2];\n\tld.param.b32 \t%r27, [add_kernel_param_3];\n\t.loc\t1 31 41                         // test_add.py:31:41\n\tmov.u32 \t%r28, %tid.x;\n\tshl.b32 \t%r29, %r28, 2;\n\tand.b32 \t%r30, %r29, 508;\n\t.loc\t1 31 28                         // test_add.py:31:28\n\tor.b32 \t%r31, %r30, %r26;\n\tor.b32 \t%r32, %r31, 512;\n\t.loc\t1 32 21                         // test_add.py:32:21\n\tsetp.lt.s32 \t%p1, %r31, %r27;\n\tsetp.lt.s32 \t%p2, %r32, %r27;\n\t.loc\t1 34 24                         // test_add.py:34:24\n\tmul.wide.s32 \t%rd10, %r31, 4;\n\tadd.s64 \t%rd1, %rd7, %rd10;\n\tadd.s64 \t%rd2, %rd1, 2048;\n\t.loc\t1 34 16                         // test_add.py:34:16\n\t// begin inline asm\n\tmov.u32 %r1, 0x0;\n\tmov.u32 %r2, 0x0;\n\tmov.u32 %r3, 0x0;\n\tmov.u32 %r4, 0x0;\n\t@%p1 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];\n\t// end inline asm\n\t// begin inline asm\n\tmov.u32 %r5, 0x0;\n\tmov.u32 %r6, 0x0;\n\tmov.u32 %r7, 0x0;\n\tmov.u32 %r8, 0x0;\n\t@%p2 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];\n\t// end inline asm\n\t.loc\t1 35 24                         // test_add.py:35:24\n\tadd.s64 \t%rd3, %rd8, %rd10;\n\tadd.s64 \t%rd4, %rd3, 2048;\n\t.loc\t1 35 16                         // test_add.py:35:16\n\t// begin inline asm\n\tmov.u32 %r9, 0x0;\n\tmov.u32 %r10, 0x0;\n\tmov.u32 %r11, 0x0;\n\tmov.u32 %r12, 0x0;\n\t@%p1 ld.global.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd3 + 0 ];\n\t// end inline asm\n\t// begin inline asm\n\tmov.u32 %r13, 0x0;\n\tmov.u32 %r14, 0x0;\n\tmov.u32 %r15, 0x0;\n\tmov.u32 %r16, 0x0;\n\t@%p2 ld.global.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd4 + 0 ];\n\t// end inline asm\n\t.loc\t1 36 12                         // test_add.py:36:12\n\tadd.f32 \t%r17, %r1, %r9;\n\tadd.f32 \t%r18, %r2, %r10;\n\tadd.f32 \t%r19, %r3, %r11;\n\tadd.f32 \t%r20, %r4, %r12;\n\tadd.f32 \t%r21, %r5, %r13;\n\tadd.f32 \t%r22, %r6, %r14;\n\tadd.f32 \t%r23, %r7, %r15;\n\tadd.f32 \t%r24, %r8, %r16;\n\t.loc\t1 37 21                         // test_add.py:37:21\n\tadd.s64 \t%rd5, %rd9, %rd10;\n\tadd.s64 \t%rd6, %rd5, 2048;\n\t.loc\t1 37 30                         // test_add.py:37:30\n\t// begin inline asm\n\t@%p1 st.global.v4.b32 [ %rd5 + 0 ], { %r17, %r18, %r19, %r20 };\n\t// end inline asm\n\t// begin inline asm\n\t@%p2 st.global.v4.b32 [ %rd6 + 0 ], { %r21, %r22, %r23, %r24 };\n\t// end inline asm\n\t.loc\t1 37 4                          // test_add.py:37:4\n\tret;\n$L__tmp1:\n$L__func_end0:\n                                        // -- End function\n}\n\t.file\t1 \"/scratch/findhao/tritonparse/tests/test_add.py\"\n\t.section\t.debug_abbrev\n\t{\n.b8 1                                   // Abbreviation Code\n.b8 17                                  // DW_TAG_compile_unit\n.b8 0                                   // DW_CHILDREN_no\n.b8 37                                  // DW_AT_producer\n.b8 8                                   // DW_FORM_string\n.b8 19                                  // DW_AT_language\n.b8 5                                   // DW_FORM_data2\n.b8 3                                   // DW_AT_name\n.b8 8                                   // DW_FORM_string\n.b8 16                                  // DW_AT_stmt_list\n.b8 6                                   // DW_FORM_data4\n.b8 27                                  // DW_AT_comp_dir\n.b8 8                                   // DW_FORM_string\n.b8 0                                   // EOM(1)\n.b8 0                                   // EOM(2)\n.b8 0                                   // EOM(3)\n\t}\n\t.section\t.debug_info\n\t{\n.b32 68                                 // Length of Unit\n.b8 2                                   // DWARF version number\n.b8 0\n.b32 .debug_abbrev                      // Offset Into Abbrev. Section\n.b8 8                                   // Address Size (in bytes)\n.b8 1                                   // Abbrev [1] 0xb:0x3d DW_TAG_compile_unit\n.b8 116                                 // DW_AT_producer\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 0\n.b8 2                                   // DW_AT_language\n.b8 0\n.b8 116                                 // DW_AT_name\n.b8 101\n.b8 115\n.b8 116\n.b8 95\n.b8 97\n.b8 100\n.b8 100\n.b8 46\n.b8 112\n.b8 121\n.b8 0\n.b32 .debug_line                        // DW_AT_stmt_list\n.b8 47                                  // DW_AT_comp_dir\n.b8 115\n.b8 99\n.b8 114\n.b8 97\n.b8 116\n.b8 99\n.b8 104\n.b8 47\n.b8 102\n.b8 105\n.b8 110\n.b8 100\n.b8 104\n.b8 97\n.b8 111\n.b8 47\n.b8 116\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 112\n.b8 97\n.b8 114\n.b8 115\n.b8 101\n.b8 47\n.b8 116\n.b8 101\n.b8 115\n.b8 116\n.b8 115\n.b8 0\n\t}\n\t.section\t.debug_macinfo\t{\t}\n","add_kernel.json":"{\"hash\": \"cf963e35dd87ea37474583ccc63fa3316efb2d0f8b41c451a79440e753f96f4b\", \"target\": {\"backend\": \"cuda\", \"arch\": 75, \"warp_size\": 32}, \"num_warps\": 4, \"num_ctas\": 1, \"num_stages\": 3, \"warp_size\": 32, \"maxnreg\": null, \"cluster_dims\": [1, 1, 1], \"ptx_version\": null, \"ptx_options\": null, \"ir_override\": null, \"enable_fp_fusion\": true, \"launch_cooperative_grid\": false, \"launch_pdl\": false, \"supported_fp8_dtypes\": [\"fp8e4b15\", \"fp8e5\"], \"deprecated_fp8_dot_operand_dtypes\": [], \"default_dot_input_precision\": \"tf32\", \"allowed_dot_input_precisions\": [\"tf32\", \"tf32x3\", \"ieee\"], \"max_num_imprecise_acc_default\": 0, \"extern_libs\": [[\"libdevice\", \"/scratch/findhao/pta/triton/python/triton/backends/nvidia/lib/libdevice.10.bc\"]], \"debug\": false, \"backend_name\": \"cuda\", \"sanitize_overflow\": true, \"arch\": \"sm75\", \"triton_version\": \"3.4.0\", \"tensordesc_meta\": [], \"shared\": 0, \"tmem_size\": 0, \"global_scratch_size\": 0, \"global_scratch_align\": 1, \"name\": \"add_kernel\"}"},"python_source":{"file_path":"/scratch/findhao/tritonparse/tests/test_add.py","start_line":21,"end_line":38,"code":"@triton.jit\ndef add_kernel(\n    a_ptr,\n    b_ptr,\n    c_ptr,\n    n_elements,\n    BLOCK_SIZE: tl.constexpr,\n):\n    pid = tl.program_id(axis=0)\n    block_start = pid * BLOCK_SIZE\n    offsets = block_start + tl.arange(0, BLOCK_SIZE)\n    mask = offsets < n_elements\n\n    a = tl.load(a_ptr + offsets, mask=mask)\n    b = tl.load(b_ptr + offsets, mask=mask)\n    c = a + b\n    tl.store(c_ptr + offsets, c, mask=mask)\n"},"times":{"ir_initialization":3149674,"lowering_stages":[],"store_results":0},"source_mappings":{"ttir":{"1":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":22,"column":0,"ttir_line":1,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"3":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":22,"column":0,"ttir_line":3,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"4":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":22,"column":0,"ttir_line":4,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"5":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":29,"column":24,"ttir_line":5,"ttgir_lines":[6,27],"ptx_lines":[31,32]},"6":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":30,"column":24,"ttir_line":6,"ttgir_lines":[7,28],"ptx_lines":[33,34,35,36]},"7":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":41,"ttir_line":7,"ttgir_lines":[8,29],"ptx_lines":[37,38,39,40]},"8":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":28,"ttir_line":8,"ttgir_lines":[9,10,30],"ptx_lines":[41,42,43]},"9":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":28,"ttir_line":9,"ttgir_lines":[9,10,30],"ptx_lines":[41,42,43]},"10":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":32,"column":21,"ttir_line":10,"ttgir_lines":[11,12,31],"ptx_lines":[44,45,46]},"11":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":32,"column":21,"ttir_line":11,"ttgir_lines":[11,12,31],"ptx_lines":[44,45,46]},"12":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":24,"ttir_line":12,"ttgir_lines":[13,14,32],"ptx_lines":[47,48,49,50]},"13":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":24,"ttir_line":13,"ttgir_lines":[13,14,32],"ptx_lines":[47,48,49,50]},"14":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":16,"ttir_line":14,"ttgir_lines":[15,33],"ptx_lines":[51,53,54,55,56,57,60,61,62,63,64]},"15":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":24,"ttir_line":15,"ttgir_lines":[16,17,34],"ptx_lines":[66,67,68]},"16":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":24,"ttir_line":16,"ttgir_lines":[16,17,34],"ptx_lines":[66,67,68]},"17":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":16,"ttir_line":17,"ttgir_lines":[18,35],"ptx_lines":[69,71,72,73,74,75,78,79,80,81,82]},"18":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":36,"column":12,"ttir_line":18,"ttgir_lines":[19,36],"ptx_lines":[84,85,86,87,88,89,90,91,92]},"19":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":21,"ttir_line":19,"ttgir_lines":[20,21,37],"ptx_lines":[93,94,95]},"20":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":21,"ttir_line":20,"ttgir_lines":[20,21,37],"ptx_lines":[93,94,95]},"21":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":30,"ttir_line":21,"ttgir_lines":[22,38],"ptx_lines":[96,98,101]},"22":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":4,"ttir_line":22,"ttgir_lines":[23,39],"ptx_lines":[103,104,105,106]},"26":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":29,"column":24,"ttir_line":26,"ttgir_lines":[6,27],"ptx_lines":[31,32]},"27":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":30,"column":24,"ttir_line":27,"ttgir_lines":[7,28],"ptx_lines":[33,34,35,36]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":41,"ttir_line":28,"ttgir_lines":[8,29],"ptx_lines":[37,38,39,40]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":28,"ttir_line":29,"ttgir_lines":[9,10,30],"ptx_lines":[41,42,43]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":32,"column":21,"ttir_line":30,"ttgir_lines":[11,12,31],"ptx_lines":[44,45,46]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":24,"ttir_line":31,"ttgir_lines":[13,14,32],"ptx_lines":[47,48,49,50]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":16,"ttir_line":32,"ttgir_lines":[15,33],"ptx_lines":[51,53,54,55,56,57,60,61,62,63,64]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":24,"ttir_line":33,"ttgir_lines":[16,17,34],"ptx_lines":[66,67,68]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":16,"ttir_line":34,"ttgir_lines":[18,35],"ptx_lines":[69,71,72,73,74,75,78,79,80,81,82]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":36,"column":12,"ttir_line":35,"ttgir_lines":[19,36],"ptx_lines":[84,85,86,87,88,89,90,91,92]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":21,"ttir_line":36,"ttgir_lines":[20,21,37],"ptx_lines":[93,94,95]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":30,"ttir_line":37,"ttgir_lines":[22,38],"ptx_lines":[96,98,101]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":4,"ttir_line":38,"ttgir_lines":[23,39],"ptx_lines":[103,104,105,106]}},"ttgir":{"2":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":22,"column":0,"ttgir_line":2,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"4":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":22,"column":0,"ttgir_line":4,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"5":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":22,"column":0,"ttgir_line":5,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"6":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":29,"column":24,"ttgir_line":6,"ttir_lines":[5,26],"ptx_lines":[31,32]},"7":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":30,"column":24,"ttgir_line":7,"ttir_lines":[6,27],"ptx_lines":[33,34,35,36]},"8":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":41,"ttgir_line":8,"ttir_lines":[7,28],"ptx_lines":[37,38,39,40]},"9":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":28,"ttgir_line":9,"ttir_lines":[8,9,29],"ptx_lines":[41,42,43]},"10":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":28,"ttgir_line":10,"ttir_lines":[8,9,29],"ptx_lines":[41,42,43]},"11":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":32,"column":21,"ttgir_line":11,"ttir_lines":[10,11,30],"ptx_lines":[44,45,46]},"12":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":32,"column":21,"ttgir_line":12,"ttir_lines":[10,11,30],"ptx_lines":[44,45,46]},"13":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":24,"ttgir_line":13,"ttir_lines":[12,13,31],"ptx_lines":[47,48,49,50]},"14":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":24,"ttgir_line":14,"ttir_lines":[12,13,31],"ptx_lines":[47,48,49,50]},"15":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":16,"ttgir_line":15,"ttir_lines":[14,32],"ptx_lines":[51,53,54,55,56,57,60,61,62,63,64]},"16":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":24,"ttgir_line":16,"ttir_lines":[15,16,33],"ptx_lines":[66,67,68]},"17":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":24,"ttgir_line":17,"ttir_lines":[15,16,33],"ptx_lines":[66,67,68]},"18":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":16,"ttgir_line":18,"ttir_lines":[17,34],"ptx_lines":[69,71,72,73,74,75,78,79,80,81,82]},"19":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":36,"column":12,"ttgir_line":19,"ttir_lines":[18,35],"ptx_lines":[84,85,86,87,88,89,90,91,92]},"20":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":21,"ttgir_line":20,"ttir_lines":[19,20,36],"ptx_lines":[93,94,95]},"21":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":21,"ttgir_line":21,"ttir_lines":[19,20,36],"ptx_lines":[93,94,95]},"22":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":30,"ttgir_line":22,"ttir_lines":[21,37],"ptx_lines":[96,98,101]},"23":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":4,"ttgir_line":23,"ttir_lines":[22,38],"ptx_lines":[103,104,105,106]},"27":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":29,"column":24,"ttgir_line":27,"ttir_lines":[5,26],"ptx_lines":[31,32]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":30,"column":24,"ttgir_line":28,"ttir_lines":[6,27],"ptx_lines":[33,34,35,36]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":41,"ttgir_line":29,"ttir_lines":[7,28],"ptx_lines":[37,38,39,40]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":28,"ttgir_line":30,"ttir_lines":[8,9,29],"ptx_lines":[41,42,43]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":32,"column":21,"ttgir_line":31,"ttir_lines":[10,11,30],"ptx_lines":[44,45,46]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":24,"ttgir_line":32,"ttir_lines":[12,13,31],"ptx_lines":[47,48,49,50]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":16,"ttgir_line":33,"ttir_lines":[14,32],"ptx_lines":[51,53,54,55,56,57,60,61,62,63,64]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":24,"ttgir_line":34,"ttir_lines":[15,16,33],"ptx_lines":[66,67,68]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":16,"ttgir_line":35,"ttir_lines":[17,34],"ptx_lines":[69,71,72,73,74,75,78,79,80,81,82]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":36,"column":12,"ttgir_line":36,"ttir_lines":[18,35],"ptx_lines":[84,85,86,87,88,89,90,91,92]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":21,"ttgir_line":37,"ttir_lines":[19,20,36],"ptx_lines":[93,94,95]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":30,"ttgir_line":38,"ttir_lines":[21,37],"ptx_lines":[96,98,101]},"39":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":4,"ttgir_line":39,"ttir_lines":[22,38],"ptx_lines":[103,104,105,106]}},"ptx":{"23":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":22,"column":0,"ptx_line":23,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"24":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":22,"column":0,"ptx_line":24,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"25":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":22,"column":0,"ptx_line":25,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":22,"column":0,"ptx_line":28,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":22,"column":0,"ptx_line":29,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":22,"column":0,"ptx_line":30,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":29,"column":24,"ptx_line":31,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":29,"column":24,"ptx_line":32,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":30,"column":24,"ptx_line":33,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":30,"column":24,"ptx_line":34,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":30,"column":24,"ptx_line":35,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":30,"column":24,"ptx_line":36,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":41,"ptx_line":37,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":41,"ptx_line":38,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"39":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":41,"ptx_line":39,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"40":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":41,"ptx_line":40,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"41":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":28,"ptx_line":41,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"42":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":28,"ptx_line":42,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"43":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":31,"column":28,"ptx_line":43,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"44":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":32,"column":21,"ptx_line":44,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"45":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":32,"column":21,"ptx_line":45,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"46":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":32,"column":21,"ptx_line":46,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"47":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":24,"ptx_line":47,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"48":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":24,"ptx_line":48,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"49":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":24,"ptx_line":49,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"50":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":24,"ptx_line":50,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"51":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":16,"ptx_line":51,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"53":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":16,"ptx_line":53,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"54":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":16,"ptx_line":54,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"55":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":16,"ptx_line":55,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"56":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":16,"ptx_line":56,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"57":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":16,"ptx_line":57,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"60":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":16,"ptx_line":60,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"61":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":16,"ptx_line":61,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"62":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":16,"ptx_line":62,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"63":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":16,"ptx_line":63,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"64":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":34,"column":16,"ptx_line":64,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"66":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":24,"ptx_line":66,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"67":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":24,"ptx_line":67,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"68":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":24,"ptx_line":68,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"69":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":16,"ptx_line":69,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"71":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":16,"ptx_line":71,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"72":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":16,"ptx_line":72,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"73":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":16,"ptx_line":73,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"74":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":16,"ptx_line":74,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"75":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":16,"ptx_line":75,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"78":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":16,"ptx_line":78,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"79":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":16,"ptx_line":79,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"80":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":16,"ptx_line":80,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"81":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":16,"ptx_line":81,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"82":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":35,"column":16,"ptx_line":82,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"84":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":36,"column":12,"ptx_line":84,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"85":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":36,"column":12,"ptx_line":85,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"86":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":36,"column":12,"ptx_line":86,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"87":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":36,"column":12,"ptx_line":87,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"88":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":36,"column":12,"ptx_line":88,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"89":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":36,"column":12,"ptx_line":89,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"90":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":36,"column":12,"ptx_line":90,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"91":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":36,"column":12,"ptx_line":91,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"92":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":36,"column":12,"ptx_line":92,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"93":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":21,"ptx_line":93,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"94":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":21,"ptx_line":94,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"95":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":21,"ptx_line":95,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"96":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":30,"ptx_line":96,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"98":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":30,"ptx_line":98,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"101":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":30,"ptx_line":101,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"103":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":4,"ptx_line":103,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"104":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":4,"ptx_line":104,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"105":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":4,"ptx_line":105,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"106":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":37,"column":4,"ptx_line":106,"ttir_lines":[22,38],"ttgir_lines":[23,39]}},"python":{"22":{"ttir_lines":["1","3","4"],"ttgir_lines":["2","4","5"],"ptx_lines":["23","24","25","28","29","30"]},"29":{"ttir_lines":["5","26"],"ttgir_lines":["6","27"],"ptx_lines":["31","32"]},"30":{"ttir_lines":["6","27"],"ttgir_lines":["7","28"],"ptx_lines":["33","34","35","36"]},"31":{"ttir_lines":["7","8","9","28","29"],"ttgir_lines":["8","9","10","29","30"],"ptx_lines":["37","38","39","40","41","42","43"]},"32":{"ttir_lines":["10","11","30"],"ttgir_lines":["11","12","31"],"ptx_lines":["44","45","46"]},"34":{"ttir_lines":["12","13","14","31","32"],"ttgir_lines":["13","14","15","32","33"],"ptx_lines":["47","48","49","50","51","53","54","55","56","57","60","61","62","63","64"]},"35":{"ttir_lines":["15","16","17","33","34"],"ttgir_lines":["16","17","18","34","35"],"ptx_lines":["66","67","68","69","71","72","73","74","75","78","79","80","81","82"]},"36":{"ttir_lines":["18","35"],"ttgir_lines":["19","36"],"ptx_lines":["84","85","86","87","88","89","90","91","92"]},"37":{"ttir_lines":["19","20","21","22","36","37","38"],"ttgir_lines":["20","21","22","23","37","38","39"],"ptx_lines":["93","94","95","96","98","101","103","104","105","106"]}}}}}
{"event_type":"compilation","pid":397690,"stack":[{"line":122,"name":"<module>","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"test_tensor_add()"},{"line":110,"name":"test_tensor_add","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"c_autotune = tensor_add_autotune(a, b)"},{"line":86,"name":"tensor_add_autotune","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"add_kernel_autotune[grid](a, b, c, n_elements)"},{"line":393,"name":"<lambda>","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"return lambda *args, **kwargs: self.run(grid=grid, warmup=False, *args, **kwargs)"},{"line":238,"name":"run","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"benchmark()"},{"line":227,"name":"benchmark","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"timings = {config: self._bench(*args, config=config, **kwargs) for config in pruned_configs}"},{"line":227,"name":"<dictcomp>","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"timings = {config: self._bench(*args, config=config, **kwargs) for config in pruned_configs}"},{"line":162,"name":"_bench","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"return self.do_bench(kernel_call, quantiles=(0.5, 0.2, 0.8))"},{"line":149,"name":"do_bench","filename":"/scratch/findhao/pta/triton/python/triton/testing.py","loc":"fn()"},{"line":148,"name":"kernel_call","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"self.fn.run("},{"line":593,"name":"run","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"kernel = self._do_compile(key, signature, device, constexprs, options, attrs, warmup)"},{"line":773,"name":"_do_compile","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"kernel = self.compile(src, target=target, options=options.__dict__)"},{"line":267,"name":"compile","filename":"/scratch/findhao/pta/triton/python/triton/compiler/compiler.py","loc":"compilation_listener("},{"line":749,"name":"maybe_trace_triton","filename":"/scratch/findhao/tritonparse/tritonparse/structured_logging.py","loc":"trace_structured_triton("},{"line":663,"name":"trace_structured_triton","filename":"/scratch/findhao/tritonparse/tritonparse/structured_logging.py","loc":"metadata_dict[\"stack\"] = get_stack_trace()"}],"timestamp":"2025-07-12T00:12:07.%fZ","payload":{"metadata":{"cache_hit":true,"allowed_dot_input_precisions":["tf32","tf32x3","ieee"],"arch":"sm75","backend_name":"cuda","cluster_dims":[1,1,1],"debug":false,"default_dot_input_precision":"tf32","deprecated_fp8_dot_operand_dtypes":[],"enable_fp_fusion":true,"extern_libs":[["libdevice","/scratch/findhao/pta/triton/python/triton/backends/nvidia/lib/libdevice.10.bc"]],"global_scratch_align":1,"global_scratch_size":0,"hash":"e6fd9df327eb660177883cb2ccad18997263e167dcc3c0b72c29fa88aa03a65a","ir_override":null,"launch_cooperative_grid":false,"launch_pdl":false,"max_num_imprecise_acc_default":0,"maxnreg":null,"name":"add_kernel_autotune","num_ctas":1,"num_stages":3,"num_warps":4,"ptx_options":null,"ptx_version":null,"sanitize_overflow":true,"shared":0,"supported_fp8_dtypes":["fp8e4b15","fp8e5"],"target":{"backend":"cuda","arch":75,"warp_size":32},"tensordesc_meta":[],"tmem_size":0,"triton_version":"3.4.0","warp_size":32,"env":{},"src_attrs":{"(0,)":[["tt.divisibility",16]],"(1,)":[["tt.divisibility",16]],"(2,)":[["tt.divisibility",16]],"(3,)":[["tt.divisibility",16]]},"src_cache_key":"76406c901d8e56daf0a0c235b17a75782a2f000550da58009999fb0e5085082a","src_constants":{"(4,)":256}},"file_path":{"add_kernel_autotune.source":"/home/findhao/.triton/cache/436Z34ZH5NTAC54IHSZMZLIYTFZGHYLH3TB4BNZMFH5IRKQDUZNA/add_kernel_autotune.source","add_kernel_autotune.ttir":"/home/findhao/.triton/cache/436Z34ZH5NTAC54IHSZMZLIYTFZGHYLH3TB4BNZMFH5IRKQDUZNA/add_kernel_autotune.ttir","add_kernel_autotune.ttgir":"/home/findhao/.triton/cache/436Z34ZH5NTAC54IHSZMZLIYTFZGHYLH3TB4BNZMFH5IRKQDUZNA/add_kernel_autotune.ttgir","add_kernel_autotune.llir":"/home/findhao/.triton/cache/436Z34ZH5NTAC54IHSZMZLIYTFZGHYLH3TB4BNZMFH5IRKQDUZNA/add_kernel_autotune.llir","add_kernel_autotune.ptx":"/home/findhao/.triton/cache/436Z34ZH5NTAC54IHSZMZLIYTFZGHYLH3TB4BNZMFH5IRKQDUZNA/add_kernel_autotune.ptx","add_kernel_autotune.cubin":"/home/findhao/.triton/cache/436Z34ZH5NTAC54IHSZMZLIYTFZGHYLH3TB4BNZMFH5IRKQDUZNA/add_kernel_autotune.cubin","add_kernel_autotune.json":"/home/findhao/.triton/cache/436Z34ZH5NTAC54IHSZMZLIYTFZGHYLH3TB4BNZMFH5IRKQDUZNA/add_kernel_autotune.json"},"file_content":{"add_kernel_autotune.ttir":"#loc = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)\nmodule {\n  tt.func public @add_kernel_autotune(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)) attributes {noinline = false} {\n    %c256_i32 = arith.constant 256 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<256xi32> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<256xi32> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<256x!tt.ptr<f32>> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<256x!tt.ptr<f32>> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<256xf32> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<256x!tt.ptr<f32>> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":59:24)\n#loc3 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":60:24)\n#loc4 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:41)\n#loc5 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:28)\n#loc6 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":62:21)\n#loc7 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:24)\n#loc8 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:16)\n#loc9 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:24)\n#loc10 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:16)\n#loc11 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":66:12)\n#loc12 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:21)\n#loc13 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:30)\n#loc14 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:4)\n","add_kernel_autotune.ttgir":"#blocked = #ttg.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>\n#loc = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)\nmodule attributes {\"ttg.num-ctas\" = 1 : i32, \"ttg.num-warps\" = 4 : i32, ttg.target = \"cuda:75\", \"ttg.threads-per-warp\" = 32 : i32} {\n  tt.func public @add_kernel_autotune(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)) attributes {noinline = false} {\n    %c256_i32 = arith.constant 256 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<256xi32, #blocked> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<256xi32, #blocked> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<256xf32, #blocked> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":59:24)\n#loc3 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":60:24)\n#loc4 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:41)\n#loc5 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:28)\n#loc6 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":62:21)\n#loc7 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:24)\n#loc8 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:16)\n#loc9 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:24)\n#loc10 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:16)\n#loc11 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":66:12)\n#loc12 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:21)\n#loc13 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:30)\n#loc14 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:4)\n","add_kernel_autotune.llir":"; ModuleID = 'LLVMDialectModule'\nsource_filename = \"LLVMDialectModule\"\ntarget datalayout = \"e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64\"\n\ndefine ptx_kernel void @add_kernel_autotune(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr #0 !dbg !5 {\n  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8\n  %7 = shl i32 %6, 8, !dbg !9\n  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10\n  %9 = shl nuw nsw i32 %8, 1, !dbg !10\n  %10 = and i32 %9, 254, !dbg !10\n  %11 = or disjoint i32 %10, %7, !dbg !11\n  %12 = icmp slt i32 %11, %3, !dbg !12\n  %13 = sext i32 %11 to i64, !dbg !13\n  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !13\n  %15 = tail call { i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\", \"=r,=r,l,b\"(ptr addrspace(1) %14, i1 %12) #2, !dbg !14\n  %16 = extractvalue { i32, i32 } %15, 0, !dbg !14\n  %17 = extractvalue { i32, i32 } %15, 1, !dbg !14\n  %18 = bitcast i32 %16 to float, !dbg !14\n  %19 = bitcast i32 %17 to float, !dbg !14\n  %20 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !15\n  %21 = tail call { i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\", \"=r,=r,l,b\"(ptr addrspace(1) %20, i1 %12) #2, !dbg !16\n  %22 = extractvalue { i32, i32 } %21, 0, !dbg !16\n  %23 = extractvalue { i32, i32 } %21, 1, !dbg !16\n  %24 = bitcast i32 %22 to float, !dbg !16\n  %25 = bitcast i32 %23 to float, !dbg !16\n  %26 = fadd float %18, %24, !dbg !17\n  %27 = fadd float %19, %25, !dbg !17\n  %28 = getelementptr float, ptr addrspace(1) %2, i64 %13, !dbg !18\n  %29 = bitcast float %26 to i32, !dbg !19\n  %30 = bitcast float %27 to i32, !dbg !19\n  tail call void asm sideeffect \"@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };\", \"r,r,l,b\"(i32 %29, i32 %30, ptr addrspace(1) %28, i1 %12) #2, !dbg !19\n  ret void, !dbg !20\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1\n\nattributes #0 = { \"nvvm.reqntid\"=\"128\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }\nattributes #2 = { nounwind }\n\n!llvm.dbg.cu = !{!0}\n!llvm.module.flags = !{!2, !3}\n!llvm.ident = !{!4}\n\n!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: \"triton\", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)\n!1 = !DIFile(filename: \"test_add.py\", directory: \"/scratch/findhao/tritonparse/tests\")\n!2 = !{i32 2, !\"Debug Info Version\", i32 3}\n!3 = !{i32 4, !\"nvvm-reflect-ftz\", i32 1}\n!4 = !{!\"clang version 3.8.0 (tags/RELEASE_380/final)\"}\n!5 = distinct !DISubprogram(name: \"add_kernel_autotune\", linkageName: \"add_kernel_autotune\", scope: !1, file: !1, line: 52, type: !6, scopeLine: 52, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)\n!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)\n!7 = !{}\n!8 = !DILocation(line: 59, column: 24, scope: !5)\n!9 = !DILocation(line: 60, column: 24, scope: !5)\n!10 = !DILocation(line: 61, column: 41, scope: !5)\n!11 = !DILocation(line: 61, column: 28, scope: !5)\n!12 = !DILocation(line: 62, column: 21, scope: !5)\n!13 = !DILocation(line: 64, column: 24, scope: !5)\n!14 = !DILocation(line: 64, column: 16, scope: !5)\n!15 = !DILocation(line: 65, column: 24, scope: !5)\n!16 = !DILocation(line: 65, column: 16, scope: !5)\n!17 = !DILocation(line: 66, column: 12, scope: !5)\n!18 = !DILocation(line: 67, column: 21, scope: !5)\n!19 = !DILocation(line: 67, column: 30, scope: !5)\n!20 = !DILocation(line: 67, column: 4, scope: !5)\n","add_kernel_autotune.ptx":"//\n// Generated by LLVM NVPTX Back-End\n//\n\n.version 8.7\n.target sm_75\n.address_size 64\n\n\t// .globl\tadd_kernel_autotune     // -- Begin function add_kernel_autotune\n                                        // @add_kernel_autotune\n.visible .entry add_kernel_autotune(\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_0,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_1,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_2,\n\t.param .u32 add_kernel_autotune_param_3,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_4\n)\n.reqntid 128\n{\n\t.reg .pred \t%p<4>;\n\t.reg .b32 \t%r<14>;\n\t.reg .b64 \t%rd<8>;\n\t.loc\t1 52 0                          // test_add.py:52:0\n$L__func_begin0:\n\t.loc\t1 52 0                          // test_add.py:52:0\n\n// %bb.0:\n\tld.param.b64 \t%rd4, [add_kernel_autotune_param_0];\n\tld.param.b64 \t%rd5, [add_kernel_autotune_param_1];\n$L__tmp0:\n\t.loc\t1 59 24                         // test_add.py:59:24\n\tmov.u32 \t%r7, %ctaid.x;\n\t.loc\t1 60 24                         // test_add.py:60:24\n\tshl.b32 \t%r8, %r7, 8;\n\tld.param.b64 \t%rd6, [add_kernel_autotune_param_2];\n\tld.param.b32 \t%r9, [add_kernel_autotune_param_3];\n\t.loc\t1 61 41                         // test_add.py:61:41\n\tmov.u32 \t%r10, %tid.x;\n\tshl.b32 \t%r11, %r10, 1;\n\tand.b32 \t%r12, %r11, 254;\n\t.loc\t1 61 28                         // test_add.py:61:28\n\tor.b32 \t%r13, %r12, %r8;\n\t.loc\t1 62 21                         // test_add.py:62:21\n\tsetp.lt.s32 \t%p1, %r13, %r9;\n\t.loc\t1 64 24                         // test_add.py:64:24\n\tmul.wide.s32 \t%rd7, %r13, 4;\n\tadd.s64 \t%rd1, %rd4, %rd7;\n\t.loc\t1 64 16                         // test_add.py:64:16\n\t// begin inline asm\n\tmov.u32 %r1, 0x0;\n\tmov.u32 %r2, 0x0;\n\t@%p1 ld.global.v2.b32 { %r1, %r2 }, [ %rd1 + 0 ];\n\t// end inline asm\n\t.loc\t1 65 24                         // test_add.py:65:24\n\tadd.s64 \t%rd2, %rd5, %rd7;\n\t.loc\t1 65 16                         // test_add.py:65:16\n\t// begin inline asm\n\tmov.u32 %r3, 0x0;\n\tmov.u32 %r4, 0x0;\n\t@%p1 ld.global.v2.b32 { %r3, %r4 }, [ %rd2 + 0 ];\n\t// end inline asm\n\t.loc\t1 66 12                         // test_add.py:66:12\n\tadd.f32 \t%r5, %r1, %r3;\n\tadd.f32 \t%r6, %r2, %r4;\n\t.loc\t1 67 21                         // test_add.py:67:21\n\tadd.s64 \t%rd3, %rd6, %rd7;\n\t.loc\t1 67 30                         // test_add.py:67:30\n\t// begin inline asm\n\t@%p1 st.global.v2.b32 [ %rd3 + 0 ], { %r5, %r6 };\n\t// end inline asm\n\t.loc\t1 67 4                          // test_add.py:67:4\n\tret;\n$L__tmp1:\n$L__func_end0:\n                                        // -- End function\n}\n\t.file\t1 \"/scratch/findhao/tritonparse/tests/test_add.py\"\n\t.section\t.debug_abbrev\n\t{\n.b8 1                                   // Abbreviation Code\n.b8 17                                  // DW_TAG_compile_unit\n.b8 0                                   // DW_CHILDREN_no\n.b8 37                                  // DW_AT_producer\n.b8 8                                   // DW_FORM_string\n.b8 19                                  // DW_AT_language\n.b8 5                                   // DW_FORM_data2\n.b8 3                                   // DW_AT_name\n.b8 8                                   // DW_FORM_string\n.b8 16                                  // DW_AT_stmt_list\n.b8 6                                   // DW_FORM_data4\n.b8 27                                  // DW_AT_comp_dir\n.b8 8                                   // DW_FORM_string\n.b8 0                                   // EOM(1)\n.b8 0                                   // EOM(2)\n.b8 0                                   // EOM(3)\n\t}\n\t.section\t.debug_info\n\t{\n.b32 68                                 // Length of Unit\n.b8 2                                   // DWARF version number\n.b8 0\n.b32 .debug_abbrev                      // Offset Into Abbrev. Section\n.b8 8                                   // Address Size (in bytes)\n.b8 1                                   // Abbrev [1] 0xb:0x3d DW_TAG_compile_unit\n.b8 116                                 // DW_AT_producer\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 0\n.b8 2                                   // DW_AT_language\n.b8 0\n.b8 116                                 // DW_AT_name\n.b8 101\n.b8 115\n.b8 116\n.b8 95\n.b8 97\n.b8 100\n.b8 100\n.b8 46\n.b8 112\n.b8 121\n.b8 0\n.b32 .debug_line                        // DW_AT_stmt_list\n.b8 47                                  // DW_AT_comp_dir\n.b8 115\n.b8 99\n.b8 114\n.b8 97\n.b8 116\n.b8 99\n.b8 104\n.b8 47\n.b8 102\n.b8 105\n.b8 110\n.b8 100\n.b8 104\n.b8 97\n.b8 111\n.b8 47\n.b8 116\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 112\n.b8 97\n.b8 114\n.b8 115\n.b8 101\n.b8 47\n.b8 116\n.b8 101\n.b8 115\n.b8 116\n.b8 115\n.b8 0\n\t}\n\t.section\t.debug_macinfo\t{\t}\n","add_kernel_autotune.json":"{\"hash\": \"e6fd9df327eb660177883cb2ccad18997263e167dcc3c0b72c29fa88aa03a65a\", \"target\": {\"backend\": \"cuda\", \"arch\": 75, \"warp_size\": 32}, \"num_warps\": 4, \"num_ctas\": 1, \"num_stages\": 3, \"warp_size\": 32, \"maxnreg\": null, \"cluster_dims\": [1, 1, 1], \"ptx_version\": null, \"ptx_options\": null, \"ir_override\": null, \"enable_fp_fusion\": true, \"launch_cooperative_grid\": false, \"launch_pdl\": false, \"supported_fp8_dtypes\": [\"fp8e4b15\", \"fp8e5\"], \"deprecated_fp8_dot_operand_dtypes\": [], \"default_dot_input_precision\": \"tf32\", \"allowed_dot_input_precisions\": [\"tf32\", \"tf32x3\", \"ieee\"], \"max_num_imprecise_acc_default\": 0, \"extern_libs\": [[\"libdevice\", \"/scratch/findhao/pta/triton/python/triton/backends/nvidia/lib/libdevice.10.bc\"]], \"debug\": false, \"backend_name\": \"cuda\", \"sanitize_overflow\": true, \"arch\": \"sm75\", \"triton_version\": \"3.4.0\", \"tensordesc_meta\": [], \"shared\": 0, \"tmem_size\": 0, \"global_scratch_size\": 0, \"global_scratch_align\": 1, \"name\": \"add_kernel_autotune\"}"},"python_source":{"file_path":"/scratch/findhao/tritonparse/tests/test_add.py","start_line":40,"end_line":68,"code":"@triton.autotune(\n    configs=[\n        triton.Config({'BLOCK_SIZE': 256}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 512}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 1024}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 1024}, num_warps=8),\n        triton.Config({'BLOCK_SIZE': 2048}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 2048}, num_warps=8),\n    ],\n    key=['n_elements']\n)\n@triton.jit\ndef add_kernel_autotune(\n    a_ptr,\n    b_ptr,\n    c_ptr,\n    n_elements,\n    BLOCK_SIZE: tl.constexpr,\n):\n    pid = tl.program_id(axis=0)\n    block_start = pid * BLOCK_SIZE\n    offsets = block_start + tl.arange(0, BLOCK_SIZE)\n    mask = offsets < n_elements\n\n    a = tl.load(a_ptr + offsets, mask=mask)\n    b = tl.load(b_ptr + offsets, mask=mask)\n    c = a + b\n    tl.store(c_ptr + offsets, c, mask=mask)\n"},"times":{"ir_initialization":1063,"lowering_stages":[],"store_results":0},"source_mappings":{"ttir":{"1":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":1,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"3":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":3,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"4":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":4,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"5":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttir_line":5,"ttgir_lines":[6,27],"ptx_lines":[31,32]},"6":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttir_line":6,"ttgir_lines":[7,28],"ptx_lines":[33,34,35,36]},"7":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttir_line":7,"ttgir_lines":[8,29],"ptx_lines":[37,38,39,40]},"8":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":8,"ttgir_lines":[9,10,30],"ptx_lines":[41,42]},"9":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":9,"ttgir_lines":[9,10,30],"ptx_lines":[41,42]},"10":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":10,"ttgir_lines":[11,12,31],"ptx_lines":[43,44]},"11":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":11,"ttgir_lines":[11,12,31],"ptx_lines":[43,44]},"12":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":12,"ttgir_lines":[13,14,32],"ptx_lines":[45,46,47]},"13":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":13,"ttgir_lines":[13,14,32],"ptx_lines":[45,46,47]},"14":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttir_line":14,"ttgir_lines":[15,33],"ptx_lines":[48,50,51,52]},"15":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":15,"ttgir_lines":[16,17,34],"ptx_lines":[54,55]},"16":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":16,"ttgir_lines":[16,17,34],"ptx_lines":[54,55]},"17":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttir_line":17,"ttgir_lines":[18,35],"ptx_lines":[56,58,59,60]},"18":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttir_line":18,"ttgir_lines":[19,36],"ptx_lines":[62,63,64]},"19":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":19,"ttgir_lines":[20,21,37],"ptx_lines":[65,66]},"20":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":20,"ttgir_lines":[20,21,37],"ptx_lines":[65,66]},"21":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttir_line":21,"ttgir_lines":[22,38],"ptx_lines":[67,69]},"22":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttir_line":22,"ttgir_lines":[23,39],"ptx_lines":[71,72,73,74]},"26":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttir_line":26,"ttgir_lines":[6,27],"ptx_lines":[31,32]},"27":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttir_line":27,"ttgir_lines":[7,28],"ptx_lines":[33,34,35,36]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttir_line":28,"ttgir_lines":[8,29],"ptx_lines":[37,38,39,40]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":29,"ttgir_lines":[9,10,30],"ptx_lines":[41,42]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":30,"ttgir_lines":[11,12,31],"ptx_lines":[43,44]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":31,"ttgir_lines":[13,14,32],"ptx_lines":[45,46,47]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttir_line":32,"ttgir_lines":[15,33],"ptx_lines":[48,50,51,52]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":33,"ttgir_lines":[16,17,34],"ptx_lines":[54,55]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttir_line":34,"ttgir_lines":[18,35],"ptx_lines":[56,58,59,60]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttir_line":35,"ttgir_lines":[19,36],"ptx_lines":[62,63,64]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":36,"ttgir_lines":[20,21,37],"ptx_lines":[65,66]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttir_line":37,"ttgir_lines":[22,38],"ptx_lines":[67,69]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttir_line":38,"ttgir_lines":[23,39],"ptx_lines":[71,72,73,74]}},"ttgir":{"2":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":2,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"4":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":4,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"5":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":5,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"6":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttgir_line":6,"ttir_lines":[5,26],"ptx_lines":[31,32]},"7":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttgir_line":7,"ttir_lines":[6,27],"ptx_lines":[33,34,35,36]},"8":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttgir_line":8,"ttir_lines":[7,28],"ptx_lines":[37,38,39,40]},"9":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":9,"ttir_lines":[8,9,29],"ptx_lines":[41,42]},"10":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":10,"ttir_lines":[8,9,29],"ptx_lines":[41,42]},"11":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":11,"ttir_lines":[10,11,30],"ptx_lines":[43,44]},"12":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":12,"ttir_lines":[10,11,30],"ptx_lines":[43,44]},"13":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":13,"ttir_lines":[12,13,31],"ptx_lines":[45,46,47]},"14":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":14,"ttir_lines":[12,13,31],"ptx_lines":[45,46,47]},"15":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttgir_line":15,"ttir_lines":[14,32],"ptx_lines":[48,50,51,52]},"16":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":16,"ttir_lines":[15,16,33],"ptx_lines":[54,55]},"17":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":17,"ttir_lines":[15,16,33],"ptx_lines":[54,55]},"18":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttgir_line":18,"ttir_lines":[17,34],"ptx_lines":[56,58,59,60]},"19":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttgir_line":19,"ttir_lines":[18,35],"ptx_lines":[62,63,64]},"20":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":20,"ttir_lines":[19,20,36],"ptx_lines":[65,66]},"21":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":21,"ttir_lines":[19,20,36],"ptx_lines":[65,66]},"22":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttgir_line":22,"ttir_lines":[21,37],"ptx_lines":[67,69]},"23":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttgir_line":23,"ttir_lines":[22,38],"ptx_lines":[71,72,73,74]},"27":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttgir_line":27,"ttir_lines":[5,26],"ptx_lines":[31,32]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttgir_line":28,"ttir_lines":[6,27],"ptx_lines":[33,34,35,36]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttgir_line":29,"ttir_lines":[7,28],"ptx_lines":[37,38,39,40]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":30,"ttir_lines":[8,9,29],"ptx_lines":[41,42]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":31,"ttir_lines":[10,11,30],"ptx_lines":[43,44]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":32,"ttir_lines":[12,13,31],"ptx_lines":[45,46,47]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttgir_line":33,"ttir_lines":[14,32],"ptx_lines":[48,50,51,52]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":34,"ttir_lines":[15,16,33],"ptx_lines":[54,55]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttgir_line":35,"ttir_lines":[17,34],"ptx_lines":[56,58,59,60]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttgir_line":36,"ttir_lines":[18,35],"ptx_lines":[62,63,64]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":37,"ttir_lines":[19,20,36],"ptx_lines":[65,66]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttgir_line":38,"ttir_lines":[21,37],"ptx_lines":[67,69]},"39":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttgir_line":39,"ttir_lines":[22,38],"ptx_lines":[71,72,73,74]}},"ptx":{"23":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":23,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"24":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":24,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"25":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":25,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":28,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":29,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":30,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ptx_line":31,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ptx_line":32,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":33,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":34,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":35,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":36,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":37,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":38,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"39":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":39,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"40":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":40,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"41":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":41,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"42":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":42,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"43":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":43,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"44":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":44,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"45":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":45,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"46":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":46,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"47":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":47,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"48":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":48,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"50":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":50,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"51":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":51,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"52":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":52,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"54":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":54,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"55":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":55,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"56":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":56,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"58":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":58,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"59":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":59,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"60":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":60,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"62":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":62,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"63":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":63,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"64":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":64,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"65":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":65,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"66":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":66,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"67":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":67,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"69":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":69,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"71":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":71,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"72":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":72,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"73":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":73,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"74":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":74,"ttir_lines":[22,38],"ttgir_lines":[23,39]}},"python":{"52":{"ttir_lines":["1","3","4"],"ttgir_lines":["2","4","5"],"ptx_lines":["23","24","25","28","29","30"]},"59":{"ttir_lines":["5","26"],"ttgir_lines":["6","27"],"ptx_lines":["31","32"]},"60":{"ttir_lines":["6","27"],"ttgir_lines":["7","28"],"ptx_lines":["33","34","35","36"]},"61":{"ttir_lines":["7","8","9","28","29"],"ttgir_lines":["8","9","10","29","30"],"ptx_lines":["37","38","39","40","41","42"]},"62":{"ttir_lines":["10","11","30"],"ttgir_lines":["11","12","31"],"ptx_lines":["43","44"]},"64":{"ttir_lines":["12","13","14","31","32"],"ttgir_lines":["13","14","15","32","33"],"ptx_lines":["45","46","47","48","50","51","52"]},"65":{"ttir_lines":["15","16","17","33","34"],"ttgir_lines":["16","17","18","34","35"],"ptx_lines":["54","55","56","58","59","60"]},"66":{"ttir_lines":["18","35"],"ttgir_lines":["19","36"],"ptx_lines":["62","63","64"]},"67":{"ttir_lines":["19","20","21","22","36","37","38"],"ttgir_lines":["20","21","22","23","37","38","39"],"ptx_lines":["65","66","67","69","71","72","73","74"]}}}}}
{"event_type":"compilation","pid":397690,"stack":[{"line":122,"name":"<module>","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"test_tensor_add()"},{"line":110,"name":"test_tensor_add","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"c_autotune = tensor_add_autotune(a, b)"},{"line":86,"name":"tensor_add_autotune","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"add_kernel_autotune[grid](a, b, c, n_elements)"},{"line":393,"name":"<lambda>","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"return lambda *args, **kwargs: self.run(grid=grid, warmup=False, *args, **kwargs)"},{"line":238,"name":"run","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"benchmark()"},{"line":227,"name":"benchmark","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"timings = {config: self._bench(*args, config=config, **kwargs) for config in pruned_configs}"},{"line":227,"name":"<dictcomp>","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"timings = {config: self._bench(*args, config=config, **kwargs) for config in pruned_configs}"},{"line":162,"name":"_bench","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"return self.do_bench(kernel_call, quantiles=(0.5, 0.2, 0.8))"},{"line":149,"name":"do_bench","filename":"/scratch/findhao/pta/triton/python/triton/testing.py","loc":"fn()"},{"line":148,"name":"kernel_call","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"self.fn.run("},{"line":593,"name":"run","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"kernel = self._do_compile(key, signature, device, constexprs, options, attrs, warmup)"},{"line":773,"name":"_do_compile","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"kernel = self.compile(src, target=target, options=options.__dict__)"},{"line":267,"name":"compile","filename":"/scratch/findhao/pta/triton/python/triton/compiler/compiler.py","loc":"compilation_listener("},{"line":749,"name":"maybe_trace_triton","filename":"/scratch/findhao/tritonparse/tritonparse/structured_logging.py","loc":"trace_structured_triton("},{"line":663,"name":"trace_structured_triton","filename":"/scratch/findhao/tritonparse/tritonparse/structured_logging.py","loc":"metadata_dict[\"stack\"] = get_stack_trace()"}],"timestamp":"2025-07-12T00:12:07.%fZ","payload":{"metadata":{"cache_hit":true,"allowed_dot_input_precisions":["tf32","tf32x3","ieee"],"arch":"sm75","backend_name":"cuda","cluster_dims":[1,1,1],"debug":false,"default_dot_input_precision":"tf32","deprecated_fp8_dot_operand_dtypes":[],"enable_fp_fusion":true,"extern_libs":[["libdevice","/scratch/findhao/pta/triton/python/triton/backends/nvidia/lib/libdevice.10.bc"]],"global_scratch_align":1,"global_scratch_size":0,"hash":"c2ea5fc494b47817338d4554705f3b2ac7743aea934d2b6ffb5e522d65ce8307","ir_override":null,"launch_cooperative_grid":false,"launch_pdl":false,"max_num_imprecise_acc_default":0,"maxnreg":null,"name":"add_kernel_autotune","num_ctas":1,"num_stages":3,"num_warps":4,"ptx_options":null,"ptx_version":null,"sanitize_overflow":true,"shared":0,"supported_fp8_dtypes":["fp8e4b15","fp8e5"],"target":{"backend":"cuda","arch":75,"warp_size":32},"tensordesc_meta":[],"tmem_size":0,"triton_version":"3.4.0","warp_size":32,"env":{},"src_attrs":{"(0,)":[["tt.divisibility",16]],"(1,)":[["tt.divisibility",16]],"(2,)":[["tt.divisibility",16]],"(3,)":[["tt.divisibility",16]]},"src_cache_key":"76406c901d8e56daf0a0c235b17a75782a2f000550da58009999fb0e5085082a","src_constants":{"(4,)":512}},"file_path":{"add_kernel_autotune.source":"/home/findhao/.triton/cache/YLVF7REUWR4BOM4NIVKHAXZ3FLDXIOXKSNGSW373LZJC2ZOOQMDQ/add_kernel_autotune.source","add_kernel_autotune.ttir":"/home/findhao/.triton/cache/YLVF7REUWR4BOM4NIVKHAXZ3FLDXIOXKSNGSW373LZJC2ZOOQMDQ/add_kernel_autotune.ttir","add_kernel_autotune.ttgir":"/home/findhao/.triton/cache/YLVF7REUWR4BOM4NIVKHAXZ3FLDXIOXKSNGSW373LZJC2ZOOQMDQ/add_kernel_autotune.ttgir","add_kernel_autotune.llir":"/home/findhao/.triton/cache/YLVF7REUWR4BOM4NIVKHAXZ3FLDXIOXKSNGSW373LZJC2ZOOQMDQ/add_kernel_autotune.llir","add_kernel_autotune.ptx":"/home/findhao/.triton/cache/YLVF7REUWR4BOM4NIVKHAXZ3FLDXIOXKSNGSW373LZJC2ZOOQMDQ/add_kernel_autotune.ptx","add_kernel_autotune.cubin":"/home/findhao/.triton/cache/YLVF7REUWR4BOM4NIVKHAXZ3FLDXIOXKSNGSW373LZJC2ZOOQMDQ/add_kernel_autotune.cubin","add_kernel_autotune.json":"/home/findhao/.triton/cache/YLVF7REUWR4BOM4NIVKHAXZ3FLDXIOXKSNGSW373LZJC2ZOOQMDQ/add_kernel_autotune.json"},"file_content":{"add_kernel_autotune.ttir":"#loc = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)\nmodule {\n  tt.func public @add_kernel_autotune(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)) attributes {noinline = false} {\n    %c512_i32 = arith.constant 512 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<512xi32> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<512xi32> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<512xi32> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<512xi32> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<512x!tt.ptr<f32>> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<512x!tt.ptr<f32>> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<512xf32> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<512x!tt.ptr<f32>> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":59:24)\n#loc3 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":60:24)\n#loc4 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:41)\n#loc5 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:28)\n#loc6 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":62:21)\n#loc7 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:24)\n#loc8 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:16)\n#loc9 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:24)\n#loc10 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:16)\n#loc11 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":66:12)\n#loc12 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:21)\n#loc13 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:30)\n#loc14 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:4)\n","add_kernel_autotune.ttgir":"#blocked = #ttg.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>\n#loc = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)\nmodule attributes {\"ttg.num-ctas\" = 1 : i32, \"ttg.num-warps\" = 4 : i32, ttg.target = \"cuda:75\", \"ttg.threads-per-warp\" = 32 : i32} {\n  tt.func public @add_kernel_autotune(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)) attributes {noinline = false} {\n    %c512_i32 = arith.constant 512 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<512xi32, #blocked> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<512xi32, #blocked> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<512xf32, #blocked> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":59:24)\n#loc3 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":60:24)\n#loc4 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:41)\n#loc5 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:28)\n#loc6 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":62:21)\n#loc7 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:24)\n#loc8 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:16)\n#loc9 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:24)\n#loc10 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:16)\n#loc11 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":66:12)\n#loc12 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:21)\n#loc13 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:30)\n#loc14 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:4)\n","add_kernel_autotune.llir":"; ModuleID = 'LLVMDialectModule'\nsource_filename = \"LLVMDialectModule\"\ntarget datalayout = \"e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64\"\n\ndefine ptx_kernel void @add_kernel_autotune(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr #0 !dbg !5 {\n  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8\n  %7 = shl i32 %6, 9, !dbg !9\n  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10\n  %9 = shl nuw nsw i32 %8, 2, !dbg !10\n  %10 = and i32 %9, 508, !dbg !10\n  %11 = or disjoint i32 %10, %7, !dbg !11\n  %12 = icmp slt i32 %11, %3, !dbg !12\n  %13 = sext i32 %11 to i64, !dbg !13\n  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !13\n  %15 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %14, i1 %12) #2, !dbg !14\n  %16 = extractvalue { i32, i32, i32, i32 } %15, 0, !dbg !14\n  %17 = extractvalue { i32, i32, i32, i32 } %15, 1, !dbg !14\n  %18 = extractvalue { i32, i32, i32, i32 } %15, 2, !dbg !14\n  %19 = extractvalue { i32, i32, i32, i32 } %15, 3, !dbg !14\n  %20 = bitcast i32 %16 to float, !dbg !14\n  %21 = bitcast i32 %17 to float, !dbg !14\n  %22 = bitcast i32 %18 to float, !dbg !14\n  %23 = bitcast i32 %19 to float, !dbg !14\n  %24 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !15\n  %25 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %24, i1 %12) #2, !dbg !16\n  %26 = extractvalue { i32, i32, i32, i32 } %25, 0, !dbg !16\n  %27 = extractvalue { i32, i32, i32, i32 } %25, 1, !dbg !16\n  %28 = extractvalue { i32, i32, i32, i32 } %25, 2, !dbg !16\n  %29 = extractvalue { i32, i32, i32, i32 } %25, 3, !dbg !16\n  %30 = bitcast i32 %26 to float, !dbg !16\n  %31 = bitcast i32 %27 to float, !dbg !16\n  %32 = bitcast i32 %28 to float, !dbg !16\n  %33 = bitcast i32 %29 to float, !dbg !16\n  %34 = fadd float %20, %30, !dbg !17\n  %35 = fadd float %21, %31, !dbg !17\n  %36 = fadd float %22, %32, !dbg !17\n  %37 = fadd float %23, %33, !dbg !17\n  %38 = getelementptr float, ptr addrspace(1) %2, i64 %13, !dbg !18\n  %39 = bitcast float %34 to i32, !dbg !19\n  %40 = bitcast float %35 to i32, !dbg !19\n  %41 = bitcast float %36 to i32, !dbg !19\n  %42 = bitcast float %37 to i32, !dbg !19\n  tail call void asm sideeffect \"@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };\", \"r,r,r,r,l,b\"(i32 %39, i32 %40, i32 %41, i32 %42, ptr addrspace(1) %38, i1 %12) #2, !dbg !19\n  ret void, !dbg !20\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1\n\nattributes #0 = { \"nvvm.reqntid\"=\"128\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }\nattributes #2 = { nounwind }\n\n!llvm.dbg.cu = !{!0}\n!llvm.module.flags = !{!2, !3}\n!llvm.ident = !{!4}\n\n!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: \"triton\", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)\n!1 = !DIFile(filename: \"test_add.py\", directory: \"/scratch/findhao/tritonparse/tests\")\n!2 = !{i32 2, !\"Debug Info Version\", i32 3}\n!3 = !{i32 4, !\"nvvm-reflect-ftz\", i32 1}\n!4 = !{!\"clang version 3.8.0 (tags/RELEASE_380/final)\"}\n!5 = distinct !DISubprogram(name: \"add_kernel_autotune\", linkageName: \"add_kernel_autotune\", scope: !1, file: !1, line: 52, type: !6, scopeLine: 52, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)\n!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)\n!7 = !{}\n!8 = !DILocation(line: 59, column: 24, scope: !5)\n!9 = !DILocation(line: 60, column: 24, scope: !5)\n!10 = !DILocation(line: 61, column: 41, scope: !5)\n!11 = !DILocation(line: 61, column: 28, scope: !5)\n!12 = !DILocation(line: 62, column: 21, scope: !5)\n!13 = !DILocation(line: 64, column: 24, scope: !5)\n!14 = !DILocation(line: 64, column: 16, scope: !5)\n!15 = !DILocation(line: 65, column: 24, scope: !5)\n!16 = !DILocation(line: 65, column: 16, scope: !5)\n!17 = !DILocation(line: 66, column: 12, scope: !5)\n!18 = !DILocation(line: 67, column: 21, scope: !5)\n!19 = !DILocation(line: 67, column: 30, scope: !5)\n!20 = !DILocation(line: 67, column: 4, scope: !5)\n","add_kernel_autotune.ptx":"//\n// Generated by LLVM NVPTX Back-End\n//\n\n.version 8.7\n.target sm_75\n.address_size 64\n\n\t// .globl\tadd_kernel_autotune     // -- Begin function add_kernel_autotune\n                                        // @add_kernel_autotune\n.visible .entry add_kernel_autotune(\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_0,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_1,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_2,\n\t.param .u32 add_kernel_autotune_param_3,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_4\n)\n.reqntid 128\n{\n\t.reg .pred \t%p<4>;\n\t.reg .b32 \t%r<20>;\n\t.reg .b64 \t%rd<8>;\n\t.loc\t1 52 0                          // test_add.py:52:0\n$L__func_begin0:\n\t.loc\t1 52 0                          // test_add.py:52:0\n\n// %bb.0:\n\tld.param.b64 \t%rd4, [add_kernel_autotune_param_0];\n\tld.param.b64 \t%rd5, [add_kernel_autotune_param_1];\n$L__tmp0:\n\t.loc\t1 59 24                         // test_add.py:59:24\n\tmov.u32 \t%r13, %ctaid.x;\n\t.loc\t1 60 24                         // test_add.py:60:24\n\tshl.b32 \t%r14, %r13, 9;\n\tld.param.b64 \t%rd6, [add_kernel_autotune_param_2];\n\tld.param.b32 \t%r15, [add_kernel_autotune_param_3];\n\t.loc\t1 61 41                         // test_add.py:61:41\n\tmov.u32 \t%r16, %tid.x;\n\tshl.b32 \t%r17, %r16, 2;\n\tand.b32 \t%r18, %r17, 508;\n\t.loc\t1 61 28                         // test_add.py:61:28\n\tor.b32 \t%r19, %r18, %r14;\n\t.loc\t1 62 21                         // test_add.py:62:21\n\tsetp.lt.s32 \t%p1, %r19, %r15;\n\t.loc\t1 64 24                         // test_add.py:64:24\n\tmul.wide.s32 \t%rd7, %r19, 4;\n\tadd.s64 \t%rd1, %rd4, %rd7;\n\t.loc\t1 64 16                         // test_add.py:64:16\n\t// begin inline asm\n\tmov.u32 %r1, 0x0;\n\tmov.u32 %r2, 0x0;\n\tmov.u32 %r3, 0x0;\n\tmov.u32 %r4, 0x0;\n\t@%p1 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];\n\t// end inline asm\n\t.loc\t1 65 24                         // test_add.py:65:24\n\tadd.s64 \t%rd2, %rd5, %rd7;\n\t.loc\t1 65 16                         // test_add.py:65:16\n\t// begin inline asm\n\tmov.u32 %r5, 0x0;\n\tmov.u32 %r6, 0x0;\n\tmov.u32 %r7, 0x0;\n\tmov.u32 %r8, 0x0;\n\t@%p1 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];\n\t// end inline asm\n\t.loc\t1 66 12                         // test_add.py:66:12\n\tadd.f32 \t%r9, %r1, %r5;\n\tadd.f32 \t%r10, %r2, %r6;\n\tadd.f32 \t%r11, %r3, %r7;\n\tadd.f32 \t%r12, %r4, %r8;\n\t.loc\t1 67 21                         // test_add.py:67:21\n\tadd.s64 \t%rd3, %rd6, %rd7;\n\t.loc\t1 67 30                         // test_add.py:67:30\n\t// begin inline asm\n\t@%p1 st.global.v4.b32 [ %rd3 + 0 ], { %r9, %r10, %r11, %r12 };\n\t// end inline asm\n\t.loc\t1 67 4                          // test_add.py:67:4\n\tret;\n$L__tmp1:\n$L__func_end0:\n                                        // -- End function\n}\n\t.file\t1 \"/scratch/findhao/tritonparse/tests/test_add.py\"\n\t.section\t.debug_abbrev\n\t{\n.b8 1                                   // Abbreviation Code\n.b8 17                                  // DW_TAG_compile_unit\n.b8 0                                   // DW_CHILDREN_no\n.b8 37                                  // DW_AT_producer\n.b8 8                                   // DW_FORM_string\n.b8 19                                  // DW_AT_language\n.b8 5                                   // DW_FORM_data2\n.b8 3                                   // DW_AT_name\n.b8 8                                   // DW_FORM_string\n.b8 16                                  // DW_AT_stmt_list\n.b8 6                                   // DW_FORM_data4\n.b8 27                                  // DW_AT_comp_dir\n.b8 8                                   // DW_FORM_string\n.b8 0                                   // EOM(1)\n.b8 0                                   // EOM(2)\n.b8 0                                   // EOM(3)\n\t}\n\t.section\t.debug_info\n\t{\n.b32 68                                 // Length of Unit\n.b8 2                                   // DWARF version number\n.b8 0\n.b32 .debug_abbrev                      // Offset Into Abbrev. Section\n.b8 8                                   // Address Size (in bytes)\n.b8 1                                   // Abbrev [1] 0xb:0x3d DW_TAG_compile_unit\n.b8 116                                 // DW_AT_producer\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 0\n.b8 2                                   // DW_AT_language\n.b8 0\n.b8 116                                 // DW_AT_name\n.b8 101\n.b8 115\n.b8 116\n.b8 95\n.b8 97\n.b8 100\n.b8 100\n.b8 46\n.b8 112\n.b8 121\n.b8 0\n.b32 .debug_line                        // DW_AT_stmt_list\n.b8 47                                  // DW_AT_comp_dir\n.b8 115\n.b8 99\n.b8 114\n.b8 97\n.b8 116\n.b8 99\n.b8 104\n.b8 47\n.b8 102\n.b8 105\n.b8 110\n.b8 100\n.b8 104\n.b8 97\n.b8 111\n.b8 47\n.b8 116\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 112\n.b8 97\n.b8 114\n.b8 115\n.b8 101\n.b8 47\n.b8 116\n.b8 101\n.b8 115\n.b8 116\n.b8 115\n.b8 0\n\t}\n\t.section\t.debug_macinfo\t{\t}\n","add_kernel_autotune.json":"{\"hash\": \"c2ea5fc494b47817338d4554705f3b2ac7743aea934d2b6ffb5e522d65ce8307\", \"target\": {\"backend\": \"cuda\", \"arch\": 75, \"warp_size\": 32}, \"num_warps\": 4, \"num_ctas\": 1, \"num_stages\": 3, \"warp_size\": 32, \"maxnreg\": null, \"cluster_dims\": [1, 1, 1], \"ptx_version\": null, \"ptx_options\": null, \"ir_override\": null, \"enable_fp_fusion\": true, \"launch_cooperative_grid\": false, \"launch_pdl\": false, \"supported_fp8_dtypes\": [\"fp8e4b15\", \"fp8e5\"], \"deprecated_fp8_dot_operand_dtypes\": [], \"default_dot_input_precision\": \"tf32\", \"allowed_dot_input_precisions\": [\"tf32\", \"tf32x3\", \"ieee\"], \"max_num_imprecise_acc_default\": 0, \"extern_libs\": [[\"libdevice\", \"/scratch/findhao/pta/triton/python/triton/backends/nvidia/lib/libdevice.10.bc\"]], \"debug\": false, \"backend_name\": \"cuda\", \"sanitize_overflow\": true, \"arch\": \"sm75\", \"triton_version\": \"3.4.0\", \"tensordesc_meta\": [], \"shared\": 0, \"tmem_size\": 0, \"global_scratch_size\": 0, \"global_scratch_align\": 1, \"name\": \"add_kernel_autotune\"}"},"python_source":{"file_path":"/scratch/findhao/tritonparse/tests/test_add.py","start_line":40,"end_line":68,"code":"@triton.autotune(\n    configs=[\n        triton.Config({'BLOCK_SIZE': 256}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 512}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 1024}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 1024}, num_warps=8),\n        triton.Config({'BLOCK_SIZE': 2048}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 2048}, num_warps=8),\n    ],\n    key=['n_elements']\n)\n@triton.jit\ndef add_kernel_autotune(\n    a_ptr,\n    b_ptr,\n    c_ptr,\n    n_elements,\n    BLOCK_SIZE: tl.constexpr,\n):\n    pid = tl.program_id(axis=0)\n    block_start = pid * BLOCK_SIZE\n    offsets = block_start + tl.arange(0, BLOCK_SIZE)\n    mask = offsets < n_elements\n\n    a = tl.load(a_ptr + offsets, mask=mask)\n    b = tl.load(b_ptr + offsets, mask=mask)\n    c = a + b\n    tl.store(c_ptr + offsets, c, mask=mask)\n"},"times":{"ir_initialization":668,"lowering_stages":[],"store_results":0},"source_mappings":{"ttir":{"1":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":1,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"3":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":3,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"4":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":4,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"5":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttir_line":5,"ttgir_lines":[6,27],"ptx_lines":[31,32]},"6":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttir_line":6,"ttgir_lines":[7,28],"ptx_lines":[33,34,35,36]},"7":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttir_line":7,"ttgir_lines":[8,29],"ptx_lines":[37,38,39,40]},"8":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":8,"ttgir_lines":[9,10,30],"ptx_lines":[41,42]},"9":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":9,"ttgir_lines":[9,10,30],"ptx_lines":[41,42]},"10":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":10,"ttgir_lines":[11,12,31],"ptx_lines":[43,44]},"11":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":11,"ttgir_lines":[11,12,31],"ptx_lines":[43,44]},"12":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":12,"ttgir_lines":[13,14,32],"ptx_lines":[45,46,47]},"13":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":13,"ttgir_lines":[13,14,32],"ptx_lines":[45,46,47]},"14":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttir_line":14,"ttgir_lines":[15,33],"ptx_lines":[48,50,51,52,53,54]},"15":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":15,"ttgir_lines":[16,17,34],"ptx_lines":[56,57]},"16":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":16,"ttgir_lines":[16,17,34],"ptx_lines":[56,57]},"17":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttir_line":17,"ttgir_lines":[18,35],"ptx_lines":[58,60,61,62,63,64]},"18":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttir_line":18,"ttgir_lines":[19,36],"ptx_lines":[66,67,68,69,70]},"19":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":19,"ttgir_lines":[20,21,37],"ptx_lines":[71,72]},"20":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":20,"ttgir_lines":[20,21,37],"ptx_lines":[71,72]},"21":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttir_line":21,"ttgir_lines":[22,38],"ptx_lines":[73,75]},"22":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttir_line":22,"ttgir_lines":[23,39],"ptx_lines":[77,78,79,80]},"26":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttir_line":26,"ttgir_lines":[6,27],"ptx_lines":[31,32]},"27":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttir_line":27,"ttgir_lines":[7,28],"ptx_lines":[33,34,35,36]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttir_line":28,"ttgir_lines":[8,29],"ptx_lines":[37,38,39,40]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":29,"ttgir_lines":[9,10,30],"ptx_lines":[41,42]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":30,"ttgir_lines":[11,12,31],"ptx_lines":[43,44]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":31,"ttgir_lines":[13,14,32],"ptx_lines":[45,46,47]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttir_line":32,"ttgir_lines":[15,33],"ptx_lines":[48,50,51,52,53,54]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":33,"ttgir_lines":[16,17,34],"ptx_lines":[56,57]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttir_line":34,"ttgir_lines":[18,35],"ptx_lines":[58,60,61,62,63,64]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttir_line":35,"ttgir_lines":[19,36],"ptx_lines":[66,67,68,69,70]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":36,"ttgir_lines":[20,21,37],"ptx_lines":[71,72]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttir_line":37,"ttgir_lines":[22,38],"ptx_lines":[73,75]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttir_line":38,"ttgir_lines":[23,39],"ptx_lines":[77,78,79,80]}},"ttgir":{"2":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":2,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"4":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":4,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"5":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":5,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"6":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttgir_line":6,"ttir_lines":[5,26],"ptx_lines":[31,32]},"7":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttgir_line":7,"ttir_lines":[6,27],"ptx_lines":[33,34,35,36]},"8":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttgir_line":8,"ttir_lines":[7,28],"ptx_lines":[37,38,39,40]},"9":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":9,"ttir_lines":[8,9,29],"ptx_lines":[41,42]},"10":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":10,"ttir_lines":[8,9,29],"ptx_lines":[41,42]},"11":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":11,"ttir_lines":[10,11,30],"ptx_lines":[43,44]},"12":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":12,"ttir_lines":[10,11,30],"ptx_lines":[43,44]},"13":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":13,"ttir_lines":[12,13,31],"ptx_lines":[45,46,47]},"14":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":14,"ttir_lines":[12,13,31],"ptx_lines":[45,46,47]},"15":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttgir_line":15,"ttir_lines":[14,32],"ptx_lines":[48,50,51,52,53,54]},"16":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":16,"ttir_lines":[15,16,33],"ptx_lines":[56,57]},"17":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":17,"ttir_lines":[15,16,33],"ptx_lines":[56,57]},"18":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttgir_line":18,"ttir_lines":[17,34],"ptx_lines":[58,60,61,62,63,64]},"19":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttgir_line":19,"ttir_lines":[18,35],"ptx_lines":[66,67,68,69,70]},"20":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":20,"ttir_lines":[19,20,36],"ptx_lines":[71,72]},"21":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":21,"ttir_lines":[19,20,36],"ptx_lines":[71,72]},"22":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttgir_line":22,"ttir_lines":[21,37],"ptx_lines":[73,75]},"23":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttgir_line":23,"ttir_lines":[22,38],"ptx_lines":[77,78,79,80]},"27":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttgir_line":27,"ttir_lines":[5,26],"ptx_lines":[31,32]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttgir_line":28,"ttir_lines":[6,27],"ptx_lines":[33,34,35,36]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttgir_line":29,"ttir_lines":[7,28],"ptx_lines":[37,38,39,40]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":30,"ttir_lines":[8,9,29],"ptx_lines":[41,42]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":31,"ttir_lines":[10,11,30],"ptx_lines":[43,44]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":32,"ttir_lines":[12,13,31],"ptx_lines":[45,46,47]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttgir_line":33,"ttir_lines":[14,32],"ptx_lines":[48,50,51,52,53,54]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":34,"ttir_lines":[15,16,33],"ptx_lines":[56,57]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttgir_line":35,"ttir_lines":[17,34],"ptx_lines":[58,60,61,62,63,64]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttgir_line":36,"ttir_lines":[18,35],"ptx_lines":[66,67,68,69,70]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":37,"ttir_lines":[19,20,36],"ptx_lines":[71,72]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttgir_line":38,"ttir_lines":[21,37],"ptx_lines":[73,75]},"39":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttgir_line":39,"ttir_lines":[22,38],"ptx_lines":[77,78,79,80]}},"ptx":{"23":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":23,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"24":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":24,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"25":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":25,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":28,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":29,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":30,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ptx_line":31,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ptx_line":32,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":33,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":34,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":35,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":36,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":37,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":38,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"39":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":39,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"40":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":40,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"41":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":41,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"42":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":42,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"43":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":43,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"44":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":44,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"45":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":45,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"46":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":46,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"47":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":47,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"48":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":48,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"50":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":50,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"51":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":51,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"52":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":52,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"53":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":53,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"54":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":54,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"56":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":56,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"57":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":57,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"58":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":58,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"60":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":60,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"61":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":61,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"62":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":62,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"63":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":63,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"64":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":64,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"66":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":66,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"67":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":67,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"68":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":68,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"69":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":69,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"70":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":70,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"71":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":71,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"72":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":72,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"73":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":73,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"75":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":75,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"77":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":77,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"78":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":78,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"79":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":79,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"80":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":80,"ttir_lines":[22,38],"ttgir_lines":[23,39]}},"python":{"52":{"ttir_lines":["1","3","4"],"ttgir_lines":["2","4","5"],"ptx_lines":["23","24","25","28","29","30"]},"59":{"ttir_lines":["5","26"],"ttgir_lines":["6","27"],"ptx_lines":["31","32"]},"60":{"ttir_lines":["6","27"],"ttgir_lines":["7","28"],"ptx_lines":["33","34","35","36"]},"61":{"ttir_lines":["7","8","9","28","29"],"ttgir_lines":["8","9","10","29","30"],"ptx_lines":["37","38","39","40","41","42"]},"62":{"ttir_lines":["10","11","30"],"ttgir_lines":["11","12","31"],"ptx_lines":["43","44"]},"64":{"ttir_lines":["12","13","14","31","32"],"ttgir_lines":["13","14","15","32","33"],"ptx_lines":["45","46","47","48","50","51","52","53","54"]},"65":{"ttir_lines":["15","16","17","33","34"],"ttgir_lines":["16","17","18","34","35"],"ptx_lines":["56","57","58","60","61","62","63","64"]},"66":{"ttir_lines":["18","35"],"ttgir_lines":["19","36"],"ptx_lines":["66","67","68","69","70"]},"67":{"ttir_lines":["19","20","21","22","36","37","38"],"ttgir_lines":["20","21","22","23","37","38","39"],"ptx_lines":["71","72","73","75","77","78","79","80"]}}}}}
{"event_type":"compilation","pid":397690,"stack":[{"line":122,"name":"<module>","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"test_tensor_add()"},{"line":110,"name":"test_tensor_add","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"c_autotune = tensor_add_autotune(a, b)"},{"line":86,"name":"tensor_add_autotune","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"add_kernel_autotune[grid](a, b, c, n_elements)"},{"line":393,"name":"<lambda>","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"return lambda *args, **kwargs: self.run(grid=grid, warmup=False, *args, **kwargs)"},{"line":238,"name":"run","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"benchmark()"},{"line":227,"name":"benchmark","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"timings = {config: self._bench(*args, config=config, **kwargs) for config in pruned_configs}"},{"line":227,"name":"<dictcomp>","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"timings = {config: self._bench(*args, config=config, **kwargs) for config in pruned_configs}"},{"line":162,"name":"_bench","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"return self.do_bench(kernel_call, quantiles=(0.5, 0.2, 0.8))"},{"line":149,"name":"do_bench","filename":"/scratch/findhao/pta/triton/python/triton/testing.py","loc":"fn()"},{"line":148,"name":"kernel_call","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"self.fn.run("},{"line":593,"name":"run","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"kernel = self._do_compile(key, signature, device, constexprs, options, attrs, warmup)"},{"line":773,"name":"_do_compile","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"kernel = self.compile(src, target=target, options=options.__dict__)"},{"line":267,"name":"compile","filename":"/scratch/findhao/pta/triton/python/triton/compiler/compiler.py","loc":"compilation_listener("},{"line":749,"name":"maybe_trace_triton","filename":"/scratch/findhao/tritonparse/tritonparse/structured_logging.py","loc":"trace_structured_triton("},{"line":663,"name":"trace_structured_triton","filename":"/scratch/findhao/tritonparse/tritonparse/structured_logging.py","loc":"metadata_dict[\"stack\"] = get_stack_trace()"}],"timestamp":"2025-07-12T00:12:07.%fZ","payload":{"metadata":{"cache_hit":true,"allowed_dot_input_precisions":["tf32","tf32x3","ieee"],"arch":"sm75","backend_name":"cuda","cluster_dims":[1,1,1],"debug":false,"default_dot_input_precision":"tf32","deprecated_fp8_dot_operand_dtypes":[],"enable_fp_fusion":true,"extern_libs":[["libdevice","/scratch/findhao/pta/triton/python/triton/backends/nvidia/lib/libdevice.10.bc"]],"global_scratch_align":1,"global_scratch_size":0,"hash":"cd85312af45285eb8ff6c28be60702f387237d77833087fff4fefb3ded24c219","ir_override":null,"launch_cooperative_grid":false,"launch_pdl":false,"max_num_imprecise_acc_default":0,"maxnreg":null,"name":"add_kernel_autotune","num_ctas":1,"num_stages":3,"num_warps":4,"ptx_options":null,"ptx_version":null,"sanitize_overflow":true,"shared":0,"supported_fp8_dtypes":["fp8e4b15","fp8e5"],"target":{"backend":"cuda","arch":75,"warp_size":32},"tensordesc_meta":[],"tmem_size":0,"triton_version":"3.4.0","warp_size":32,"env":{},"src_attrs":{"(0,)":[["tt.divisibility",16]],"(1,)":[["tt.divisibility",16]],"(2,)":[["tt.divisibility",16]],"(3,)":[["tt.divisibility",16]]},"src_cache_key":"76406c901d8e56daf0a0c235b17a75782a2f000550da58009999fb0e5085082a","src_constants":{"(4,)":1024}},"file_path":{"add_kernel_autotune.source":"/home/findhao/.triton/cache/ZWCTCKXUKKC6XD7WYKF6MBYC6ODSG7LXQMYIP77U735T33JEYIMQ/add_kernel_autotune.source","add_kernel_autotune.ttir":"/home/findhao/.triton/cache/ZWCTCKXUKKC6XD7WYKF6MBYC6ODSG7LXQMYIP77U735T33JEYIMQ/add_kernel_autotune.ttir","add_kernel_autotune.ttgir":"/home/findhao/.triton/cache/ZWCTCKXUKKC6XD7WYKF6MBYC6ODSG7LXQMYIP77U735T33JEYIMQ/add_kernel_autotune.ttgir","add_kernel_autotune.llir":"/home/findhao/.triton/cache/ZWCTCKXUKKC6XD7WYKF6MBYC6ODSG7LXQMYIP77U735T33JEYIMQ/add_kernel_autotune.llir","add_kernel_autotune.ptx":"/home/findhao/.triton/cache/ZWCTCKXUKKC6XD7WYKF6MBYC6ODSG7LXQMYIP77U735T33JEYIMQ/add_kernel_autotune.ptx","add_kernel_autotune.cubin":"/home/findhao/.triton/cache/ZWCTCKXUKKC6XD7WYKF6MBYC6ODSG7LXQMYIP77U735T33JEYIMQ/add_kernel_autotune.cubin","add_kernel_autotune.json":"/home/findhao/.triton/cache/ZWCTCKXUKKC6XD7WYKF6MBYC6ODSG7LXQMYIP77U735T33JEYIMQ/add_kernel_autotune.json"},"file_content":{"add_kernel_autotune.ttir":"#loc = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)\nmodule {\n  tt.func public @add_kernel_autotune(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)) attributes {noinline = false} {\n    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<1024xi32> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<1024xi32> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<1024xi32> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<1024xi32> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<1024x!tt.ptr<f32>> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<1024x!tt.ptr<f32>> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<1024xf32> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<1024x!tt.ptr<f32>> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":59:24)\n#loc3 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":60:24)\n#loc4 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:41)\n#loc5 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:28)\n#loc6 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":62:21)\n#loc7 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:24)\n#loc8 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:16)\n#loc9 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:24)\n#loc10 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:16)\n#loc11 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":66:12)\n#loc12 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:21)\n#loc13 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:30)\n#loc14 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:4)\n","add_kernel_autotune.ttgir":"#blocked = #ttg.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>\n#loc = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)\nmodule attributes {\"ttg.num-ctas\" = 1 : i32, \"ttg.num-warps\" = 4 : i32, ttg.target = \"cuda:75\", \"ttg.threads-per-warp\" = 32 : i32} {\n  tt.func public @add_kernel_autotune(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)) attributes {noinline = false} {\n    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<1024xi32, #blocked> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<1024xi32, #blocked> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<1024xi32, #blocked> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<1024xf32, #blocked> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":59:24)\n#loc3 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":60:24)\n#loc4 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:41)\n#loc5 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:28)\n#loc6 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":62:21)\n#loc7 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:24)\n#loc8 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:16)\n#loc9 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:24)\n#loc10 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:16)\n#loc11 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":66:12)\n#loc12 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:21)\n#loc13 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:30)\n#loc14 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:4)\n","add_kernel_autotune.llir":"; ModuleID = 'LLVMDialectModule'\nsource_filename = \"LLVMDialectModule\"\ntarget datalayout = \"e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64\"\n\ndefine ptx_kernel void @add_kernel_autotune(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr #0 !dbg !5 {\n  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8\n  %7 = shl i32 %6, 10, !dbg !9\n  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10\n  %9 = shl nuw nsw i32 %8, 2, !dbg !10\n  %10 = and i32 %9, 508, !dbg !10\n  %11 = or disjoint i32 %10, %7, !dbg !11\n  %12 = or disjoint i32 %11, 512, !dbg !11\n  %13 = icmp slt i32 %11, %3, !dbg !12\n  %14 = icmp slt i32 %12, %3, !dbg !12\n  %15 = sext i32 %11 to i64, !dbg !13\n  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !13\n  %17 = sext i32 %12 to i64, !dbg !13\n  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !13\n  %19 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %16, i1 %13) #2, !dbg !14\n  %20 = extractvalue { i32, i32, i32, i32 } %19, 0, !dbg !14\n  %21 = extractvalue { i32, i32, i32, i32 } %19, 1, !dbg !14\n  %22 = extractvalue { i32, i32, i32, i32 } %19, 2, !dbg !14\n  %23 = extractvalue { i32, i32, i32, i32 } %19, 3, !dbg !14\n  %24 = bitcast i32 %20 to float, !dbg !14\n  %25 = bitcast i32 %21 to float, !dbg !14\n  %26 = bitcast i32 %22 to float, !dbg !14\n  %27 = bitcast i32 %23 to float, !dbg !14\n  %28 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %18, i1 %14) #2, !dbg !14\n  %29 = extractvalue { i32, i32, i32, i32 } %28, 0, !dbg !14\n  %30 = extractvalue { i32, i32, i32, i32 } %28, 1, !dbg !14\n  %31 = extractvalue { i32, i32, i32, i32 } %28, 2, !dbg !14\n  %32 = extractvalue { i32, i32, i32, i32 } %28, 3, !dbg !14\n  %33 = bitcast i32 %29 to float, !dbg !14\n  %34 = bitcast i32 %30 to float, !dbg !14\n  %35 = bitcast i32 %31 to float, !dbg !14\n  %36 = bitcast i32 %32 to float, !dbg !14\n  %37 = getelementptr float, ptr addrspace(1) %1, i64 %15, !dbg !15\n  %38 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !15\n  %39 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %37, i1 %13) #2, !dbg !16\n  %40 = extractvalue { i32, i32, i32, i32 } %39, 0, !dbg !16\n  %41 = extractvalue { i32, i32, i32, i32 } %39, 1, !dbg !16\n  %42 = extractvalue { i32, i32, i32, i32 } %39, 2, !dbg !16\n  %43 = extractvalue { i32, i32, i32, i32 } %39, 3, !dbg !16\n  %44 = bitcast i32 %40 to float, !dbg !16\n  %45 = bitcast i32 %41 to float, !dbg !16\n  %46 = bitcast i32 %42 to float, !dbg !16\n  %47 = bitcast i32 %43 to float, !dbg !16\n  %48 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %38, i1 %14) #2, !dbg !16\n  %49 = extractvalue { i32, i32, i32, i32 } %48, 0, !dbg !16\n  %50 = extractvalue { i32, i32, i32, i32 } %48, 1, !dbg !16\n  %51 = extractvalue { i32, i32, i32, i32 } %48, 2, !dbg !16\n  %52 = extractvalue { i32, i32, i32, i32 } %48, 3, !dbg !16\n  %53 = bitcast i32 %49 to float, !dbg !16\n  %54 = bitcast i32 %50 to float, !dbg !16\n  %55 = bitcast i32 %51 to float, !dbg !16\n  %56 = bitcast i32 %52 to float, !dbg !16\n  %57 = fadd float %24, %44, !dbg !17\n  %58 = fadd float %25, %45, !dbg !17\n  %59 = fadd float %26, %46, !dbg !17\n  %60 = fadd float %27, %47, !dbg !17\n  %61 = fadd float %33, %53, !dbg !17\n  %62 = fadd float %34, %54, !dbg !17\n  %63 = fadd float %35, %55, !dbg !17\n  %64 = fadd float %36, %56, !dbg !17\n  %65 = getelementptr float, ptr addrspace(1) %2, i64 %15, !dbg !18\n  %66 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !18\n  %67 = bitcast float %57 to i32, !dbg !19\n  %68 = bitcast float %58 to i32, !dbg !19\n  %69 = bitcast float %59 to i32, !dbg !19\n  %70 = bitcast float %60 to i32, !dbg !19\n  tail call void asm sideeffect \"@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };\", \"r,r,r,r,l,b\"(i32 %67, i32 %68, i32 %69, i32 %70, ptr addrspace(1) %65, i1 %13) #2, !dbg !19\n  %71 = bitcast float %61 to i32, !dbg !19\n  %72 = bitcast float %62 to i32, !dbg !19\n  %73 = bitcast float %63 to i32, !dbg !19\n  %74 = bitcast float %64 to i32, !dbg !19\n  tail call void asm sideeffect \"@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };\", \"r,r,r,r,l,b\"(i32 %71, i32 %72, i32 %73, i32 %74, ptr addrspace(1) %66, i1 %14) #2, !dbg !19\n  ret void, !dbg !20\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1\n\nattributes #0 = { \"nvvm.reqntid\"=\"128\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }\nattributes #2 = { nounwind }\n\n!llvm.dbg.cu = !{!0}\n!llvm.module.flags = !{!2, !3}\n!llvm.ident = !{!4}\n\n!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: \"triton\", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)\n!1 = !DIFile(filename: \"test_add.py\", directory: \"/scratch/findhao/tritonparse/tests\")\n!2 = !{i32 2, !\"Debug Info Version\", i32 3}\n!3 = !{i32 4, !\"nvvm-reflect-ftz\", i32 1}\n!4 = !{!\"clang version 3.8.0 (tags/RELEASE_380/final)\"}\n!5 = distinct !DISubprogram(name: \"add_kernel_autotune\", linkageName: \"add_kernel_autotune\", scope: !1, file: !1, line: 52, type: !6, scopeLine: 52, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)\n!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)\n!7 = !{}\n!8 = !DILocation(line: 59, column: 24, scope: !5)\n!9 = !DILocation(line: 60, column: 24, scope: !5)\n!10 = !DILocation(line: 61, column: 41, scope: !5)\n!11 = !DILocation(line: 61, column: 28, scope: !5)\n!12 = !DILocation(line: 62, column: 21, scope: !5)\n!13 = !DILocation(line: 64, column: 24, scope: !5)\n!14 = !DILocation(line: 64, column: 16, scope: !5)\n!15 = !DILocation(line: 65, column: 24, scope: !5)\n!16 = !DILocation(line: 65, column: 16, scope: !5)\n!17 = !DILocation(line: 66, column: 12, scope: !5)\n!18 = !DILocation(line: 67, column: 21, scope: !5)\n!19 = !DILocation(line: 67, column: 30, scope: !5)\n!20 = !DILocation(line: 67, column: 4, scope: !5)\n","add_kernel_autotune.ptx":"//\n// Generated by LLVM NVPTX Back-End\n//\n\n.version 8.7\n.target sm_75\n.address_size 64\n\n\t// .globl\tadd_kernel_autotune     // -- Begin function add_kernel_autotune\n                                        // @add_kernel_autotune\n.visible .entry add_kernel_autotune(\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_0,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_1,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_2,\n\t.param .u32 add_kernel_autotune_param_3,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_4\n)\n.reqntid 128\n{\n\t.reg .pred \t%p<7>;\n\t.reg .b32 \t%r<33>;\n\t.reg .b64 \t%rd<11>;\n\t.loc\t1 52 0                          // test_add.py:52:0\n$L__func_begin0:\n\t.loc\t1 52 0                          // test_add.py:52:0\n\n// %bb.0:\n\tld.param.b64 \t%rd7, [add_kernel_autotune_param_0];\n\tld.param.b64 \t%rd8, [add_kernel_autotune_param_1];\n$L__tmp0:\n\t.loc\t1 59 24                         // test_add.py:59:24\n\tmov.u32 \t%r25, %ctaid.x;\n\t.loc\t1 60 24                         // test_add.py:60:24\n\tshl.b32 \t%r26, %r25, 10;\n\tld.param.b64 \t%rd9, [add_kernel_autotune_param_2];\n\tld.param.b32 \t%r27, [add_kernel_autotune_param_3];\n\t.loc\t1 61 41                         // test_add.py:61:41\n\tmov.u32 \t%r28, %tid.x;\n\tshl.b32 \t%r29, %r28, 2;\n\tand.b32 \t%r30, %r29, 508;\n\t.loc\t1 61 28                         // test_add.py:61:28\n\tor.b32 \t%r31, %r30, %r26;\n\tor.b32 \t%r32, %r31, 512;\n\t.loc\t1 62 21                         // test_add.py:62:21\n\tsetp.lt.s32 \t%p1, %r31, %r27;\n\tsetp.lt.s32 \t%p2, %r32, %r27;\n\t.loc\t1 64 24                         // test_add.py:64:24\n\tmul.wide.s32 \t%rd10, %r31, 4;\n\tadd.s64 \t%rd1, %rd7, %rd10;\n\tadd.s64 \t%rd2, %rd1, 2048;\n\t.loc\t1 64 16                         // test_add.py:64:16\n\t// begin inline asm\n\tmov.u32 %r1, 0x0;\n\tmov.u32 %r2, 0x0;\n\tmov.u32 %r3, 0x0;\n\tmov.u32 %r4, 0x0;\n\t@%p1 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];\n\t// end inline asm\n\t// begin inline asm\n\tmov.u32 %r5, 0x0;\n\tmov.u32 %r6, 0x0;\n\tmov.u32 %r7, 0x0;\n\tmov.u32 %r8, 0x0;\n\t@%p2 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];\n\t// end inline asm\n\t.loc\t1 65 24                         // test_add.py:65:24\n\tadd.s64 \t%rd3, %rd8, %rd10;\n\tadd.s64 \t%rd4, %rd3, 2048;\n\t.loc\t1 65 16                         // test_add.py:65:16\n\t// begin inline asm\n\tmov.u32 %r9, 0x0;\n\tmov.u32 %r10, 0x0;\n\tmov.u32 %r11, 0x0;\n\tmov.u32 %r12, 0x0;\n\t@%p1 ld.global.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd3 + 0 ];\n\t// end inline asm\n\t// begin inline asm\n\tmov.u32 %r13, 0x0;\n\tmov.u32 %r14, 0x0;\n\tmov.u32 %r15, 0x0;\n\tmov.u32 %r16, 0x0;\n\t@%p2 ld.global.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd4 + 0 ];\n\t// end inline asm\n\t.loc\t1 66 12                         // test_add.py:66:12\n\tadd.f32 \t%r17, %r1, %r9;\n\tadd.f32 \t%r18, %r2, %r10;\n\tadd.f32 \t%r19, %r3, %r11;\n\tadd.f32 \t%r20, %r4, %r12;\n\tadd.f32 \t%r21, %r5, %r13;\n\tadd.f32 \t%r22, %r6, %r14;\n\tadd.f32 \t%r23, %r7, %r15;\n\tadd.f32 \t%r24, %r8, %r16;\n\t.loc\t1 67 21                         // test_add.py:67:21\n\tadd.s64 \t%rd5, %rd9, %rd10;\n\tadd.s64 \t%rd6, %rd5, 2048;\n\t.loc\t1 67 30                         // test_add.py:67:30\n\t// begin inline asm\n\t@%p1 st.global.v4.b32 [ %rd5 + 0 ], { %r17, %r18, %r19, %r20 };\n\t// end inline asm\n\t// begin inline asm\n\t@%p2 st.global.v4.b32 [ %rd6 + 0 ], { %r21, %r22, %r23, %r24 };\n\t// end inline asm\n\t.loc\t1 67 4                          // test_add.py:67:4\n\tret;\n$L__tmp1:\n$L__func_end0:\n                                        // -- End function\n}\n\t.file\t1 \"/scratch/findhao/tritonparse/tests/test_add.py\"\n\t.section\t.debug_abbrev\n\t{\n.b8 1                                   // Abbreviation Code\n.b8 17                                  // DW_TAG_compile_unit\n.b8 0                                   // DW_CHILDREN_no\n.b8 37                                  // DW_AT_producer\n.b8 8                                   // DW_FORM_string\n.b8 19                                  // DW_AT_language\n.b8 5                                   // DW_FORM_data2\n.b8 3                                   // DW_AT_name\n.b8 8                                   // DW_FORM_string\n.b8 16                                  // DW_AT_stmt_list\n.b8 6                                   // DW_FORM_data4\n.b8 27                                  // DW_AT_comp_dir\n.b8 8                                   // DW_FORM_string\n.b8 0                                   // EOM(1)\n.b8 0                                   // EOM(2)\n.b8 0                                   // EOM(3)\n\t}\n\t.section\t.debug_info\n\t{\n.b32 68                                 // Length of Unit\n.b8 2                                   // DWARF version number\n.b8 0\n.b32 .debug_abbrev                      // Offset Into Abbrev. Section\n.b8 8                                   // Address Size (in bytes)\n.b8 1                                   // Abbrev [1] 0xb:0x3d DW_TAG_compile_unit\n.b8 116                                 // DW_AT_producer\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 0\n.b8 2                                   // DW_AT_language\n.b8 0\n.b8 116                                 // DW_AT_name\n.b8 101\n.b8 115\n.b8 116\n.b8 95\n.b8 97\n.b8 100\n.b8 100\n.b8 46\n.b8 112\n.b8 121\n.b8 0\n.b32 .debug_line                        // DW_AT_stmt_list\n.b8 47                                  // DW_AT_comp_dir\n.b8 115\n.b8 99\n.b8 114\n.b8 97\n.b8 116\n.b8 99\n.b8 104\n.b8 47\n.b8 102\n.b8 105\n.b8 110\n.b8 100\n.b8 104\n.b8 97\n.b8 111\n.b8 47\n.b8 116\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 112\n.b8 97\n.b8 114\n.b8 115\n.b8 101\n.b8 47\n.b8 116\n.b8 101\n.b8 115\n.b8 116\n.b8 115\n.b8 0\n\t}\n\t.section\t.debug_macinfo\t{\t}\n","add_kernel_autotune.json":"{\"hash\": \"cd85312af45285eb8ff6c28be60702f387237d77833087fff4fefb3ded24c219\", \"target\": {\"backend\": \"cuda\", \"arch\": 75, \"warp_size\": 32}, \"num_warps\": 4, \"num_ctas\": 1, \"num_stages\": 3, \"warp_size\": 32, \"maxnreg\": null, \"cluster_dims\": [1, 1, 1], \"ptx_version\": null, \"ptx_options\": null, \"ir_override\": null, \"enable_fp_fusion\": true, \"launch_cooperative_grid\": false, \"launch_pdl\": false, \"supported_fp8_dtypes\": [\"fp8e4b15\", \"fp8e5\"], \"deprecated_fp8_dot_operand_dtypes\": [], \"default_dot_input_precision\": \"tf32\", \"allowed_dot_input_precisions\": [\"tf32\", \"tf32x3\", \"ieee\"], \"max_num_imprecise_acc_default\": 0, \"extern_libs\": [[\"libdevice\", \"/scratch/findhao/pta/triton/python/triton/backends/nvidia/lib/libdevice.10.bc\"]], \"debug\": false, \"backend_name\": \"cuda\", \"sanitize_overflow\": true, \"arch\": \"sm75\", \"triton_version\": \"3.4.0\", \"tensordesc_meta\": [], \"shared\": 0, \"tmem_size\": 0, \"global_scratch_size\": 0, \"global_scratch_align\": 1, \"name\": \"add_kernel_autotune\"}"},"python_source":{"file_path":"/scratch/findhao/tritonparse/tests/test_add.py","start_line":40,"end_line":68,"code":"@triton.autotune(\n    configs=[\n        triton.Config({'BLOCK_SIZE': 256}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 512}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 1024}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 1024}, num_warps=8),\n        triton.Config({'BLOCK_SIZE': 2048}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 2048}, num_warps=8),\n    ],\n    key=['n_elements']\n)\n@triton.jit\ndef add_kernel_autotune(\n    a_ptr,\n    b_ptr,\n    c_ptr,\n    n_elements,\n    BLOCK_SIZE: tl.constexpr,\n):\n    pid = tl.program_id(axis=0)\n    block_start = pid * BLOCK_SIZE\n    offsets = block_start + tl.arange(0, BLOCK_SIZE)\n    mask = offsets < n_elements\n\n    a = tl.load(a_ptr + offsets, mask=mask)\n    b = tl.load(b_ptr + offsets, mask=mask)\n    c = a + b\n    tl.store(c_ptr + offsets, c, mask=mask)\n"},"times":{"ir_initialization":640,"lowering_stages":[],"store_results":0},"source_mappings":{"ttir":{"1":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":1,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"3":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":3,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"4":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":4,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"5":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttir_line":5,"ttgir_lines":[6,27],"ptx_lines":[31,32]},"6":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttir_line":6,"ttgir_lines":[7,28],"ptx_lines":[33,34,35,36]},"7":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttir_line":7,"ttgir_lines":[8,29],"ptx_lines":[37,38,39,40]},"8":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":8,"ttgir_lines":[9,10,30],"ptx_lines":[41,42,43]},"9":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":9,"ttgir_lines":[9,10,30],"ptx_lines":[41,42,43]},"10":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":10,"ttgir_lines":[11,12,31],"ptx_lines":[44,45,46]},"11":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":11,"ttgir_lines":[11,12,31],"ptx_lines":[44,45,46]},"12":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":12,"ttgir_lines":[13,14,32],"ptx_lines":[47,48,49,50]},"13":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":13,"ttgir_lines":[13,14,32],"ptx_lines":[47,48,49,50]},"14":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttir_line":14,"ttgir_lines":[15,33],"ptx_lines":[51,53,54,55,56,57,60,61,62,63,64]},"15":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":15,"ttgir_lines":[16,17,34],"ptx_lines":[66,67,68]},"16":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":16,"ttgir_lines":[16,17,34],"ptx_lines":[66,67,68]},"17":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttir_line":17,"ttgir_lines":[18,35],"ptx_lines":[69,71,72,73,74,75,78,79,80,81,82]},"18":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttir_line":18,"ttgir_lines":[19,36],"ptx_lines":[84,85,86,87,88,89,90,91,92]},"19":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":19,"ttgir_lines":[20,21,37],"ptx_lines":[93,94,95]},"20":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":20,"ttgir_lines":[20,21,37],"ptx_lines":[93,94,95]},"21":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttir_line":21,"ttgir_lines":[22,38],"ptx_lines":[96,98,101]},"22":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttir_line":22,"ttgir_lines":[23,39],"ptx_lines":[103,104,105,106]},"26":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttir_line":26,"ttgir_lines":[6,27],"ptx_lines":[31,32]},"27":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttir_line":27,"ttgir_lines":[7,28],"ptx_lines":[33,34,35,36]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttir_line":28,"ttgir_lines":[8,29],"ptx_lines":[37,38,39,40]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":29,"ttgir_lines":[9,10,30],"ptx_lines":[41,42,43]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":30,"ttgir_lines":[11,12,31],"ptx_lines":[44,45,46]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":31,"ttgir_lines":[13,14,32],"ptx_lines":[47,48,49,50]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttir_line":32,"ttgir_lines":[15,33],"ptx_lines":[51,53,54,55,56,57,60,61,62,63,64]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":33,"ttgir_lines":[16,17,34],"ptx_lines":[66,67,68]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttir_line":34,"ttgir_lines":[18,35],"ptx_lines":[69,71,72,73,74,75,78,79,80,81,82]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttir_line":35,"ttgir_lines":[19,36],"ptx_lines":[84,85,86,87,88,89,90,91,92]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":36,"ttgir_lines":[20,21,37],"ptx_lines":[93,94,95]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttir_line":37,"ttgir_lines":[22,38],"ptx_lines":[96,98,101]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttir_line":38,"ttgir_lines":[23,39],"ptx_lines":[103,104,105,106]}},"ttgir":{"2":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":2,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"4":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":4,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"5":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":5,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"6":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttgir_line":6,"ttir_lines":[5,26],"ptx_lines":[31,32]},"7":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttgir_line":7,"ttir_lines":[6,27],"ptx_lines":[33,34,35,36]},"8":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttgir_line":8,"ttir_lines":[7,28],"ptx_lines":[37,38,39,40]},"9":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":9,"ttir_lines":[8,9,29],"ptx_lines":[41,42,43]},"10":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":10,"ttir_lines":[8,9,29],"ptx_lines":[41,42,43]},"11":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":11,"ttir_lines":[10,11,30],"ptx_lines":[44,45,46]},"12":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":12,"ttir_lines":[10,11,30],"ptx_lines":[44,45,46]},"13":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":13,"ttir_lines":[12,13,31],"ptx_lines":[47,48,49,50]},"14":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":14,"ttir_lines":[12,13,31],"ptx_lines":[47,48,49,50]},"15":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttgir_line":15,"ttir_lines":[14,32],"ptx_lines":[51,53,54,55,56,57,60,61,62,63,64]},"16":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":16,"ttir_lines":[15,16,33],"ptx_lines":[66,67,68]},"17":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":17,"ttir_lines":[15,16,33],"ptx_lines":[66,67,68]},"18":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttgir_line":18,"ttir_lines":[17,34],"ptx_lines":[69,71,72,73,74,75,78,79,80,81,82]},"19":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttgir_line":19,"ttir_lines":[18,35],"ptx_lines":[84,85,86,87,88,89,90,91,92]},"20":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":20,"ttir_lines":[19,20,36],"ptx_lines":[93,94,95]},"21":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":21,"ttir_lines":[19,20,36],"ptx_lines":[93,94,95]},"22":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttgir_line":22,"ttir_lines":[21,37],"ptx_lines":[96,98,101]},"23":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttgir_line":23,"ttir_lines":[22,38],"ptx_lines":[103,104,105,106]},"27":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttgir_line":27,"ttir_lines":[5,26],"ptx_lines":[31,32]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttgir_line":28,"ttir_lines":[6,27],"ptx_lines":[33,34,35,36]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttgir_line":29,"ttir_lines":[7,28],"ptx_lines":[37,38,39,40]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":30,"ttir_lines":[8,9,29],"ptx_lines":[41,42,43]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":31,"ttir_lines":[10,11,30],"ptx_lines":[44,45,46]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":32,"ttir_lines":[12,13,31],"ptx_lines":[47,48,49,50]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttgir_line":33,"ttir_lines":[14,32],"ptx_lines":[51,53,54,55,56,57,60,61,62,63,64]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":34,"ttir_lines":[15,16,33],"ptx_lines":[66,67,68]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttgir_line":35,"ttir_lines":[17,34],"ptx_lines":[69,71,72,73,74,75,78,79,80,81,82]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttgir_line":36,"ttir_lines":[18,35],"ptx_lines":[84,85,86,87,88,89,90,91,92]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":37,"ttir_lines":[19,20,36],"ptx_lines":[93,94,95]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttgir_line":38,"ttir_lines":[21,37],"ptx_lines":[96,98,101]},"39":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttgir_line":39,"ttir_lines":[22,38],"ptx_lines":[103,104,105,106]}},"ptx":{"23":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":23,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"24":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":24,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"25":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":25,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":28,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":29,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":30,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ptx_line":31,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ptx_line":32,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":33,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":34,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":35,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":36,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":37,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":38,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"39":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":39,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"40":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":40,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"41":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":41,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"42":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":42,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"43":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":43,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"44":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":44,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"45":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":45,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"46":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":46,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"47":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":47,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"48":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":48,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"49":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":49,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"50":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":50,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"51":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":51,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"53":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":53,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"54":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":54,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"55":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":55,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"56":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":56,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"57":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":57,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"60":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":60,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"61":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":61,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"62":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":62,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"63":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":63,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"64":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":64,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"66":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":66,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"67":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":67,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"68":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":68,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"69":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":69,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"71":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":71,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"72":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":72,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"73":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":73,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"74":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":74,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"75":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":75,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"78":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":78,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"79":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":79,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"80":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":80,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"81":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":81,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"82":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":82,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"84":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":84,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"85":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":85,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"86":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":86,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"87":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":87,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"88":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":88,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"89":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":89,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"90":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":90,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"91":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":91,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"92":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":92,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"93":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":93,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"94":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":94,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"95":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":95,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"96":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":96,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"98":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":98,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"101":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":101,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"103":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":103,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"104":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":104,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"105":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":105,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"106":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":106,"ttir_lines":[22,38],"ttgir_lines":[23,39]}},"python":{"52":{"ttir_lines":["1","3","4"],"ttgir_lines":["2","4","5"],"ptx_lines":["23","24","25","28","29","30"]},"59":{"ttir_lines":["5","26"],"ttgir_lines":["6","27"],"ptx_lines":["31","32"]},"60":{"ttir_lines":["6","27"],"ttgir_lines":["7","28"],"ptx_lines":["33","34","35","36"]},"61":{"ttir_lines":["7","8","9","28","29"],"ttgir_lines":["8","9","10","29","30"],"ptx_lines":["37","38","39","40","41","42","43"]},"62":{"ttir_lines":["10","11","30"],"ttgir_lines":["11","12","31"],"ptx_lines":["44","45","46"]},"64":{"ttir_lines":["12","13","14","31","32"],"ttgir_lines":["13","14","15","32","33"],"ptx_lines":["47","48","49","50","51","53","54","55","56","57","60","61","62","63","64"]},"65":{"ttir_lines":["15","16","17","33","34"],"ttgir_lines":["16","17","18","34","35"],"ptx_lines":["66","67","68","69","71","72","73","74","75","78","79","80","81","82"]},"66":{"ttir_lines":["18","35"],"ttgir_lines":["19","36"],"ptx_lines":["84","85","86","87","88","89","90","91","92"]},"67":{"ttir_lines":["19","20","21","22","36","37","38"],"ttgir_lines":["20","21","22","23","37","38","39"],"ptx_lines":["93","94","95","96","98","101","103","104","105","106"]}}}}}
{"event_type":"compilation","pid":397690,"stack":[{"line":122,"name":"<module>","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"test_tensor_add()"},{"line":110,"name":"test_tensor_add","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"c_autotune = tensor_add_autotune(a, b)"},{"line":86,"name":"tensor_add_autotune","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"add_kernel_autotune[grid](a, b, c, n_elements)"},{"line":393,"name":"<lambda>","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"return lambda *args, **kwargs: self.run(grid=grid, warmup=False, *args, **kwargs)"},{"line":238,"name":"run","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"benchmark()"},{"line":227,"name":"benchmark","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"timings = {config: self._bench(*args, config=config, **kwargs) for config in pruned_configs}"},{"line":227,"name":"<dictcomp>","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"timings = {config: self._bench(*args, config=config, **kwargs) for config in pruned_configs}"},{"line":162,"name":"_bench","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"return self.do_bench(kernel_call, quantiles=(0.5, 0.2, 0.8))"},{"line":149,"name":"do_bench","filename":"/scratch/findhao/pta/triton/python/triton/testing.py","loc":"fn()"},{"line":148,"name":"kernel_call","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"self.fn.run("},{"line":593,"name":"run","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"kernel = self._do_compile(key, signature, device, constexprs, options, attrs, warmup)"},{"line":773,"name":"_do_compile","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"kernel = self.compile(src, target=target, options=options.__dict__)"},{"line":267,"name":"compile","filename":"/scratch/findhao/pta/triton/python/triton/compiler/compiler.py","loc":"compilation_listener("},{"line":749,"name":"maybe_trace_triton","filename":"/scratch/findhao/tritonparse/tritonparse/structured_logging.py","loc":"trace_structured_triton("},{"line":663,"name":"trace_structured_triton","filename":"/scratch/findhao/tritonparse/tritonparse/structured_logging.py","loc":"metadata_dict[\"stack\"] = get_stack_trace()"}],"timestamp":"2025-07-12T00:12:07.%fZ","payload":{"metadata":{"cache_hit":true,"allowed_dot_input_precisions":["tf32","tf32x3","ieee"],"arch":"sm75","backend_name":"cuda","cluster_dims":[1,1,1],"debug":false,"default_dot_input_precision":"tf32","deprecated_fp8_dot_operand_dtypes":[],"enable_fp_fusion":true,"extern_libs":[["libdevice","/scratch/findhao/pta/triton/python/triton/backends/nvidia/lib/libdevice.10.bc"]],"global_scratch_align":1,"global_scratch_size":0,"hash":"1afbd56b35b151b446cd9076746325797588a7bc1b4610b99436faf5dc90ca2a","ir_override":null,"launch_cooperative_grid":false,"launch_pdl":false,"max_num_imprecise_acc_default":0,"maxnreg":null,"name":"add_kernel_autotune","num_ctas":1,"num_stages":3,"num_warps":8,"ptx_options":null,"ptx_version":null,"sanitize_overflow":true,"shared":0,"supported_fp8_dtypes":["fp8e4b15","fp8e5"],"target":{"backend":"cuda","arch":75,"warp_size":32},"tensordesc_meta":[],"tmem_size":0,"triton_version":"3.4.0","warp_size":32,"env":{},"src_attrs":{"(0,)":[["tt.divisibility",16]],"(1,)":[["tt.divisibility",16]],"(2,)":[["tt.divisibility",16]],"(3,)":[["tt.divisibility",16]]},"src_cache_key":"76406c901d8e56daf0a0c235b17a75782a2f000550da58009999fb0e5085082a","src_constants":{"(4,)":1024}},"file_path":{"add_kernel_autotune.source":"/home/findhao/.triton/cache/DL55K2ZVWFI3IRWNSB3HIYZFPF2YRJ54DNDBBOMUG35PLXEQZIVA/add_kernel_autotune.source","add_kernel_autotune.ttir":"/home/findhao/.triton/cache/DL55K2ZVWFI3IRWNSB3HIYZFPF2YRJ54DNDBBOMUG35PLXEQZIVA/add_kernel_autotune.ttir","add_kernel_autotune.ttgir":"/home/findhao/.triton/cache/DL55K2ZVWFI3IRWNSB3HIYZFPF2YRJ54DNDBBOMUG35PLXEQZIVA/add_kernel_autotune.ttgir","add_kernel_autotune.llir":"/home/findhao/.triton/cache/DL55K2ZVWFI3IRWNSB3HIYZFPF2YRJ54DNDBBOMUG35PLXEQZIVA/add_kernel_autotune.llir","add_kernel_autotune.ptx":"/home/findhao/.triton/cache/DL55K2ZVWFI3IRWNSB3HIYZFPF2YRJ54DNDBBOMUG35PLXEQZIVA/add_kernel_autotune.ptx","add_kernel_autotune.cubin":"/home/findhao/.triton/cache/DL55K2ZVWFI3IRWNSB3HIYZFPF2YRJ54DNDBBOMUG35PLXEQZIVA/add_kernel_autotune.cubin","add_kernel_autotune.json":"/home/findhao/.triton/cache/DL55K2ZVWFI3IRWNSB3HIYZFPF2YRJ54DNDBBOMUG35PLXEQZIVA/add_kernel_autotune.json"},"file_content":{"add_kernel_autotune.ttir":"#loc = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)\nmodule {\n  tt.func public @add_kernel_autotune(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)) attributes {noinline = false} {\n    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<1024xi32> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<1024xi32> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<1024xi32> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<1024xi32> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<1024x!tt.ptr<f32>> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<1024x!tt.ptr<f32>> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<1024xf32> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<1024x!tt.ptr<f32>> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":59:24)\n#loc3 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":60:24)\n#loc4 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:41)\n#loc5 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:28)\n#loc6 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":62:21)\n#loc7 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:24)\n#loc8 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:16)\n#loc9 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:24)\n#loc10 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:16)\n#loc11 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":66:12)\n#loc12 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:21)\n#loc13 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:30)\n#loc14 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:4)\n","add_kernel_autotune.ttgir":"#blocked = #ttg.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>\n#loc = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)\nmodule attributes {\"ttg.num-ctas\" = 1 : i32, \"ttg.num-warps\" = 8 : i32, ttg.target = \"cuda:75\", \"ttg.threads-per-warp\" = 32 : i32} {\n  tt.func public @add_kernel_autotune(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)) attributes {noinline = false} {\n    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<1024xi32, #blocked> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<1024xi32, #blocked> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<1024xi32, #blocked> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<1024xf32, #blocked> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":59:24)\n#loc3 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":60:24)\n#loc4 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:41)\n#loc5 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:28)\n#loc6 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":62:21)\n#loc7 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:24)\n#loc8 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:16)\n#loc9 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:24)\n#loc10 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:16)\n#loc11 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":66:12)\n#loc12 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:21)\n#loc13 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:30)\n#loc14 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:4)\n","add_kernel_autotune.llir":"; ModuleID = 'LLVMDialectModule'\nsource_filename = \"LLVMDialectModule\"\ntarget datalayout = \"e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64\"\n\ndefine ptx_kernel void @add_kernel_autotune(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr #0 !dbg !5 {\n  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8\n  %7 = shl i32 %6, 10, !dbg !9\n  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10\n  %9 = shl nuw nsw i32 %8, 2, !dbg !10\n  %10 = and i32 %9, 1020, !dbg !10\n  %11 = or disjoint i32 %10, %7, !dbg !11\n  %12 = icmp slt i32 %11, %3, !dbg !12\n  %13 = sext i32 %11 to i64, !dbg !13\n  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !13\n  %15 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %14, i1 %12) #2, !dbg !14\n  %16 = extractvalue { i32, i32, i32, i32 } %15, 0, !dbg !14\n  %17 = extractvalue { i32, i32, i32, i32 } %15, 1, !dbg !14\n  %18 = extractvalue { i32, i32, i32, i32 } %15, 2, !dbg !14\n  %19 = extractvalue { i32, i32, i32, i32 } %15, 3, !dbg !14\n  %20 = bitcast i32 %16 to float, !dbg !14\n  %21 = bitcast i32 %17 to float, !dbg !14\n  %22 = bitcast i32 %18 to float, !dbg !14\n  %23 = bitcast i32 %19 to float, !dbg !14\n  %24 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !15\n  %25 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %24, i1 %12) #2, !dbg !16\n  %26 = extractvalue { i32, i32, i32, i32 } %25, 0, !dbg !16\n  %27 = extractvalue { i32, i32, i32, i32 } %25, 1, !dbg !16\n  %28 = extractvalue { i32, i32, i32, i32 } %25, 2, !dbg !16\n  %29 = extractvalue { i32, i32, i32, i32 } %25, 3, !dbg !16\n  %30 = bitcast i32 %26 to float, !dbg !16\n  %31 = bitcast i32 %27 to float, !dbg !16\n  %32 = bitcast i32 %28 to float, !dbg !16\n  %33 = bitcast i32 %29 to float, !dbg !16\n  %34 = fadd float %20, %30, !dbg !17\n  %35 = fadd float %21, %31, !dbg !17\n  %36 = fadd float %22, %32, !dbg !17\n  %37 = fadd float %23, %33, !dbg !17\n  %38 = getelementptr float, ptr addrspace(1) %2, i64 %13, !dbg !18\n  %39 = bitcast float %34 to i32, !dbg !19\n  %40 = bitcast float %35 to i32, !dbg !19\n  %41 = bitcast float %36 to i32, !dbg !19\n  %42 = bitcast float %37 to i32, !dbg !19\n  tail call void asm sideeffect \"@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };\", \"r,r,r,r,l,b\"(i32 %39, i32 %40, i32 %41, i32 %42, ptr addrspace(1) %38, i1 %12) #2, !dbg !19\n  ret void, !dbg !20\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1\n\nattributes #0 = { \"nvvm.reqntid\"=\"256\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }\nattributes #2 = { nounwind }\n\n!llvm.dbg.cu = !{!0}\n!llvm.module.flags = !{!2, !3}\n!llvm.ident = !{!4}\n\n!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: \"triton\", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)\n!1 = !DIFile(filename: \"test_add.py\", directory: \"/scratch/findhao/tritonparse/tests\")\n!2 = !{i32 2, !\"Debug Info Version\", i32 3}\n!3 = !{i32 4, !\"nvvm-reflect-ftz\", i32 1}\n!4 = !{!\"clang version 3.8.0 (tags/RELEASE_380/final)\"}\n!5 = distinct !DISubprogram(name: \"add_kernel_autotune\", linkageName: \"add_kernel_autotune\", scope: !1, file: !1, line: 52, type: !6, scopeLine: 52, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)\n!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)\n!7 = !{}\n!8 = !DILocation(line: 59, column: 24, scope: !5)\n!9 = !DILocation(line: 60, column: 24, scope: !5)\n!10 = !DILocation(line: 61, column: 41, scope: !5)\n!11 = !DILocation(line: 61, column: 28, scope: !5)\n!12 = !DILocation(line: 62, column: 21, scope: !5)\n!13 = !DILocation(line: 64, column: 24, scope: !5)\n!14 = !DILocation(line: 64, column: 16, scope: !5)\n!15 = !DILocation(line: 65, column: 24, scope: !5)\n!16 = !DILocation(line: 65, column: 16, scope: !5)\n!17 = !DILocation(line: 66, column: 12, scope: !5)\n!18 = !DILocation(line: 67, column: 21, scope: !5)\n!19 = !DILocation(line: 67, column: 30, scope: !5)\n!20 = !DILocation(line: 67, column: 4, scope: !5)\n","add_kernel_autotune.ptx":"//\n// Generated by LLVM NVPTX Back-End\n//\n\n.version 8.7\n.target sm_75\n.address_size 64\n\n\t// .globl\tadd_kernel_autotune     // -- Begin function add_kernel_autotune\n                                        // @add_kernel_autotune\n.visible .entry add_kernel_autotune(\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_0,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_1,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_2,\n\t.param .u32 add_kernel_autotune_param_3,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_4\n)\n.reqntid 256\n{\n\t.reg .pred \t%p<4>;\n\t.reg .b32 \t%r<20>;\n\t.reg .b64 \t%rd<8>;\n\t.loc\t1 52 0                          // test_add.py:52:0\n$L__func_begin0:\n\t.loc\t1 52 0                          // test_add.py:52:0\n\n// %bb.0:\n\tld.param.b64 \t%rd4, [add_kernel_autotune_param_0];\n\tld.param.b64 \t%rd5, [add_kernel_autotune_param_1];\n$L__tmp0:\n\t.loc\t1 59 24                         // test_add.py:59:24\n\tmov.u32 \t%r13, %ctaid.x;\n\t.loc\t1 60 24                         // test_add.py:60:24\n\tshl.b32 \t%r14, %r13, 10;\n\tld.param.b64 \t%rd6, [add_kernel_autotune_param_2];\n\tld.param.b32 \t%r15, [add_kernel_autotune_param_3];\n\t.loc\t1 61 41                         // test_add.py:61:41\n\tmov.u32 \t%r16, %tid.x;\n\tshl.b32 \t%r17, %r16, 2;\n\tand.b32 \t%r18, %r17, 1020;\n\t.loc\t1 61 28                         // test_add.py:61:28\n\tor.b32 \t%r19, %r18, %r14;\n\t.loc\t1 62 21                         // test_add.py:62:21\n\tsetp.lt.s32 \t%p1, %r19, %r15;\n\t.loc\t1 64 24                         // test_add.py:64:24\n\tmul.wide.s32 \t%rd7, %r19, 4;\n\tadd.s64 \t%rd1, %rd4, %rd7;\n\t.loc\t1 64 16                         // test_add.py:64:16\n\t// begin inline asm\n\tmov.u32 %r1, 0x0;\n\tmov.u32 %r2, 0x0;\n\tmov.u32 %r3, 0x0;\n\tmov.u32 %r4, 0x0;\n\t@%p1 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];\n\t// end inline asm\n\t.loc\t1 65 24                         // test_add.py:65:24\n\tadd.s64 \t%rd2, %rd5, %rd7;\n\t.loc\t1 65 16                         // test_add.py:65:16\n\t// begin inline asm\n\tmov.u32 %r5, 0x0;\n\tmov.u32 %r6, 0x0;\n\tmov.u32 %r7, 0x0;\n\tmov.u32 %r8, 0x0;\n\t@%p1 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];\n\t// end inline asm\n\t.loc\t1 66 12                         // test_add.py:66:12\n\tadd.f32 \t%r9, %r1, %r5;\n\tadd.f32 \t%r10, %r2, %r6;\n\tadd.f32 \t%r11, %r3, %r7;\n\tadd.f32 \t%r12, %r4, %r8;\n\t.loc\t1 67 21                         // test_add.py:67:21\n\tadd.s64 \t%rd3, %rd6, %rd7;\n\t.loc\t1 67 30                         // test_add.py:67:30\n\t// begin inline asm\n\t@%p1 st.global.v4.b32 [ %rd3 + 0 ], { %r9, %r10, %r11, %r12 };\n\t// end inline asm\n\t.loc\t1 67 4                          // test_add.py:67:4\n\tret;\n$L__tmp1:\n$L__func_end0:\n                                        // -- End function\n}\n\t.file\t1 \"/scratch/findhao/tritonparse/tests/test_add.py\"\n\t.section\t.debug_abbrev\n\t{\n.b8 1                                   // Abbreviation Code\n.b8 17                                  // DW_TAG_compile_unit\n.b8 0                                   // DW_CHILDREN_no\n.b8 37                                  // DW_AT_producer\n.b8 8                                   // DW_FORM_string\n.b8 19                                  // DW_AT_language\n.b8 5                                   // DW_FORM_data2\n.b8 3                                   // DW_AT_name\n.b8 8                                   // DW_FORM_string\n.b8 16                                  // DW_AT_stmt_list\n.b8 6                                   // DW_FORM_data4\n.b8 27                                  // DW_AT_comp_dir\n.b8 8                                   // DW_FORM_string\n.b8 0                                   // EOM(1)\n.b8 0                                   // EOM(2)\n.b8 0                                   // EOM(3)\n\t}\n\t.section\t.debug_info\n\t{\n.b32 68                                 // Length of Unit\n.b8 2                                   // DWARF version number\n.b8 0\n.b32 .debug_abbrev                      // Offset Into Abbrev. Section\n.b8 8                                   // Address Size (in bytes)\n.b8 1                                   // Abbrev [1] 0xb:0x3d DW_TAG_compile_unit\n.b8 116                                 // DW_AT_producer\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 0\n.b8 2                                   // DW_AT_language\n.b8 0\n.b8 116                                 // DW_AT_name\n.b8 101\n.b8 115\n.b8 116\n.b8 95\n.b8 97\n.b8 100\n.b8 100\n.b8 46\n.b8 112\n.b8 121\n.b8 0\n.b32 .debug_line                        // DW_AT_stmt_list\n.b8 47                                  // DW_AT_comp_dir\n.b8 115\n.b8 99\n.b8 114\n.b8 97\n.b8 116\n.b8 99\n.b8 104\n.b8 47\n.b8 102\n.b8 105\n.b8 110\n.b8 100\n.b8 104\n.b8 97\n.b8 111\n.b8 47\n.b8 116\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 112\n.b8 97\n.b8 114\n.b8 115\n.b8 101\n.b8 47\n.b8 116\n.b8 101\n.b8 115\n.b8 116\n.b8 115\n.b8 0\n\t}\n\t.section\t.debug_macinfo\t{\t}\n","add_kernel_autotune.json":"{\"hash\": \"1afbd56b35b151b446cd9076746325797588a7bc1b4610b99436faf5dc90ca2a\", \"target\": {\"backend\": \"cuda\", \"arch\": 75, \"warp_size\": 32}, \"num_warps\": 8, \"num_ctas\": 1, \"num_stages\": 3, \"warp_size\": 32, \"maxnreg\": null, \"cluster_dims\": [1, 1, 1], \"ptx_version\": null, \"ptx_options\": null, \"ir_override\": null, \"enable_fp_fusion\": true, \"launch_cooperative_grid\": false, \"launch_pdl\": false, \"supported_fp8_dtypes\": [\"fp8e4b15\", \"fp8e5\"], \"deprecated_fp8_dot_operand_dtypes\": [], \"default_dot_input_precision\": \"tf32\", \"allowed_dot_input_precisions\": [\"tf32\", \"tf32x3\", \"ieee\"], \"max_num_imprecise_acc_default\": 0, \"extern_libs\": [[\"libdevice\", \"/scratch/findhao/pta/triton/python/triton/backends/nvidia/lib/libdevice.10.bc\"]], \"debug\": false, \"backend_name\": \"cuda\", \"sanitize_overflow\": true, \"arch\": \"sm75\", \"triton_version\": \"3.4.0\", \"tensordesc_meta\": [], \"shared\": 0, \"tmem_size\": 0, \"global_scratch_size\": 0, \"global_scratch_align\": 1, \"name\": \"add_kernel_autotune\"}"},"python_source":{"file_path":"/scratch/findhao/tritonparse/tests/test_add.py","start_line":40,"end_line":68,"code":"@triton.autotune(\n    configs=[\n        triton.Config({'BLOCK_SIZE': 256}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 512}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 1024}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 1024}, num_warps=8),\n        triton.Config({'BLOCK_SIZE': 2048}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 2048}, num_warps=8),\n    ],\n    key=['n_elements']\n)\n@triton.jit\ndef add_kernel_autotune(\n    a_ptr,\n    b_ptr,\n    c_ptr,\n    n_elements,\n    BLOCK_SIZE: tl.constexpr,\n):\n    pid = tl.program_id(axis=0)\n    block_start = pid * BLOCK_SIZE\n    offsets = block_start + tl.arange(0, BLOCK_SIZE)\n    mask = offsets < n_elements\n\n    a = tl.load(a_ptr + offsets, mask=mask)\n    b = tl.load(b_ptr + offsets, mask=mask)\n    c = a + b\n    tl.store(c_ptr + offsets, c, mask=mask)\n"},"times":{"ir_initialization":614,"lowering_stages":[],"store_results":0},"source_mappings":{"ttir":{"1":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":1,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"3":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":3,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"4":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":4,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"5":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttir_line":5,"ttgir_lines":[6,27],"ptx_lines":[31,32]},"6":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttir_line":6,"ttgir_lines":[7,28],"ptx_lines":[33,34,35,36]},"7":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttir_line":7,"ttgir_lines":[8,29],"ptx_lines":[37,38,39,40]},"8":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":8,"ttgir_lines":[9,10,30],"ptx_lines":[41,42]},"9":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":9,"ttgir_lines":[9,10,30],"ptx_lines":[41,42]},"10":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":10,"ttgir_lines":[11,12,31],"ptx_lines":[43,44]},"11":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":11,"ttgir_lines":[11,12,31],"ptx_lines":[43,44]},"12":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":12,"ttgir_lines":[13,14,32],"ptx_lines":[45,46,47]},"13":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":13,"ttgir_lines":[13,14,32],"ptx_lines":[45,46,47]},"14":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttir_line":14,"ttgir_lines":[15,33],"ptx_lines":[48,50,51,52,53,54]},"15":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":15,"ttgir_lines":[16,17,34],"ptx_lines":[56,57]},"16":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":16,"ttgir_lines":[16,17,34],"ptx_lines":[56,57]},"17":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttir_line":17,"ttgir_lines":[18,35],"ptx_lines":[58,60,61,62,63,64]},"18":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttir_line":18,"ttgir_lines":[19,36],"ptx_lines":[66,67,68,69,70]},"19":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":19,"ttgir_lines":[20,21,37],"ptx_lines":[71,72]},"20":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":20,"ttgir_lines":[20,21,37],"ptx_lines":[71,72]},"21":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttir_line":21,"ttgir_lines":[22,38],"ptx_lines":[73,75]},"22":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttir_line":22,"ttgir_lines":[23,39],"ptx_lines":[77,78,79,80]},"26":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttir_line":26,"ttgir_lines":[6,27],"ptx_lines":[31,32]},"27":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttir_line":27,"ttgir_lines":[7,28],"ptx_lines":[33,34,35,36]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttir_line":28,"ttgir_lines":[8,29],"ptx_lines":[37,38,39,40]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":29,"ttgir_lines":[9,10,30],"ptx_lines":[41,42]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":30,"ttgir_lines":[11,12,31],"ptx_lines":[43,44]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":31,"ttgir_lines":[13,14,32],"ptx_lines":[45,46,47]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttir_line":32,"ttgir_lines":[15,33],"ptx_lines":[48,50,51,52,53,54]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":33,"ttgir_lines":[16,17,34],"ptx_lines":[56,57]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttir_line":34,"ttgir_lines":[18,35],"ptx_lines":[58,60,61,62,63,64]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttir_line":35,"ttgir_lines":[19,36],"ptx_lines":[66,67,68,69,70]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":36,"ttgir_lines":[20,21,37],"ptx_lines":[71,72]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttir_line":37,"ttgir_lines":[22,38],"ptx_lines":[73,75]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttir_line":38,"ttgir_lines":[23,39],"ptx_lines":[77,78,79,80]}},"ttgir":{"2":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":2,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"4":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":4,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"5":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":5,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"6":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttgir_line":6,"ttir_lines":[5,26],"ptx_lines":[31,32]},"7":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttgir_line":7,"ttir_lines":[6,27],"ptx_lines":[33,34,35,36]},"8":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttgir_line":8,"ttir_lines":[7,28],"ptx_lines":[37,38,39,40]},"9":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":9,"ttir_lines":[8,9,29],"ptx_lines":[41,42]},"10":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":10,"ttir_lines":[8,9,29],"ptx_lines":[41,42]},"11":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":11,"ttir_lines":[10,11,30],"ptx_lines":[43,44]},"12":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":12,"ttir_lines":[10,11,30],"ptx_lines":[43,44]},"13":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":13,"ttir_lines":[12,13,31],"ptx_lines":[45,46,47]},"14":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":14,"ttir_lines":[12,13,31],"ptx_lines":[45,46,47]},"15":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttgir_line":15,"ttir_lines":[14,32],"ptx_lines":[48,50,51,52,53,54]},"16":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":16,"ttir_lines":[15,16,33],"ptx_lines":[56,57]},"17":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":17,"ttir_lines":[15,16,33],"ptx_lines":[56,57]},"18":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttgir_line":18,"ttir_lines":[17,34],"ptx_lines":[58,60,61,62,63,64]},"19":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttgir_line":19,"ttir_lines":[18,35],"ptx_lines":[66,67,68,69,70]},"20":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":20,"ttir_lines":[19,20,36],"ptx_lines":[71,72]},"21":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":21,"ttir_lines":[19,20,36],"ptx_lines":[71,72]},"22":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttgir_line":22,"ttir_lines":[21,37],"ptx_lines":[73,75]},"23":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttgir_line":23,"ttir_lines":[22,38],"ptx_lines":[77,78,79,80]},"27":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttgir_line":27,"ttir_lines":[5,26],"ptx_lines":[31,32]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttgir_line":28,"ttir_lines":[6,27],"ptx_lines":[33,34,35,36]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttgir_line":29,"ttir_lines":[7,28],"ptx_lines":[37,38,39,40]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":30,"ttir_lines":[8,9,29],"ptx_lines":[41,42]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":31,"ttir_lines":[10,11,30],"ptx_lines":[43,44]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":32,"ttir_lines":[12,13,31],"ptx_lines":[45,46,47]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttgir_line":33,"ttir_lines":[14,32],"ptx_lines":[48,50,51,52,53,54]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":34,"ttir_lines":[15,16,33],"ptx_lines":[56,57]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttgir_line":35,"ttir_lines":[17,34],"ptx_lines":[58,60,61,62,63,64]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttgir_line":36,"ttir_lines":[18,35],"ptx_lines":[66,67,68,69,70]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":37,"ttir_lines":[19,20,36],"ptx_lines":[71,72]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttgir_line":38,"ttir_lines":[21,37],"ptx_lines":[73,75]},"39":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttgir_line":39,"ttir_lines":[22,38],"ptx_lines":[77,78,79,80]}},"ptx":{"23":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":23,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"24":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":24,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"25":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":25,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":28,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":29,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":30,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ptx_line":31,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ptx_line":32,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":33,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":34,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":35,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":36,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":37,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":38,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"39":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":39,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"40":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":40,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"41":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":41,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"42":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":42,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"43":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":43,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"44":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":44,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"45":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":45,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"46":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":46,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"47":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":47,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"48":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":48,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"50":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":50,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"51":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":51,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"52":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":52,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"53":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":53,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"54":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":54,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"56":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":56,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"57":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":57,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"58":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":58,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"60":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":60,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"61":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":61,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"62":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":62,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"63":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":63,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"64":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":64,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"66":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":66,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"67":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":67,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"68":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":68,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"69":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":69,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"70":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":70,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"71":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":71,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"72":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":72,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"73":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":73,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"75":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":75,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"77":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":77,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"78":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":78,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"79":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":79,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"80":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":80,"ttir_lines":[22,38],"ttgir_lines":[23,39]}},"python":{"52":{"ttir_lines":["1","3","4"],"ttgir_lines":["2","4","5"],"ptx_lines":["23","24","25","28","29","30"]},"59":{"ttir_lines":["5","26"],"ttgir_lines":["6","27"],"ptx_lines":["31","32"]},"60":{"ttir_lines":["6","27"],"ttgir_lines":["7","28"],"ptx_lines":["33","34","35","36"]},"61":{"ttir_lines":["7","8","9","28","29"],"ttgir_lines":["8","9","10","29","30"],"ptx_lines":["37","38","39","40","41","42"]},"62":{"ttir_lines":["10","11","30"],"ttgir_lines":["11","12","31"],"ptx_lines":["43","44"]},"64":{"ttir_lines":["12","13","14","31","32"],"ttgir_lines":["13","14","15","32","33"],"ptx_lines":["45","46","47","48","50","51","52","53","54"]},"65":{"ttir_lines":["15","16","17","33","34"],"ttgir_lines":["16","17","18","34","35"],"ptx_lines":["56","57","58","60","61","62","63","64"]},"66":{"ttir_lines":["18","35"],"ttgir_lines":["19","36"],"ptx_lines":["66","67","68","69","70"]},"67":{"ttir_lines":["19","20","21","22","36","37","38"],"ttgir_lines":["20","21","22","23","37","38","39"],"ptx_lines":["71","72","73","75","77","78","79","80"]}}}}}
{"event_type":"compilation","pid":397690,"stack":[{"line":122,"name":"<module>","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"test_tensor_add()"},{"line":110,"name":"test_tensor_add","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"c_autotune = tensor_add_autotune(a, b)"},{"line":86,"name":"tensor_add_autotune","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"add_kernel_autotune[grid](a, b, c, n_elements)"},{"line":393,"name":"<lambda>","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"return lambda *args, **kwargs: self.run(grid=grid, warmup=False, *args, **kwargs)"},{"line":238,"name":"run","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"benchmark()"},{"line":227,"name":"benchmark","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"timings = {config: self._bench(*args, config=config, **kwargs) for config in pruned_configs}"},{"line":227,"name":"<dictcomp>","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"timings = {config: self._bench(*args, config=config, **kwargs) for config in pruned_configs}"},{"line":162,"name":"_bench","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"return self.do_bench(kernel_call, quantiles=(0.5, 0.2, 0.8))"},{"line":149,"name":"do_bench","filename":"/scratch/findhao/pta/triton/python/triton/testing.py","loc":"fn()"},{"line":148,"name":"kernel_call","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"self.fn.run("},{"line":593,"name":"run","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"kernel = self._do_compile(key, signature, device, constexprs, options, attrs, warmup)"},{"line":773,"name":"_do_compile","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"kernel = self.compile(src, target=target, options=options.__dict__)"},{"line":267,"name":"compile","filename":"/scratch/findhao/pta/triton/python/triton/compiler/compiler.py","loc":"compilation_listener("},{"line":749,"name":"maybe_trace_triton","filename":"/scratch/findhao/tritonparse/tritonparse/structured_logging.py","loc":"trace_structured_triton("},{"line":663,"name":"trace_structured_triton","filename":"/scratch/findhao/tritonparse/tritonparse/structured_logging.py","loc":"metadata_dict[\"stack\"] = get_stack_trace()"}],"timestamp":"2025-07-12T00:12:08.%fZ","payload":{"metadata":{"cache_hit":true,"allowed_dot_input_precisions":["tf32","tf32x3","ieee"],"arch":"sm75","backend_name":"cuda","cluster_dims":[1,1,1],"debug":false,"default_dot_input_precision":"tf32","deprecated_fp8_dot_operand_dtypes":[],"enable_fp_fusion":true,"extern_libs":[["libdevice","/scratch/findhao/pta/triton/python/triton/backends/nvidia/lib/libdevice.10.bc"]],"global_scratch_align":1,"global_scratch_size":0,"hash":"1f7548ca64e7dfb19d050b88716e44a1ae344b7073fa6607d4d8733b388be0f5","ir_override":null,"launch_cooperative_grid":false,"launch_pdl":false,"max_num_imprecise_acc_default":0,"maxnreg":null,"name":"add_kernel_autotune","num_ctas":1,"num_stages":3,"num_warps":4,"ptx_options":null,"ptx_version":null,"sanitize_overflow":true,"shared":0,"supported_fp8_dtypes":["fp8e4b15","fp8e5"],"target":{"backend":"cuda","arch":75,"warp_size":32},"tensordesc_meta":[],"tmem_size":0,"triton_version":"3.4.0","warp_size":32,"env":{},"src_attrs":{"(0,)":[["tt.divisibility",16]],"(1,)":[["tt.divisibility",16]],"(2,)":[["tt.divisibility",16]],"(3,)":[["tt.divisibility",16]]},"src_cache_key":"76406c901d8e56daf0a0c235b17a75782a2f000550da58009999fb0e5085082a","src_constants":{"(4,)":2048}},"file_path":{"add_kernel_autotune.source":"/home/findhao/.triton/cache/D52URSTE47P3DHIFBOEHC3SEUGXDIS3QOP5GMB6U3BZTWOEL4D2Q/add_kernel_autotune.source","add_kernel_autotune.ttir":"/home/findhao/.triton/cache/D52URSTE47P3DHIFBOEHC3SEUGXDIS3QOP5GMB6U3BZTWOEL4D2Q/add_kernel_autotune.ttir","add_kernel_autotune.ttgir":"/home/findhao/.triton/cache/D52URSTE47P3DHIFBOEHC3SEUGXDIS3QOP5GMB6U3BZTWOEL4D2Q/add_kernel_autotune.ttgir","add_kernel_autotune.llir":"/home/findhao/.triton/cache/D52URSTE47P3DHIFBOEHC3SEUGXDIS3QOP5GMB6U3BZTWOEL4D2Q/add_kernel_autotune.llir","add_kernel_autotune.ptx":"/home/findhao/.triton/cache/D52URSTE47P3DHIFBOEHC3SEUGXDIS3QOP5GMB6U3BZTWOEL4D2Q/add_kernel_autotune.ptx","add_kernel_autotune.cubin":"/home/findhao/.triton/cache/D52URSTE47P3DHIFBOEHC3SEUGXDIS3QOP5GMB6U3BZTWOEL4D2Q/add_kernel_autotune.cubin","add_kernel_autotune.json":"/home/findhao/.triton/cache/D52URSTE47P3DHIFBOEHC3SEUGXDIS3QOP5GMB6U3BZTWOEL4D2Q/add_kernel_autotune.json"},"file_content":{"add_kernel_autotune.ttir":"#loc = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)\nmodule {\n  tt.func public @add_kernel_autotune(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)) attributes {noinline = false} {\n    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c2048_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<2048xi32> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<2048xi32> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<2048xi32> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<2048xi32> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<2048x!tt.ptr<f32>> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<2048x!tt.ptr<f32>>, tensor<2048xi32> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<2048x!tt.ptr<f32>> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<2048x!tt.ptr<f32>> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<2048x!tt.ptr<f32>>, tensor<2048xi32> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<2048x!tt.ptr<f32>> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<2048xf32> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<2048x!tt.ptr<f32>> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<2048x!tt.ptr<f32>>, tensor<2048xi32> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<2048x!tt.ptr<f32>> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":59:24)\n#loc3 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":60:24)\n#loc4 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:41)\n#loc5 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:28)\n#loc6 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":62:21)\n#loc7 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:24)\n#loc8 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:16)\n#loc9 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:24)\n#loc10 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:16)\n#loc11 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":66:12)\n#loc12 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:21)\n#loc13 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:30)\n#loc14 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:4)\n","add_kernel_autotune.ttgir":"#blocked = #ttg.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>\n#loc = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)\nmodule attributes {\"ttg.num-ctas\" = 1 : i32, \"ttg.num-warps\" = 4 : i32, ttg.target = \"cuda:75\", \"ttg.threads-per-warp\" = 32 : i32} {\n  tt.func public @add_kernel_autotune(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)) attributes {noinline = false} {\n    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c2048_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #blocked> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<2048xi32, #blocked> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<2048xi32, #blocked> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<2048xi32, #blocked> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<2048xi32, #blocked> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<2048x!tt.ptr<f32>, #blocked> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<2048x!tt.ptr<f32>, #blocked>, tensor<2048xi32, #blocked> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<2048x!tt.ptr<f32>, #blocked> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<2048x!tt.ptr<f32>, #blocked> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<2048x!tt.ptr<f32>, #blocked>, tensor<2048xi32, #blocked> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<2048x!tt.ptr<f32>, #blocked> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<2048xf32, #blocked> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<2048x!tt.ptr<f32>, #blocked> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<2048x!tt.ptr<f32>, #blocked>, tensor<2048xi32, #blocked> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<2048x!tt.ptr<f32>, #blocked> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":59:24)\n#loc3 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":60:24)\n#loc4 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:41)\n#loc5 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:28)\n#loc6 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":62:21)\n#loc7 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:24)\n#loc8 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:16)\n#loc9 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:24)\n#loc10 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:16)\n#loc11 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":66:12)\n#loc12 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:21)\n#loc13 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:30)\n#loc14 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:4)\n","add_kernel_autotune.llir":"; ModuleID = 'LLVMDialectModule'\nsource_filename = \"LLVMDialectModule\"\ntarget datalayout = \"e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64\"\n\ndefine ptx_kernel void @add_kernel_autotune(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr #0 !dbg !5 {\n  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8\n  %7 = shl i32 %6, 11, !dbg !9\n  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10\n  %9 = shl nuw nsw i32 %8, 2, !dbg !10\n  %10 = and i32 %9, 508, !dbg !10\n  %11 = or disjoint i32 %10, %7, !dbg !11\n  %12 = or disjoint i32 %11, 512, !dbg !11\n  %13 = or disjoint i32 %11, 1024, !dbg !11\n  %14 = or disjoint i32 %11, 1536, !dbg !11\n  %15 = icmp slt i32 %11, %3, !dbg !12\n  %16 = icmp slt i32 %12, %3, !dbg !12\n  %17 = icmp slt i32 %13, %3, !dbg !12\n  %18 = icmp slt i32 %14, %3, !dbg !12\n  %19 = sext i32 %11 to i64, !dbg !13\n  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !13\n  %21 = sext i32 %12 to i64, !dbg !13\n  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !13\n  %23 = sext i32 %13 to i64, !dbg !13\n  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !13\n  %25 = sext i32 %14 to i64, !dbg !13\n  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !13\n  %27 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %20, i1 %15) #2, !dbg !14\n  %28 = extractvalue { i32, i32, i32, i32 } %27, 0, !dbg !14\n  %29 = extractvalue { i32, i32, i32, i32 } %27, 1, !dbg !14\n  %30 = extractvalue { i32, i32, i32, i32 } %27, 2, !dbg !14\n  %31 = extractvalue { i32, i32, i32, i32 } %27, 3, !dbg !14\n  %32 = bitcast i32 %28 to float, !dbg !14\n  %33 = bitcast i32 %29 to float, !dbg !14\n  %34 = bitcast i32 %30 to float, !dbg !14\n  %35 = bitcast i32 %31 to float, !dbg !14\n  %36 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %22, i1 %16) #2, !dbg !14\n  %37 = extractvalue { i32, i32, i32, i32 } %36, 0, !dbg !14\n  %38 = extractvalue { i32, i32, i32, i32 } %36, 1, !dbg !14\n  %39 = extractvalue { i32, i32, i32, i32 } %36, 2, !dbg !14\n  %40 = extractvalue { i32, i32, i32, i32 } %36, 3, !dbg !14\n  %41 = bitcast i32 %37 to float, !dbg !14\n  %42 = bitcast i32 %38 to float, !dbg !14\n  %43 = bitcast i32 %39 to float, !dbg !14\n  %44 = bitcast i32 %40 to float, !dbg !14\n  %45 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %24, i1 %17) #2, !dbg !14\n  %46 = extractvalue { i32, i32, i32, i32 } %45, 0, !dbg !14\n  %47 = extractvalue { i32, i32, i32, i32 } %45, 1, !dbg !14\n  %48 = extractvalue { i32, i32, i32, i32 } %45, 2, !dbg !14\n  %49 = extractvalue { i32, i32, i32, i32 } %45, 3, !dbg !14\n  %50 = bitcast i32 %46 to float, !dbg !14\n  %51 = bitcast i32 %47 to float, !dbg !14\n  %52 = bitcast i32 %48 to float, !dbg !14\n  %53 = bitcast i32 %49 to float, !dbg !14\n  %54 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %26, i1 %18) #2, !dbg !14\n  %55 = extractvalue { i32, i32, i32, i32 } %54, 0, !dbg !14\n  %56 = extractvalue { i32, i32, i32, i32 } %54, 1, !dbg !14\n  %57 = extractvalue { i32, i32, i32, i32 } %54, 2, !dbg !14\n  %58 = extractvalue { i32, i32, i32, i32 } %54, 3, !dbg !14\n  %59 = bitcast i32 %55 to float, !dbg !14\n  %60 = bitcast i32 %56 to float, !dbg !14\n  %61 = bitcast i32 %57 to float, !dbg !14\n  %62 = bitcast i32 %58 to float, !dbg !14\n  %63 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !15\n  %64 = getelementptr float, ptr addrspace(1) %1, i64 %21, !dbg !15\n  %65 = getelementptr float, ptr addrspace(1) %1, i64 %23, !dbg !15\n  %66 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !15\n  %67 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %63, i1 %15) #2, !dbg !16\n  %68 = extractvalue { i32, i32, i32, i32 } %67, 0, !dbg !16\n  %69 = extractvalue { i32, i32, i32, i32 } %67, 1, !dbg !16\n  %70 = extractvalue { i32, i32, i32, i32 } %67, 2, !dbg !16\n  %71 = extractvalue { i32, i32, i32, i32 } %67, 3, !dbg !16\n  %72 = bitcast i32 %68 to float, !dbg !16\n  %73 = bitcast i32 %69 to float, !dbg !16\n  %74 = bitcast i32 %70 to float, !dbg !16\n  %75 = bitcast i32 %71 to float, !dbg !16\n  %76 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %64, i1 %16) #2, !dbg !16\n  %77 = extractvalue { i32, i32, i32, i32 } %76, 0, !dbg !16\n  %78 = extractvalue { i32, i32, i32, i32 } %76, 1, !dbg !16\n  %79 = extractvalue { i32, i32, i32, i32 } %76, 2, !dbg !16\n  %80 = extractvalue { i32, i32, i32, i32 } %76, 3, !dbg !16\n  %81 = bitcast i32 %77 to float, !dbg !16\n  %82 = bitcast i32 %78 to float, !dbg !16\n  %83 = bitcast i32 %79 to float, !dbg !16\n  %84 = bitcast i32 %80 to float, !dbg !16\n  %85 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %65, i1 %17) #2, !dbg !16\n  %86 = extractvalue { i32, i32, i32, i32 } %85, 0, !dbg !16\n  %87 = extractvalue { i32, i32, i32, i32 } %85, 1, !dbg !16\n  %88 = extractvalue { i32, i32, i32, i32 } %85, 2, !dbg !16\n  %89 = extractvalue { i32, i32, i32, i32 } %85, 3, !dbg !16\n  %90 = bitcast i32 %86 to float, !dbg !16\n  %91 = bitcast i32 %87 to float, !dbg !16\n  %92 = bitcast i32 %88 to float, !dbg !16\n  %93 = bitcast i32 %89 to float, !dbg !16\n  %94 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %66, i1 %18) #2, !dbg !16\n  %95 = extractvalue { i32, i32, i32, i32 } %94, 0, !dbg !16\n  %96 = extractvalue { i32, i32, i32, i32 } %94, 1, !dbg !16\n  %97 = extractvalue { i32, i32, i32, i32 } %94, 2, !dbg !16\n  %98 = extractvalue { i32, i32, i32, i32 } %94, 3, !dbg !16\n  %99 = bitcast i32 %95 to float, !dbg !16\n  %100 = bitcast i32 %96 to float, !dbg !16\n  %101 = bitcast i32 %97 to float, !dbg !16\n  %102 = bitcast i32 %98 to float, !dbg !16\n  %103 = fadd float %32, %72, !dbg !17\n  %104 = fadd float %33, %73, !dbg !17\n  %105 = fadd float %34, %74, !dbg !17\n  %106 = fadd float %35, %75, !dbg !17\n  %107 = fadd float %41, %81, !dbg !17\n  %108 = fadd float %42, %82, !dbg !17\n  %109 = fadd float %43, %83, !dbg !17\n  %110 = fadd float %44, %84, !dbg !17\n  %111 = fadd float %50, %90, !dbg !17\n  %112 = fadd float %51, %91, !dbg !17\n  %113 = fadd float %52, %92, !dbg !17\n  %114 = fadd float %53, %93, !dbg !17\n  %115 = fadd float %59, %99, !dbg !17\n  %116 = fadd float %60, %100, !dbg !17\n  %117 = fadd float %61, %101, !dbg !17\n  %118 = fadd float %62, %102, !dbg !17\n  %119 = getelementptr float, ptr addrspace(1) %2, i64 %19, !dbg !18\n  %120 = getelementptr float, ptr addrspace(1) %2, i64 %21, !dbg !18\n  %121 = getelementptr float, ptr addrspace(1) %2, i64 %23, !dbg !18\n  %122 = getelementptr float, ptr addrspace(1) %2, i64 %25, !dbg !18\n  %123 = bitcast float %103 to i32, !dbg !19\n  %124 = bitcast float %104 to i32, !dbg !19\n  %125 = bitcast float %105 to i32, !dbg !19\n  %126 = bitcast float %106 to i32, !dbg !19\n  tail call void asm sideeffect \"@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };\", \"r,r,r,r,l,b\"(i32 %123, i32 %124, i32 %125, i32 %126, ptr addrspace(1) %119, i1 %15) #2, !dbg !19\n  %127 = bitcast float %107 to i32, !dbg !19\n  %128 = bitcast float %108 to i32, !dbg !19\n  %129 = bitcast float %109 to i32, !dbg !19\n  %130 = bitcast float %110 to i32, !dbg !19\n  tail call void asm sideeffect \"@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };\", \"r,r,r,r,l,b\"(i32 %127, i32 %128, i32 %129, i32 %130, ptr addrspace(1) %120, i1 %16) #2, !dbg !19\n  %131 = bitcast float %111 to i32, !dbg !19\n  %132 = bitcast float %112 to i32, !dbg !19\n  %133 = bitcast float %113 to i32, !dbg !19\n  %134 = bitcast float %114 to i32, !dbg !19\n  tail call void asm sideeffect \"@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };\", \"r,r,r,r,l,b\"(i32 %131, i32 %132, i32 %133, i32 %134, ptr addrspace(1) %121, i1 %17) #2, !dbg !19\n  %135 = bitcast float %115 to i32, !dbg !19\n  %136 = bitcast float %116 to i32, !dbg !19\n  %137 = bitcast float %117 to i32, !dbg !19\n  %138 = bitcast float %118 to i32, !dbg !19\n  tail call void asm sideeffect \"@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };\", \"r,r,r,r,l,b\"(i32 %135, i32 %136, i32 %137, i32 %138, ptr addrspace(1) %122, i1 %18) #2, !dbg !19\n  ret void, !dbg !20\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1\n\nattributes #0 = { \"nvvm.reqntid\"=\"128\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }\nattributes #2 = { nounwind }\n\n!llvm.dbg.cu = !{!0}\n!llvm.module.flags = !{!2, !3}\n!llvm.ident = !{!4}\n\n!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: \"triton\", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)\n!1 = !DIFile(filename: \"test_add.py\", directory: \"/scratch/findhao/tritonparse/tests\")\n!2 = !{i32 2, !\"Debug Info Version\", i32 3}\n!3 = !{i32 4, !\"nvvm-reflect-ftz\", i32 1}\n!4 = !{!\"clang version 3.8.0 (tags/RELEASE_380/final)\"}\n!5 = distinct !DISubprogram(name: \"add_kernel_autotune\", linkageName: \"add_kernel_autotune\", scope: !1, file: !1, line: 52, type: !6, scopeLine: 52, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)\n!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)\n!7 = !{}\n!8 = !DILocation(line: 59, column: 24, scope: !5)\n!9 = !DILocation(line: 60, column: 24, scope: !5)\n!10 = !DILocation(line: 61, column: 41, scope: !5)\n!11 = !DILocation(line: 61, column: 28, scope: !5)\n!12 = !DILocation(line: 62, column: 21, scope: !5)\n!13 = !DILocation(line: 64, column: 24, scope: !5)\n!14 = !DILocation(line: 64, column: 16, scope: !5)\n!15 = !DILocation(line: 65, column: 24, scope: !5)\n!16 = !DILocation(line: 65, column: 16, scope: !5)\n!17 = !DILocation(line: 66, column: 12, scope: !5)\n!18 = !DILocation(line: 67, column: 21, scope: !5)\n!19 = !DILocation(line: 67, column: 30, scope: !5)\n!20 = !DILocation(line: 67, column: 4, scope: !5)\n","add_kernel_autotune.ptx":"//\n// Generated by LLVM NVPTX Back-End\n//\n\n.version 8.7\n.target sm_75\n.address_size 64\n\n\t// .globl\tadd_kernel_autotune     // -- Begin function add_kernel_autotune\n                                        // @add_kernel_autotune\n.visible .entry add_kernel_autotune(\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_0,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_1,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_2,\n\t.param .u32 add_kernel_autotune_param_3,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_4\n)\n.reqntid 128\n{\n\t.reg .pred \t%p<13>;\n\t.reg .b32 \t%r<59>;\n\t.reg .b64 \t%rd<17>;\n\t.loc\t1 52 0                          // test_add.py:52:0\n$L__func_begin0:\n\t.loc\t1 52 0                          // test_add.py:52:0\n\n// %bb.0:\n\tld.param.b64 \t%rd13, [add_kernel_autotune_param_0];\n\tld.param.b64 \t%rd14, [add_kernel_autotune_param_1];\n$L__tmp0:\n\t.loc\t1 59 24                         // test_add.py:59:24\n\tmov.u32 \t%r49, %ctaid.x;\n\t.loc\t1 60 24                         // test_add.py:60:24\n\tshl.b32 \t%r50, %r49, 11;\n\tld.param.b64 \t%rd15, [add_kernel_autotune_param_2];\n\tld.param.b32 \t%r51, [add_kernel_autotune_param_3];\n\t.loc\t1 61 41                         // test_add.py:61:41\n\tmov.u32 \t%r52, %tid.x;\n\tshl.b32 \t%r53, %r52, 2;\n\tand.b32 \t%r54, %r53, 508;\n\t.loc\t1 61 28                         // test_add.py:61:28\n\tor.b32 \t%r55, %r54, %r50;\n\tor.b32 \t%r56, %r55, 512;\n\tor.b32 \t%r57, %r55, 1024;\n\tor.b32 \t%r58, %r55, 1536;\n\t.loc\t1 62 21                         // test_add.py:62:21\n\tsetp.lt.s32 \t%p1, %r55, %r51;\n\tsetp.lt.s32 \t%p2, %r56, %r51;\n\tsetp.lt.s32 \t%p3, %r57, %r51;\n\tsetp.lt.s32 \t%p4, %r58, %r51;\n\t.loc\t1 64 24                         // test_add.py:64:24\n\tmul.wide.s32 \t%rd16, %r55, 4;\n\tadd.s64 \t%rd1, %rd13, %rd16;\n\tadd.s64 \t%rd2, %rd1, 2048;\n\tadd.s64 \t%rd3, %rd1, 4096;\n\tadd.s64 \t%rd4, %rd1, 6144;\n\t.loc\t1 64 16                         // test_add.py:64:16\n\t// begin inline asm\n\tmov.u32 %r1, 0x0;\n\tmov.u32 %r2, 0x0;\n\tmov.u32 %r3, 0x0;\n\tmov.u32 %r4, 0x0;\n\t@%p1 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];\n\t// end inline asm\n\t// begin inline asm\n\tmov.u32 %r5, 0x0;\n\tmov.u32 %r6, 0x0;\n\tmov.u32 %r7, 0x0;\n\tmov.u32 %r8, 0x0;\n\t@%p2 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];\n\t// end inline asm\n\t// begin inline asm\n\tmov.u32 %r9, 0x0;\n\tmov.u32 %r10, 0x0;\n\tmov.u32 %r11, 0x0;\n\tmov.u32 %r12, 0x0;\n\t@%p3 ld.global.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd3 + 0 ];\n\t// end inline asm\n\t// begin inline asm\n\tmov.u32 %r13, 0x0;\n\tmov.u32 %r14, 0x0;\n\tmov.u32 %r15, 0x0;\n\tmov.u32 %r16, 0x0;\n\t@%p4 ld.global.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd4 + 0 ];\n\t// end inline asm\n\t.loc\t1 65 24                         // test_add.py:65:24\n\tadd.s64 \t%rd5, %rd14, %rd16;\n\tadd.s64 \t%rd6, %rd5, 2048;\n\tadd.s64 \t%rd7, %rd5, 4096;\n\tadd.s64 \t%rd8, %rd5, 6144;\n\t.loc\t1 65 16                         // test_add.py:65:16\n\t// begin inline asm\n\tmov.u32 %r17, 0x0;\n\tmov.u32 %r18, 0x0;\n\tmov.u32 %r19, 0x0;\n\tmov.u32 %r20, 0x0;\n\t@%p1 ld.global.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd5 + 0 ];\n\t// end inline asm\n\t// begin inline asm\n\tmov.u32 %r21, 0x0;\n\tmov.u32 %r22, 0x0;\n\tmov.u32 %r23, 0x0;\n\tmov.u32 %r24, 0x0;\n\t@%p2 ld.global.v4.b32 { %r21, %r22, %r23, %r24 }, [ %rd6 + 0 ];\n\t// end inline asm\n\t// begin inline asm\n\tmov.u32 %r25, 0x0;\n\tmov.u32 %r26, 0x0;\n\tmov.u32 %r27, 0x0;\n\tmov.u32 %r28, 0x0;\n\t@%p3 ld.global.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd7 + 0 ];\n\t// end inline asm\n\t// begin inline asm\n\tmov.u32 %r29, 0x0;\n\tmov.u32 %r30, 0x0;\n\tmov.u32 %r31, 0x0;\n\tmov.u32 %r32, 0x0;\n\t@%p4 ld.global.v4.b32 { %r29, %r30, %r31, %r32 }, [ %rd8 + 0 ];\n\t// end inline asm\n\t.loc\t1 66 12                         // test_add.py:66:12\n\tadd.f32 \t%r33, %r1, %r17;\n\tadd.f32 \t%r34, %r2, %r18;\n\tadd.f32 \t%r35, %r3, %r19;\n\tadd.f32 \t%r36, %r4, %r20;\n\tadd.f32 \t%r37, %r5, %r21;\n\tadd.f32 \t%r38, %r6, %r22;\n\tadd.f32 \t%r39, %r7, %r23;\n\tadd.f32 \t%r40, %r8, %r24;\n\tadd.f32 \t%r41, %r9, %r25;\n\tadd.f32 \t%r42, %r10, %r26;\n\tadd.f32 \t%r43, %r11, %r27;\n\tadd.f32 \t%r44, %r12, %r28;\n\tadd.f32 \t%r45, %r13, %r29;\n\tadd.f32 \t%r46, %r14, %r30;\n\tadd.f32 \t%r47, %r15, %r31;\n\tadd.f32 \t%r48, %r16, %r32;\n\t.loc\t1 67 21                         // test_add.py:67:21\n\tadd.s64 \t%rd9, %rd15, %rd16;\n\tadd.s64 \t%rd10, %rd9, 2048;\n\tadd.s64 \t%rd11, %rd9, 4096;\n\tadd.s64 \t%rd12, %rd9, 6144;\n\t.loc\t1 67 30                         // test_add.py:67:30\n\t// begin inline asm\n\t@%p1 st.global.v4.b32 [ %rd9 + 0 ], { %r33, %r34, %r35, %r36 };\n\t// end inline asm\n\t// begin inline asm\n\t@%p2 st.global.v4.b32 [ %rd10 + 0 ], { %r37, %r38, %r39, %r40 };\n\t// end inline asm\n\t// begin inline asm\n\t@%p3 st.global.v4.b32 [ %rd11 + 0 ], { %r41, %r42, %r43, %r44 };\n\t// end inline asm\n\t// begin inline asm\n\t@%p4 st.global.v4.b32 [ %rd12 + 0 ], { %r45, %r46, %r47, %r48 };\n\t// end inline asm\n\t.loc\t1 67 4                          // test_add.py:67:4\n\tret;\n$L__tmp1:\n$L__func_end0:\n                                        // -- End function\n}\n\t.file\t1 \"/scratch/findhao/tritonparse/tests/test_add.py\"\n\t.section\t.debug_abbrev\n\t{\n.b8 1                                   // Abbreviation Code\n.b8 17                                  // DW_TAG_compile_unit\n.b8 0                                   // DW_CHILDREN_no\n.b8 37                                  // DW_AT_producer\n.b8 8                                   // DW_FORM_string\n.b8 19                                  // DW_AT_language\n.b8 5                                   // DW_FORM_data2\n.b8 3                                   // DW_AT_name\n.b8 8                                   // DW_FORM_string\n.b8 16                                  // DW_AT_stmt_list\n.b8 6                                   // DW_FORM_data4\n.b8 27                                  // DW_AT_comp_dir\n.b8 8                                   // DW_FORM_string\n.b8 0                                   // EOM(1)\n.b8 0                                   // EOM(2)\n.b8 0                                   // EOM(3)\n\t}\n\t.section\t.debug_info\n\t{\n.b32 68                                 // Length of Unit\n.b8 2                                   // DWARF version number\n.b8 0\n.b32 .debug_abbrev                      // Offset Into Abbrev. Section\n.b8 8                                   // Address Size (in bytes)\n.b8 1                                   // Abbrev [1] 0xb:0x3d DW_TAG_compile_unit\n.b8 116                                 // DW_AT_producer\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 0\n.b8 2                                   // DW_AT_language\n.b8 0\n.b8 116                                 // DW_AT_name\n.b8 101\n.b8 115\n.b8 116\n.b8 95\n.b8 97\n.b8 100\n.b8 100\n.b8 46\n.b8 112\n.b8 121\n.b8 0\n.b32 .debug_line                        // DW_AT_stmt_list\n.b8 47                                  // DW_AT_comp_dir\n.b8 115\n.b8 99\n.b8 114\n.b8 97\n.b8 116\n.b8 99\n.b8 104\n.b8 47\n.b8 102\n.b8 105\n.b8 110\n.b8 100\n.b8 104\n.b8 97\n.b8 111\n.b8 47\n.b8 116\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 112\n.b8 97\n.b8 114\n.b8 115\n.b8 101\n.b8 47\n.b8 116\n.b8 101\n.b8 115\n.b8 116\n.b8 115\n.b8 0\n\t}\n\t.section\t.debug_macinfo\t{\t}\n","add_kernel_autotune.json":"{\"hash\": \"1f7548ca64e7dfb19d050b88716e44a1ae344b7073fa6607d4d8733b388be0f5\", \"target\": {\"backend\": \"cuda\", \"arch\": 75, \"warp_size\": 32}, \"num_warps\": 4, \"num_ctas\": 1, \"num_stages\": 3, \"warp_size\": 32, \"maxnreg\": null, \"cluster_dims\": [1, 1, 1], \"ptx_version\": null, \"ptx_options\": null, \"ir_override\": null, \"enable_fp_fusion\": true, \"launch_cooperative_grid\": false, \"launch_pdl\": false, \"supported_fp8_dtypes\": [\"fp8e4b15\", \"fp8e5\"], \"deprecated_fp8_dot_operand_dtypes\": [], \"default_dot_input_precision\": \"tf32\", \"allowed_dot_input_precisions\": [\"tf32\", \"tf32x3\", \"ieee\"], \"max_num_imprecise_acc_default\": 0, \"extern_libs\": [[\"libdevice\", \"/scratch/findhao/pta/triton/python/triton/backends/nvidia/lib/libdevice.10.bc\"]], \"debug\": false, \"backend_name\": \"cuda\", \"sanitize_overflow\": true, \"arch\": \"sm75\", \"triton_version\": \"3.4.0\", \"tensordesc_meta\": [], \"shared\": 0, \"tmem_size\": 0, \"global_scratch_size\": 0, \"global_scratch_align\": 1, \"name\": \"add_kernel_autotune\"}"},"python_source":{"file_path":"/scratch/findhao/tritonparse/tests/test_add.py","start_line":40,"end_line":68,"code":"@triton.autotune(\n    configs=[\n        triton.Config({'BLOCK_SIZE': 256}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 512}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 1024}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 1024}, num_warps=8),\n        triton.Config({'BLOCK_SIZE': 2048}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 2048}, num_warps=8),\n    ],\n    key=['n_elements']\n)\n@triton.jit\ndef add_kernel_autotune(\n    a_ptr,\n    b_ptr,\n    c_ptr,\n    n_elements,\n    BLOCK_SIZE: tl.constexpr,\n):\n    pid = tl.program_id(axis=0)\n    block_start = pid * BLOCK_SIZE\n    offsets = block_start + tl.arange(0, BLOCK_SIZE)\n    mask = offsets < n_elements\n\n    a = tl.load(a_ptr + offsets, mask=mask)\n    b = tl.load(b_ptr + offsets, mask=mask)\n    c = a + b\n    tl.store(c_ptr + offsets, c, mask=mask)\n"},"times":{"ir_initialization":639,"lowering_stages":[],"store_results":0},"source_mappings":{"ttir":{"1":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":1,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"3":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":3,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"4":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":4,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"5":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttir_line":5,"ttgir_lines":[6,27],"ptx_lines":[31,32]},"6":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttir_line":6,"ttgir_lines":[7,28],"ptx_lines":[33,34,35,36]},"7":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttir_line":7,"ttgir_lines":[8,29],"ptx_lines":[37,38,39,40]},"8":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":8,"ttgir_lines":[9,10,30],"ptx_lines":[41,42,43,44,45]},"9":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":9,"ttgir_lines":[9,10,30],"ptx_lines":[41,42,43,44,45]},"10":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":10,"ttgir_lines":[11,12,31],"ptx_lines":[46,47,48,49,50]},"11":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":11,"ttgir_lines":[11,12,31],"ptx_lines":[46,47,48,49,50]},"12":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":12,"ttgir_lines":[13,14,32],"ptx_lines":[51,52,53,54,55,56]},"13":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":13,"ttgir_lines":[13,14,32],"ptx_lines":[51,52,53,54,55,56]},"14":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttir_line":14,"ttgir_lines":[15,33],"ptx_lines":[57,59,60,61,62,63,66,67,68,69,70,73,74,75,76,77,80,81,82,83,84]},"15":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":15,"ttgir_lines":[16,17,34],"ptx_lines":[86,87,88,89,90]},"16":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":16,"ttgir_lines":[16,17,34],"ptx_lines":[86,87,88,89,90]},"17":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttir_line":17,"ttgir_lines":[18,35],"ptx_lines":[91,93,94,95,96,97,100,101,102,103,104,107,108,109,110,111,114,115,116,117,118]},"18":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttir_line":18,"ttgir_lines":[19,36],"ptx_lines":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136]},"19":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":19,"ttgir_lines":[20,21,37],"ptx_lines":[137,138,139,140,141]},"20":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":20,"ttgir_lines":[20,21,37],"ptx_lines":[137,138,139,140,141]},"21":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttir_line":21,"ttgir_lines":[22,38],"ptx_lines":[142,144,147,150,153]},"22":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttir_line":22,"ttgir_lines":[23,39],"ptx_lines":[155,156,157,158]},"26":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttir_line":26,"ttgir_lines":[6,27],"ptx_lines":[31,32]},"27":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttir_line":27,"ttgir_lines":[7,28],"ptx_lines":[33,34,35,36]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttir_line":28,"ttgir_lines":[8,29],"ptx_lines":[37,38,39,40]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":29,"ttgir_lines":[9,10,30],"ptx_lines":[41,42,43,44,45]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":30,"ttgir_lines":[11,12,31],"ptx_lines":[46,47,48,49,50]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":31,"ttgir_lines":[13,14,32],"ptx_lines":[51,52,53,54,55,56]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttir_line":32,"ttgir_lines":[15,33],"ptx_lines":[57,59,60,61,62,63,66,67,68,69,70,73,74,75,76,77,80,81,82,83,84]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":33,"ttgir_lines":[16,17,34],"ptx_lines":[86,87,88,89,90]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttir_line":34,"ttgir_lines":[18,35],"ptx_lines":[91,93,94,95,96,97,100,101,102,103,104,107,108,109,110,111,114,115,116,117,118]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttir_line":35,"ttgir_lines":[19,36],"ptx_lines":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":36,"ttgir_lines":[20,21,37],"ptx_lines":[137,138,139,140,141]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttir_line":37,"ttgir_lines":[22,38],"ptx_lines":[142,144,147,150,153]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttir_line":38,"ttgir_lines":[23,39],"ptx_lines":[155,156,157,158]}},"ttgir":{"2":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":2,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"4":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":4,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"5":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":5,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"6":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttgir_line":6,"ttir_lines":[5,26],"ptx_lines":[31,32]},"7":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttgir_line":7,"ttir_lines":[6,27],"ptx_lines":[33,34,35,36]},"8":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttgir_line":8,"ttir_lines":[7,28],"ptx_lines":[37,38,39,40]},"9":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":9,"ttir_lines":[8,9,29],"ptx_lines":[41,42,43,44,45]},"10":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":10,"ttir_lines":[8,9,29],"ptx_lines":[41,42,43,44,45]},"11":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":11,"ttir_lines":[10,11,30],"ptx_lines":[46,47,48,49,50]},"12":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":12,"ttir_lines":[10,11,30],"ptx_lines":[46,47,48,49,50]},"13":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":13,"ttir_lines":[12,13,31],"ptx_lines":[51,52,53,54,55,56]},"14":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":14,"ttir_lines":[12,13,31],"ptx_lines":[51,52,53,54,55,56]},"15":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttgir_line":15,"ttir_lines":[14,32],"ptx_lines":[57,59,60,61,62,63,66,67,68,69,70,73,74,75,76,77,80,81,82,83,84]},"16":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":16,"ttir_lines":[15,16,33],"ptx_lines":[86,87,88,89,90]},"17":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":17,"ttir_lines":[15,16,33],"ptx_lines":[86,87,88,89,90]},"18":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttgir_line":18,"ttir_lines":[17,34],"ptx_lines":[91,93,94,95,96,97,100,101,102,103,104,107,108,109,110,111,114,115,116,117,118]},"19":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttgir_line":19,"ttir_lines":[18,35],"ptx_lines":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136]},"20":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":20,"ttir_lines":[19,20,36],"ptx_lines":[137,138,139,140,141]},"21":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":21,"ttir_lines":[19,20,36],"ptx_lines":[137,138,139,140,141]},"22":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttgir_line":22,"ttir_lines":[21,37],"ptx_lines":[142,144,147,150,153]},"23":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttgir_line":23,"ttir_lines":[22,38],"ptx_lines":[155,156,157,158]},"27":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttgir_line":27,"ttir_lines":[5,26],"ptx_lines":[31,32]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttgir_line":28,"ttir_lines":[6,27],"ptx_lines":[33,34,35,36]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttgir_line":29,"ttir_lines":[7,28],"ptx_lines":[37,38,39,40]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":30,"ttir_lines":[8,9,29],"ptx_lines":[41,42,43,44,45]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":31,"ttir_lines":[10,11,30],"ptx_lines":[46,47,48,49,50]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":32,"ttir_lines":[12,13,31],"ptx_lines":[51,52,53,54,55,56]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttgir_line":33,"ttir_lines":[14,32],"ptx_lines":[57,59,60,61,62,63,66,67,68,69,70,73,74,75,76,77,80,81,82,83,84]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":34,"ttir_lines":[15,16,33],"ptx_lines":[86,87,88,89,90]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttgir_line":35,"ttir_lines":[17,34],"ptx_lines":[91,93,94,95,96,97,100,101,102,103,104,107,108,109,110,111,114,115,116,117,118]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttgir_line":36,"ttir_lines":[18,35],"ptx_lines":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":37,"ttir_lines":[19,20,36],"ptx_lines":[137,138,139,140,141]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttgir_line":38,"ttir_lines":[21,37],"ptx_lines":[142,144,147,150,153]},"39":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttgir_line":39,"ttir_lines":[22,38],"ptx_lines":[155,156,157,158]}},"ptx":{"23":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":23,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"24":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":24,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"25":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":25,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":28,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":29,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":30,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ptx_line":31,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ptx_line":32,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":33,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":34,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":35,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":36,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":37,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":38,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"39":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":39,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"40":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":40,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"41":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":41,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"42":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":42,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"43":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":43,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"44":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":44,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"45":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":45,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"46":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":46,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"47":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":47,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"48":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":48,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"49":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":49,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"50":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":50,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"51":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":51,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"52":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":52,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"53":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":53,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"54":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":54,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"55":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":55,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"56":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":56,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"57":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":57,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"59":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":59,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"60":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":60,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"61":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":61,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"62":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":62,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"63":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":63,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"66":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":66,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"67":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":67,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"68":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":68,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"69":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":69,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"70":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":70,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"73":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":73,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"74":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":74,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"75":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":75,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"76":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":76,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"77":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":77,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"80":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":80,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"81":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":81,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"82":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":82,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"83":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":83,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"84":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":84,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"86":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":86,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"87":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":87,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"88":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":88,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"89":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":89,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"90":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":90,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"91":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":91,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"93":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":93,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"94":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":94,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"95":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":95,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"96":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":96,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"97":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":97,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"100":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":100,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"101":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":101,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"102":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":102,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"103":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":103,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"104":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":104,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"107":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":107,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"108":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":108,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"109":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":109,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"110":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":110,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"111":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":111,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"114":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":114,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"115":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":115,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"116":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":116,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"117":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":117,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"118":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":118,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"120":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":120,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"121":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":121,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"122":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":122,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"123":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":123,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"124":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":124,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"125":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":125,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"126":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":126,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"127":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":127,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"128":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":128,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"129":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":129,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"130":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":130,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"131":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":131,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"132":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":132,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"133":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":133,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"134":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":134,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"135":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":135,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"136":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":136,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"137":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":137,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"138":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":138,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"139":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":139,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"140":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":140,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"141":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":141,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"142":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":142,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"144":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":144,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"147":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":147,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"150":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":150,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"153":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":153,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"155":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":155,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"156":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":156,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"157":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":157,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"158":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":158,"ttir_lines":[22,38],"ttgir_lines":[23,39]}},"python":{"52":{"ttir_lines":["1","3","4"],"ttgir_lines":["2","4","5"],"ptx_lines":["23","24","25","28","29","30"]},"59":{"ttir_lines":["5","26"],"ttgir_lines":["6","27"],"ptx_lines":["31","32"]},"60":{"ttir_lines":["6","27"],"ttgir_lines":["7","28"],"ptx_lines":["33","34","35","36"]},"61":{"ttir_lines":["7","8","9","28","29"],"ttgir_lines":["8","9","10","29","30"],"ptx_lines":["37","38","39","40","41","42","43","44","45"]},"62":{"ttir_lines":["10","11","30"],"ttgir_lines":["11","12","31"],"ptx_lines":["46","47","48","49","50"]},"64":{"ttir_lines":["12","13","14","31","32"],"ttgir_lines":["13","14","15","32","33"],"ptx_lines":["51","52","53","54","55","56","57","59","60","61","62","63","66","67","68","69","70","73","74","75","76","77","80","81","82","83","84"]},"65":{"ttir_lines":["15","16","17","33","34"],"ttgir_lines":["16","17","18","34","35"],"ptx_lines":["86","87","88","89","90","91","93","94","95","96","97","100","101","102","103","104","107","108","109","110","111","114","115","116","117","118"]},"66":{"ttir_lines":["18","35"],"ttgir_lines":["19","36"],"ptx_lines":["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"]},"67":{"ttir_lines":["19","20","21","22","36","37","38"],"ttgir_lines":["20","21","22","23","37","38","39"],"ptx_lines":["137","138","139","140","141","142","144","147","150","153","155","156","157","158"]}}}}}
{"event_type":"compilation","pid":397690,"stack":[{"line":122,"name":"<module>","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"test_tensor_add()"},{"line":110,"name":"test_tensor_add","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"c_autotune = tensor_add_autotune(a, b)"},{"line":86,"name":"tensor_add_autotune","filename":"/scratch/findhao/tritonparse/tests/test_add.py","loc":"add_kernel_autotune[grid](a, b, c, n_elements)"},{"line":393,"name":"<lambda>","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"return lambda *args, **kwargs: self.run(grid=grid, warmup=False, *args, **kwargs)"},{"line":238,"name":"run","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"benchmark()"},{"line":227,"name":"benchmark","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"timings = {config: self._bench(*args, config=config, **kwargs) for config in pruned_configs}"},{"line":227,"name":"<dictcomp>","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"timings = {config: self._bench(*args, config=config, **kwargs) for config in pruned_configs}"},{"line":162,"name":"_bench","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"return self.do_bench(kernel_call, quantiles=(0.5, 0.2, 0.8))"},{"line":149,"name":"do_bench","filename":"/scratch/findhao/pta/triton/python/triton/testing.py","loc":"fn()"},{"line":148,"name":"kernel_call","filename":"/scratch/findhao/pta/triton/python/triton/runtime/autotuner.py","loc":"self.fn.run("},{"line":593,"name":"run","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"kernel = self._do_compile(key, signature, device, constexprs, options, attrs, warmup)"},{"line":773,"name":"_do_compile","filename":"/scratch/findhao/pta/triton/python/triton/runtime/jit.py","loc":"kernel = self.compile(src, target=target, options=options.__dict__)"},{"line":267,"name":"compile","filename":"/scratch/findhao/pta/triton/python/triton/compiler/compiler.py","loc":"compilation_listener("},{"line":749,"name":"maybe_trace_triton","filename":"/scratch/findhao/tritonparse/tritonparse/structured_logging.py","loc":"trace_structured_triton("},{"line":663,"name":"trace_structured_triton","filename":"/scratch/findhao/tritonparse/tritonparse/structured_logging.py","loc":"metadata_dict[\"stack\"] = get_stack_trace()"}],"timestamp":"2025-07-12T00:12:08.%fZ","payload":{"metadata":{"cache_hit":true,"allowed_dot_input_precisions":["tf32","tf32x3","ieee"],"arch":"sm75","backend_name":"cuda","cluster_dims":[1,1,1],"debug":false,"default_dot_input_precision":"tf32","deprecated_fp8_dot_operand_dtypes":[],"enable_fp_fusion":true,"extern_libs":[["libdevice","/scratch/findhao/pta/triton/python/triton/backends/nvidia/lib/libdevice.10.bc"]],"global_scratch_align":1,"global_scratch_size":0,"hash":"2af3cb93a0ff4763a6da19ccc07f0ff159e32a514d453c3c8b9e58f36e37356d","ir_override":null,"launch_cooperative_grid":false,"launch_pdl":false,"max_num_imprecise_acc_default":0,"maxnreg":null,"name":"add_kernel_autotune","num_ctas":1,"num_stages":3,"num_warps":8,"ptx_options":null,"ptx_version":null,"sanitize_overflow":true,"shared":0,"supported_fp8_dtypes":["fp8e4b15","fp8e5"],"target":{"backend":"cuda","arch":75,"warp_size":32},"tensordesc_meta":[],"tmem_size":0,"triton_version":"3.4.0","warp_size":32,"env":{},"src_attrs":{"(0,)":[["tt.divisibility",16]],"(1,)":[["tt.divisibility",16]],"(2,)":[["tt.divisibility",16]],"(3,)":[["tt.divisibility",16]]},"src_cache_key":"76406c901d8e56daf0a0c235b17a75782a2f000550da58009999fb0e5085082a","src_constants":{"(4,)":2048}},"file_path":{"add_kernel_autotune.source":"/home/findhao/.triton/cache/FLZ4XE5A75DWHJW2DHGMA7YP6FM6GKSRJVCTYPELTZMPG3RXGVWQ/add_kernel_autotune.source","add_kernel_autotune.ttir":"/home/findhao/.triton/cache/FLZ4XE5A75DWHJW2DHGMA7YP6FM6GKSRJVCTYPELTZMPG3RXGVWQ/add_kernel_autotune.ttir","add_kernel_autotune.ttgir":"/home/findhao/.triton/cache/FLZ4XE5A75DWHJW2DHGMA7YP6FM6GKSRJVCTYPELTZMPG3RXGVWQ/add_kernel_autotune.ttgir","add_kernel_autotune.llir":"/home/findhao/.triton/cache/FLZ4XE5A75DWHJW2DHGMA7YP6FM6GKSRJVCTYPELTZMPG3RXGVWQ/add_kernel_autotune.llir","add_kernel_autotune.ptx":"/home/findhao/.triton/cache/FLZ4XE5A75DWHJW2DHGMA7YP6FM6GKSRJVCTYPELTZMPG3RXGVWQ/add_kernel_autotune.ptx","add_kernel_autotune.cubin":"/home/findhao/.triton/cache/FLZ4XE5A75DWHJW2DHGMA7YP6FM6GKSRJVCTYPELTZMPG3RXGVWQ/add_kernel_autotune.cubin","add_kernel_autotune.json":"/home/findhao/.triton/cache/FLZ4XE5A75DWHJW2DHGMA7YP6FM6GKSRJVCTYPELTZMPG3RXGVWQ/add_kernel_autotune.json"},"file_content":{"add_kernel_autotune.ttir":"#loc = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)\nmodule {\n  tt.func public @add_kernel_autotune(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)) attributes {noinline = false} {\n    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c2048_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<2048xi32> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<2048xi32> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<2048xi32> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<2048xi32> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<2048x!tt.ptr<f32>> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<2048x!tt.ptr<f32>>, tensor<2048xi32> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<2048x!tt.ptr<f32>> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<2048x!tt.ptr<f32>> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<2048x!tt.ptr<f32>>, tensor<2048xi32> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<2048x!tt.ptr<f32>> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<2048xf32> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<2048x!tt.ptr<f32>> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<2048x!tt.ptr<f32>>, tensor<2048xi32> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<2048x!tt.ptr<f32>> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":59:24)\n#loc3 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":60:24)\n#loc4 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:41)\n#loc5 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:28)\n#loc6 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":62:21)\n#loc7 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:24)\n#loc8 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:16)\n#loc9 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:24)\n#loc10 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:16)\n#loc11 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":66:12)\n#loc12 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:21)\n#loc13 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:30)\n#loc14 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:4)\n","add_kernel_autotune.ttgir":"#blocked = #ttg.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>\n#loc = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)\nmodule attributes {\"ttg.num-ctas\" = 1 : i32, \"ttg.num-warps\" = 8 : i32, ttg.target = \"cuda:75\", \"ttg.threads-per-warp\" = 32 : i32} {\n  tt.func public @add_kernel_autotune(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0), %arg3: i32 {tt.divisibility = 16 : i32} loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":52:0)) attributes {noinline = false} {\n    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)\n    %0 = tt.get_program_id x : i32 loc(#loc2)\n    %1 = arith.muli %0, %c2048_i32 : i32 loc(#loc3)\n    %2 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #blocked> loc(#loc4)\n    %3 = tt.splat %1 : i32 -> tensor<2048xi32, #blocked> loc(#loc5)\n    %4 = arith.addi %3, %2 : tensor<2048xi32, #blocked> loc(#loc5)\n    %5 = tt.splat %arg3 : i32 -> tensor<2048xi32, #blocked> loc(#loc6)\n    %6 = arith.cmpi slt, %4, %5 : tensor<2048xi32, #blocked> loc(#loc6)\n    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<2048x!tt.ptr<f32>, #blocked> loc(#loc7)\n    %8 = tt.addptr %7, %4 : tensor<2048x!tt.ptr<f32>, #blocked>, tensor<2048xi32, #blocked> loc(#loc7)\n    %9 = tt.load %8, %6 : tensor<2048x!tt.ptr<f32>, #blocked> loc(#loc8)\n    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<2048x!tt.ptr<f32>, #blocked> loc(#loc9)\n    %11 = tt.addptr %10, %4 : tensor<2048x!tt.ptr<f32>, #blocked>, tensor<2048xi32, #blocked> loc(#loc9)\n    %12 = tt.load %11, %6 : tensor<2048x!tt.ptr<f32>, #blocked> loc(#loc10)\n    %13 = arith.addf %9, %12 : tensor<2048xf32, #blocked> loc(#loc11)\n    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<2048x!tt.ptr<f32>, #blocked> loc(#loc12)\n    %15 = tt.addptr %14, %4 : tensor<2048x!tt.ptr<f32>, #blocked>, tensor<2048xi32, #blocked> loc(#loc12)\n    tt.store %15, %13, %6 : tensor<2048x!tt.ptr<f32>, #blocked> loc(#loc13)\n    tt.return loc(#loc14)\n  } loc(#loc)\n} loc(#loc)\n#loc1 = loc(unknown)\n#loc2 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":59:24)\n#loc3 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":60:24)\n#loc4 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:41)\n#loc5 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":61:28)\n#loc6 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":62:21)\n#loc7 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:24)\n#loc8 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":64:16)\n#loc9 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:24)\n#loc10 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":65:16)\n#loc11 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":66:12)\n#loc12 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:21)\n#loc13 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:30)\n#loc14 = loc(\"/scratch/findhao/tritonparse/tests/test_add.py\":67:4)\n","add_kernel_autotune.llir":"; ModuleID = 'LLVMDialectModule'\nsource_filename = \"LLVMDialectModule\"\ntarget datalayout = \"e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64\"\n\ndefine ptx_kernel void @add_kernel_autotune(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr #0 !dbg !5 {\n  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8\n  %7 = shl i32 %6, 11, !dbg !9\n  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10\n  %9 = shl nuw nsw i32 %8, 2, !dbg !10\n  %10 = and i32 %9, 1020, !dbg !10\n  %11 = or disjoint i32 %10, %7, !dbg !11\n  %12 = or disjoint i32 %11, 1024, !dbg !11\n  %13 = icmp slt i32 %11, %3, !dbg !12\n  %14 = icmp slt i32 %12, %3, !dbg !12\n  %15 = sext i32 %11 to i64, !dbg !13\n  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !13\n  %17 = sext i32 %12 to i64, !dbg !13\n  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !13\n  %19 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %16, i1 %13) #2, !dbg !14\n  %20 = extractvalue { i32, i32, i32, i32 } %19, 0, !dbg !14\n  %21 = extractvalue { i32, i32, i32, i32 } %19, 1, !dbg !14\n  %22 = extractvalue { i32, i32, i32, i32 } %19, 2, !dbg !14\n  %23 = extractvalue { i32, i32, i32, i32 } %19, 3, !dbg !14\n  %24 = bitcast i32 %20 to float, !dbg !14\n  %25 = bitcast i32 %21 to float, !dbg !14\n  %26 = bitcast i32 %22 to float, !dbg !14\n  %27 = bitcast i32 %23 to float, !dbg !14\n  %28 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %18, i1 %14) #2, !dbg !14\n  %29 = extractvalue { i32, i32, i32, i32 } %28, 0, !dbg !14\n  %30 = extractvalue { i32, i32, i32, i32 } %28, 1, !dbg !14\n  %31 = extractvalue { i32, i32, i32, i32 } %28, 2, !dbg !14\n  %32 = extractvalue { i32, i32, i32, i32 } %28, 3, !dbg !14\n  %33 = bitcast i32 %29 to float, !dbg !14\n  %34 = bitcast i32 %30 to float, !dbg !14\n  %35 = bitcast i32 %31 to float, !dbg !14\n  %36 = bitcast i32 %32 to float, !dbg !14\n  %37 = getelementptr float, ptr addrspace(1) %1, i64 %15, !dbg !15\n  %38 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !15\n  %39 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %37, i1 %13) #2, !dbg !16\n  %40 = extractvalue { i32, i32, i32, i32 } %39, 0, !dbg !16\n  %41 = extractvalue { i32, i32, i32, i32 } %39, 1, !dbg !16\n  %42 = extractvalue { i32, i32, i32, i32 } %39, 2, !dbg !16\n  %43 = extractvalue { i32, i32, i32, i32 } %39, 3, !dbg !16\n  %44 = bitcast i32 %40 to float, !dbg !16\n  %45 = bitcast i32 %41 to float, !dbg !16\n  %46 = bitcast i32 %42 to float, !dbg !16\n  %47 = bitcast i32 %43 to float, !dbg !16\n  %48 = tail call { i32, i32, i32, i32 } asm sideeffect \"mov.u32 $0, 0x0;\\0A\\09mov.u32 $1, 0x0;\\0A\\09mov.u32 $2, 0x0;\\0A\\09mov.u32 $3, 0x0;\\0A\\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\", \"=r,=r,=r,=r,l,b\"(ptr addrspace(1) %38, i1 %14) #2, !dbg !16\n  %49 = extractvalue { i32, i32, i32, i32 } %48, 0, !dbg !16\n  %50 = extractvalue { i32, i32, i32, i32 } %48, 1, !dbg !16\n  %51 = extractvalue { i32, i32, i32, i32 } %48, 2, !dbg !16\n  %52 = extractvalue { i32, i32, i32, i32 } %48, 3, !dbg !16\n  %53 = bitcast i32 %49 to float, !dbg !16\n  %54 = bitcast i32 %50 to float, !dbg !16\n  %55 = bitcast i32 %51 to float, !dbg !16\n  %56 = bitcast i32 %52 to float, !dbg !16\n  %57 = fadd float %24, %44, !dbg !17\n  %58 = fadd float %25, %45, !dbg !17\n  %59 = fadd float %26, %46, !dbg !17\n  %60 = fadd float %27, %47, !dbg !17\n  %61 = fadd float %33, %53, !dbg !17\n  %62 = fadd float %34, %54, !dbg !17\n  %63 = fadd float %35, %55, !dbg !17\n  %64 = fadd float %36, %56, !dbg !17\n  %65 = getelementptr float, ptr addrspace(1) %2, i64 %15, !dbg !18\n  %66 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !18\n  %67 = bitcast float %57 to i32, !dbg !19\n  %68 = bitcast float %58 to i32, !dbg !19\n  %69 = bitcast float %59 to i32, !dbg !19\n  %70 = bitcast float %60 to i32, !dbg !19\n  tail call void asm sideeffect \"@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };\", \"r,r,r,r,l,b\"(i32 %67, i32 %68, i32 %69, i32 %70, ptr addrspace(1) %65, i1 %13) #2, !dbg !19\n  %71 = bitcast float %61 to i32, !dbg !19\n  %72 = bitcast float %62 to i32, !dbg !19\n  %73 = bitcast float %63 to i32, !dbg !19\n  %74 = bitcast float %64 to i32, !dbg !19\n  tail call void asm sideeffect \"@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };\", \"r,r,r,r,l,b\"(i32 %71, i32 %72, i32 %73, i32 %74, ptr addrspace(1) %66, i1 %14) #2, !dbg !19\n  ret void, !dbg !20\n}\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1\n\n; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)\ndeclare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1\n\nattributes #0 = { \"nvvm.reqntid\"=\"256\" }\nattributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }\nattributes #2 = { nounwind }\n\n!llvm.dbg.cu = !{!0}\n!llvm.module.flags = !{!2, !3}\n!llvm.ident = !{!4}\n\n!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: \"triton\", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)\n!1 = !DIFile(filename: \"test_add.py\", directory: \"/scratch/findhao/tritonparse/tests\")\n!2 = !{i32 2, !\"Debug Info Version\", i32 3}\n!3 = !{i32 4, !\"nvvm-reflect-ftz\", i32 1}\n!4 = !{!\"clang version 3.8.0 (tags/RELEASE_380/final)\"}\n!5 = distinct !DISubprogram(name: \"add_kernel_autotune\", linkageName: \"add_kernel_autotune\", scope: !1, file: !1, line: 52, type: !6, scopeLine: 52, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)\n!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)\n!7 = !{}\n!8 = !DILocation(line: 59, column: 24, scope: !5)\n!9 = !DILocation(line: 60, column: 24, scope: !5)\n!10 = !DILocation(line: 61, column: 41, scope: !5)\n!11 = !DILocation(line: 61, column: 28, scope: !5)\n!12 = !DILocation(line: 62, column: 21, scope: !5)\n!13 = !DILocation(line: 64, column: 24, scope: !5)\n!14 = !DILocation(line: 64, column: 16, scope: !5)\n!15 = !DILocation(line: 65, column: 24, scope: !5)\n!16 = !DILocation(line: 65, column: 16, scope: !5)\n!17 = !DILocation(line: 66, column: 12, scope: !5)\n!18 = !DILocation(line: 67, column: 21, scope: !5)\n!19 = !DILocation(line: 67, column: 30, scope: !5)\n!20 = !DILocation(line: 67, column: 4, scope: !5)\n","add_kernel_autotune.ptx":"//\n// Generated by LLVM NVPTX Back-End\n//\n\n.version 8.7\n.target sm_75\n.address_size 64\n\n\t// .globl\tadd_kernel_autotune     // -- Begin function add_kernel_autotune\n                                        // @add_kernel_autotune\n.visible .entry add_kernel_autotune(\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_0,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_1,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_2,\n\t.param .u32 add_kernel_autotune_param_3,\n\t.param .u64 .ptr .global .align 1 add_kernel_autotune_param_4\n)\n.reqntid 256\n{\n\t.reg .pred \t%p<7>;\n\t.reg .b32 \t%r<33>;\n\t.reg .b64 \t%rd<11>;\n\t.loc\t1 52 0                          // test_add.py:52:0\n$L__func_begin0:\n\t.loc\t1 52 0                          // test_add.py:52:0\n\n// %bb.0:\n\tld.param.b64 \t%rd7, [add_kernel_autotune_param_0];\n\tld.param.b64 \t%rd8, [add_kernel_autotune_param_1];\n$L__tmp0:\n\t.loc\t1 59 24                         // test_add.py:59:24\n\tmov.u32 \t%r25, %ctaid.x;\n\t.loc\t1 60 24                         // test_add.py:60:24\n\tshl.b32 \t%r26, %r25, 11;\n\tld.param.b64 \t%rd9, [add_kernel_autotune_param_2];\n\tld.param.b32 \t%r27, [add_kernel_autotune_param_3];\n\t.loc\t1 61 41                         // test_add.py:61:41\n\tmov.u32 \t%r28, %tid.x;\n\tshl.b32 \t%r29, %r28, 2;\n\tand.b32 \t%r30, %r29, 1020;\n\t.loc\t1 61 28                         // test_add.py:61:28\n\tor.b32 \t%r31, %r30, %r26;\n\tor.b32 \t%r32, %r31, 1024;\n\t.loc\t1 62 21                         // test_add.py:62:21\n\tsetp.lt.s32 \t%p1, %r31, %r27;\n\tsetp.lt.s32 \t%p2, %r32, %r27;\n\t.loc\t1 64 24                         // test_add.py:64:24\n\tmul.wide.s32 \t%rd10, %r31, 4;\n\tadd.s64 \t%rd1, %rd7, %rd10;\n\tadd.s64 \t%rd2, %rd1, 4096;\n\t.loc\t1 64 16                         // test_add.py:64:16\n\t// begin inline asm\n\tmov.u32 %r1, 0x0;\n\tmov.u32 %r2, 0x0;\n\tmov.u32 %r3, 0x0;\n\tmov.u32 %r4, 0x0;\n\t@%p1 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];\n\t// end inline asm\n\t// begin inline asm\n\tmov.u32 %r5, 0x0;\n\tmov.u32 %r6, 0x0;\n\tmov.u32 %r7, 0x0;\n\tmov.u32 %r8, 0x0;\n\t@%p2 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];\n\t// end inline asm\n\t.loc\t1 65 24                         // test_add.py:65:24\n\tadd.s64 \t%rd3, %rd8, %rd10;\n\tadd.s64 \t%rd4, %rd3, 4096;\n\t.loc\t1 65 16                         // test_add.py:65:16\n\t// begin inline asm\n\tmov.u32 %r9, 0x0;\n\tmov.u32 %r10, 0x0;\n\tmov.u32 %r11, 0x0;\n\tmov.u32 %r12, 0x0;\n\t@%p1 ld.global.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd3 + 0 ];\n\t// end inline asm\n\t// begin inline asm\n\tmov.u32 %r13, 0x0;\n\tmov.u32 %r14, 0x0;\n\tmov.u32 %r15, 0x0;\n\tmov.u32 %r16, 0x0;\n\t@%p2 ld.global.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd4 + 0 ];\n\t// end inline asm\n\t.loc\t1 66 12                         // test_add.py:66:12\n\tadd.f32 \t%r17, %r1, %r9;\n\tadd.f32 \t%r18, %r2, %r10;\n\tadd.f32 \t%r19, %r3, %r11;\n\tadd.f32 \t%r20, %r4, %r12;\n\tadd.f32 \t%r21, %r5, %r13;\n\tadd.f32 \t%r22, %r6, %r14;\n\tadd.f32 \t%r23, %r7, %r15;\n\tadd.f32 \t%r24, %r8, %r16;\n\t.loc\t1 67 21                         // test_add.py:67:21\n\tadd.s64 \t%rd5, %rd9, %rd10;\n\tadd.s64 \t%rd6, %rd5, 4096;\n\t.loc\t1 67 30                         // test_add.py:67:30\n\t// begin inline asm\n\t@%p1 st.global.v4.b32 [ %rd5 + 0 ], { %r17, %r18, %r19, %r20 };\n\t// end inline asm\n\t// begin inline asm\n\t@%p2 st.global.v4.b32 [ %rd6 + 0 ], { %r21, %r22, %r23, %r24 };\n\t// end inline asm\n\t.loc\t1 67 4                          // test_add.py:67:4\n\tret;\n$L__tmp1:\n$L__func_end0:\n                                        // -- End function\n}\n\t.file\t1 \"/scratch/findhao/tritonparse/tests/test_add.py\"\n\t.section\t.debug_abbrev\n\t{\n.b8 1                                   // Abbreviation Code\n.b8 17                                  // DW_TAG_compile_unit\n.b8 0                                   // DW_CHILDREN_no\n.b8 37                                  // DW_AT_producer\n.b8 8                                   // DW_FORM_string\n.b8 19                                  // DW_AT_language\n.b8 5                                   // DW_FORM_data2\n.b8 3                                   // DW_AT_name\n.b8 8                                   // DW_FORM_string\n.b8 16                                  // DW_AT_stmt_list\n.b8 6                                   // DW_FORM_data4\n.b8 27                                  // DW_AT_comp_dir\n.b8 8                                   // DW_FORM_string\n.b8 0                                   // EOM(1)\n.b8 0                                   // EOM(2)\n.b8 0                                   // EOM(3)\n\t}\n\t.section\t.debug_info\n\t{\n.b32 68                                 // Length of Unit\n.b8 2                                   // DWARF version number\n.b8 0\n.b32 .debug_abbrev                      // Offset Into Abbrev. Section\n.b8 8                                   // Address Size (in bytes)\n.b8 1                                   // Abbrev [1] 0xb:0x3d DW_TAG_compile_unit\n.b8 116                                 // DW_AT_producer\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 0\n.b8 2                                   // DW_AT_language\n.b8 0\n.b8 116                                 // DW_AT_name\n.b8 101\n.b8 115\n.b8 116\n.b8 95\n.b8 97\n.b8 100\n.b8 100\n.b8 46\n.b8 112\n.b8 121\n.b8 0\n.b32 .debug_line                        // DW_AT_stmt_list\n.b8 47                                  // DW_AT_comp_dir\n.b8 115\n.b8 99\n.b8 114\n.b8 97\n.b8 116\n.b8 99\n.b8 104\n.b8 47\n.b8 102\n.b8 105\n.b8 110\n.b8 100\n.b8 104\n.b8 97\n.b8 111\n.b8 47\n.b8 116\n.b8 114\n.b8 105\n.b8 116\n.b8 111\n.b8 110\n.b8 112\n.b8 97\n.b8 114\n.b8 115\n.b8 101\n.b8 47\n.b8 116\n.b8 101\n.b8 115\n.b8 116\n.b8 115\n.b8 0\n\t}\n\t.section\t.debug_macinfo\t{\t}\n","add_kernel_autotune.json":"{\"hash\": \"2af3cb93a0ff4763a6da19ccc07f0ff159e32a514d453c3c8b9e58f36e37356d\", \"target\": {\"backend\": \"cuda\", \"arch\": 75, \"warp_size\": 32}, \"num_warps\": 8, \"num_ctas\": 1, \"num_stages\": 3, \"warp_size\": 32, \"maxnreg\": null, \"cluster_dims\": [1, 1, 1], \"ptx_version\": null, \"ptx_options\": null, \"ir_override\": null, \"enable_fp_fusion\": true, \"launch_cooperative_grid\": false, \"launch_pdl\": false, \"supported_fp8_dtypes\": [\"fp8e4b15\", \"fp8e5\"], \"deprecated_fp8_dot_operand_dtypes\": [], \"default_dot_input_precision\": \"tf32\", \"allowed_dot_input_precisions\": [\"tf32\", \"tf32x3\", \"ieee\"], \"max_num_imprecise_acc_default\": 0, \"extern_libs\": [[\"libdevice\", \"/scratch/findhao/pta/triton/python/triton/backends/nvidia/lib/libdevice.10.bc\"]], \"debug\": false, \"backend_name\": \"cuda\", \"sanitize_overflow\": true, \"arch\": \"sm75\", \"triton_version\": \"3.4.0\", \"tensordesc_meta\": [], \"shared\": 0, \"tmem_size\": 0, \"global_scratch_size\": 0, \"global_scratch_align\": 1, \"name\": \"add_kernel_autotune\"}"},"python_source":{"file_path":"/scratch/findhao/tritonparse/tests/test_add.py","start_line":40,"end_line":68,"code":"@triton.autotune(\n    configs=[\n        triton.Config({'BLOCK_SIZE': 256}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 512}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 1024}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 1024}, num_warps=8),\n        triton.Config({'BLOCK_SIZE': 2048}, num_warps=4),\n        triton.Config({'BLOCK_SIZE': 2048}, num_warps=8),\n    ],\n    key=['n_elements']\n)\n@triton.jit\ndef add_kernel_autotune(\n    a_ptr,\n    b_ptr,\n    c_ptr,\n    n_elements,\n    BLOCK_SIZE: tl.constexpr,\n):\n    pid = tl.program_id(axis=0)\n    block_start = pid * BLOCK_SIZE\n    offsets = block_start + tl.arange(0, BLOCK_SIZE)\n    mask = offsets < n_elements\n\n    a = tl.load(a_ptr + offsets, mask=mask)\n    b = tl.load(b_ptr + offsets, mask=mask)\n    c = a + b\n    tl.store(c_ptr + offsets, c, mask=mask)\n"},"times":{"ir_initialization":608,"lowering_stages":[],"store_results":0},"source_mappings":{"ttir":{"1":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":1,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"3":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":3,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"4":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttir_line":4,"ttgir_lines":[2,4,5],"ptx_lines":[23,24,25,28,29,30]},"5":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttir_line":5,"ttgir_lines":[6,27],"ptx_lines":[31,32]},"6":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttir_line":6,"ttgir_lines":[7,28],"ptx_lines":[33,34,35,36]},"7":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttir_line":7,"ttgir_lines":[8,29],"ptx_lines":[37,38,39,40]},"8":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":8,"ttgir_lines":[9,10,30],"ptx_lines":[41,42,43]},"9":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":9,"ttgir_lines":[9,10,30],"ptx_lines":[41,42,43]},"10":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":10,"ttgir_lines":[11,12,31],"ptx_lines":[44,45,46]},"11":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":11,"ttgir_lines":[11,12,31],"ptx_lines":[44,45,46]},"12":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":12,"ttgir_lines":[13,14,32],"ptx_lines":[47,48,49,50]},"13":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":13,"ttgir_lines":[13,14,32],"ptx_lines":[47,48,49,50]},"14":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttir_line":14,"ttgir_lines":[15,33],"ptx_lines":[51,53,54,55,56,57,60,61,62,63,64]},"15":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":15,"ttgir_lines":[16,17,34],"ptx_lines":[66,67,68]},"16":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":16,"ttgir_lines":[16,17,34],"ptx_lines":[66,67,68]},"17":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttir_line":17,"ttgir_lines":[18,35],"ptx_lines":[69,71,72,73,74,75,78,79,80,81,82]},"18":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttir_line":18,"ttgir_lines":[19,36],"ptx_lines":[84,85,86,87,88,89,90,91,92]},"19":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":19,"ttgir_lines":[20,21,37],"ptx_lines":[93,94,95]},"20":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":20,"ttgir_lines":[20,21,37],"ptx_lines":[93,94,95]},"21":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttir_line":21,"ttgir_lines":[22,38],"ptx_lines":[96,98,101]},"22":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttir_line":22,"ttgir_lines":[23,39],"ptx_lines":[103,104,105,106]},"26":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttir_line":26,"ttgir_lines":[6,27],"ptx_lines":[31,32]},"27":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttir_line":27,"ttgir_lines":[7,28],"ptx_lines":[33,34,35,36]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttir_line":28,"ttgir_lines":[8,29],"ptx_lines":[37,38,39,40]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttir_line":29,"ttgir_lines":[9,10,30],"ptx_lines":[41,42,43]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttir_line":30,"ttgir_lines":[11,12,31],"ptx_lines":[44,45,46]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttir_line":31,"ttgir_lines":[13,14,32],"ptx_lines":[47,48,49,50]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttir_line":32,"ttgir_lines":[15,33],"ptx_lines":[51,53,54,55,56,57,60,61,62,63,64]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttir_line":33,"ttgir_lines":[16,17,34],"ptx_lines":[66,67,68]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttir_line":34,"ttgir_lines":[18,35],"ptx_lines":[69,71,72,73,74,75,78,79,80,81,82]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttir_line":35,"ttgir_lines":[19,36],"ptx_lines":[84,85,86,87,88,89,90,91,92]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttir_line":36,"ttgir_lines":[20,21,37],"ptx_lines":[93,94,95]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttir_line":37,"ttgir_lines":[22,38],"ptx_lines":[96,98,101]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttir_line":38,"ttgir_lines":[23,39],"ptx_lines":[103,104,105,106]}},"ttgir":{"2":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":2,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"4":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":4,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"5":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ttgir_line":5,"ttir_lines":[1,3,4],"ptx_lines":[23,24,25,28,29,30]},"6":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttgir_line":6,"ttir_lines":[5,26],"ptx_lines":[31,32]},"7":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttgir_line":7,"ttir_lines":[6,27],"ptx_lines":[33,34,35,36]},"8":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttgir_line":8,"ttir_lines":[7,28],"ptx_lines":[37,38,39,40]},"9":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":9,"ttir_lines":[8,9,29],"ptx_lines":[41,42,43]},"10":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":10,"ttir_lines":[8,9,29],"ptx_lines":[41,42,43]},"11":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":11,"ttir_lines":[10,11,30],"ptx_lines":[44,45,46]},"12":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":12,"ttir_lines":[10,11,30],"ptx_lines":[44,45,46]},"13":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":13,"ttir_lines":[12,13,31],"ptx_lines":[47,48,49,50]},"14":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":14,"ttir_lines":[12,13,31],"ptx_lines":[47,48,49,50]},"15":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttgir_line":15,"ttir_lines":[14,32],"ptx_lines":[51,53,54,55,56,57,60,61,62,63,64]},"16":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":16,"ttir_lines":[15,16,33],"ptx_lines":[66,67,68]},"17":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":17,"ttir_lines":[15,16,33],"ptx_lines":[66,67,68]},"18":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttgir_line":18,"ttir_lines":[17,34],"ptx_lines":[69,71,72,73,74,75,78,79,80,81,82]},"19":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttgir_line":19,"ttir_lines":[18,35],"ptx_lines":[84,85,86,87,88,89,90,91,92]},"20":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":20,"ttir_lines":[19,20,36],"ptx_lines":[93,94,95]},"21":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":21,"ttir_lines":[19,20,36],"ptx_lines":[93,94,95]},"22":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttgir_line":22,"ttir_lines":[21,37],"ptx_lines":[96,98,101]},"23":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttgir_line":23,"ttir_lines":[22,38],"ptx_lines":[103,104,105,106]},"27":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ttgir_line":27,"ttir_lines":[5,26],"ptx_lines":[31,32]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ttgir_line":28,"ttir_lines":[6,27],"ptx_lines":[33,34,35,36]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ttgir_line":29,"ttir_lines":[7,28],"ptx_lines":[37,38,39,40]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ttgir_line":30,"ttir_lines":[8,9,29],"ptx_lines":[41,42,43]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ttgir_line":31,"ttir_lines":[10,11,30],"ptx_lines":[44,45,46]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ttgir_line":32,"ttir_lines":[12,13,31],"ptx_lines":[47,48,49,50]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ttgir_line":33,"ttir_lines":[14,32],"ptx_lines":[51,53,54,55,56,57,60,61,62,63,64]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ttgir_line":34,"ttir_lines":[15,16,33],"ptx_lines":[66,67,68]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ttgir_line":35,"ttir_lines":[17,34],"ptx_lines":[69,71,72,73,74,75,78,79,80,81,82]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ttgir_line":36,"ttir_lines":[18,35],"ptx_lines":[84,85,86,87,88,89,90,91,92]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ttgir_line":37,"ttir_lines":[19,20,36],"ptx_lines":[93,94,95]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ttgir_line":38,"ttir_lines":[21,37],"ptx_lines":[96,98,101]},"39":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ttgir_line":39,"ttir_lines":[22,38],"ptx_lines":[103,104,105,106]}},"ptx":{"23":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":23,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"24":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":24,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"25":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":25,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"28":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":28,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"29":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":29,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"30":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":52,"column":0,"ptx_line":30,"ttir_lines":[1,3,4],"ttgir_lines":[2,4,5]},"31":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ptx_line":31,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"32":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":59,"column":24,"ptx_line":32,"ttir_lines":[5,26],"ttgir_lines":[6,27]},"33":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":33,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"34":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":34,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"35":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":35,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"36":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":60,"column":24,"ptx_line":36,"ttir_lines":[6,27],"ttgir_lines":[7,28]},"37":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":37,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"38":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":38,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"39":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":39,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"40":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":41,"ptx_line":40,"ttir_lines":[7,28],"ttgir_lines":[8,29]},"41":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":41,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"42":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":42,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"43":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":61,"column":28,"ptx_line":43,"ttir_lines":[8,9,29],"ttgir_lines":[9,10,30]},"44":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":44,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"45":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":45,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"46":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":62,"column":21,"ptx_line":46,"ttir_lines":[10,11,30],"ttgir_lines":[11,12,31]},"47":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":47,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"48":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":48,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"49":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":49,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"50":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":24,"ptx_line":50,"ttir_lines":[12,13,31],"ttgir_lines":[13,14,32]},"51":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":51,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"53":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":53,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"54":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":54,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"55":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":55,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"56":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":56,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"57":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":57,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"60":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":60,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"61":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":61,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"62":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":62,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"63":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":63,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"64":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":64,"column":16,"ptx_line":64,"ttir_lines":[14,32],"ttgir_lines":[15,33]},"66":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":66,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"67":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":67,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"68":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":24,"ptx_line":68,"ttir_lines":[15,16,33],"ttgir_lines":[16,17,34]},"69":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":69,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"71":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":71,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"72":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":72,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"73":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":73,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"74":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":74,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"75":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":75,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"78":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":78,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"79":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":79,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"80":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":80,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"81":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":81,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"82":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":65,"column":16,"ptx_line":82,"ttir_lines":[17,34],"ttgir_lines":[18,35]},"84":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":84,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"85":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":85,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"86":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":86,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"87":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":87,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"88":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":88,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"89":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":89,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"90":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":90,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"91":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":91,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"92":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":66,"column":12,"ptx_line":92,"ttir_lines":[18,35],"ttgir_lines":[19,36]},"93":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":93,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"94":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":94,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"95":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":21,"ptx_line":95,"ttir_lines":[19,20,36],"ttgir_lines":[20,21,37]},"96":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":96,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"98":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":98,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"101":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":30,"ptx_line":101,"ttir_lines":[21,37],"ttgir_lines":[22,38]},"103":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":103,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"104":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":104,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"105":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":105,"ttir_lines":[22,38],"ttgir_lines":[23,39]},"106":{"file":"/scratch/findhao/tritonparse/tests/test_add.py","line":67,"column":4,"ptx_line":106,"ttir_lines":[22,38],"ttgir_lines":[23,39]}},"python":{"52":{"ttir_lines":["1","3","4"],"ttgir_lines":["2","4","5"],"ptx_lines":["23","24","25","28","29","30"]},"59":{"ttir_lines":["5","26"],"ttgir_lines":["6","27"],"ptx_lines":["31","32"]},"60":{"ttir_lines":["6","27"],"ttgir_lines":["7","28"],"ptx_lines":["33","34","35","36"]},"61":{"ttir_lines":["7","8","9","28","29"],"ttgir_lines":["8","9","10","29","30"],"ptx_lines":["37","38","39","40","41","42","43"]},"62":{"ttir_lines":["10","11","30"],"ttgir_lines":["11","12","31"],"ptx_lines":["44","45","46"]},"64":{"ttir_lines":["12","13","14","31","32"],"ttgir_lines":["13","14","15","32","33"],"ptx_lines":["47","48","49","50","51","53","54","55","56","57","60","61","62","63","64"]},"65":{"ttir_lines":["15","16","17","33","34"],"ttgir_lines":["16","17","18","34","35"],"ptx_lines":["66","67","68","69","71","72","73","74","75","78","79","80","81","82"]},"66":{"ttir_lines":["18","35"],"ttgir_lines":["19","36"],"ptx_lines":["84","85","86","87","88","89","90","91","92"]},"67":{"ttir_lines":["19","20","21","22","36","37","38"],"ttgir_lines":["20","21","22","23","37","38","39"],"ptx_lines":["93","94","95","96","98","101","103","104","105","106"]}}}}}
